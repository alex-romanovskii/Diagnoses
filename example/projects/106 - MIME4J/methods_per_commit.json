{"442ce56ca2e1a3fdfbaca6385d245bbe91912cd7": ["core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "core/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)"], "0055d8ac790a6a2d2157707d223d10453bb24efa": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.MessageBuilderImpl(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setDecodeMonitor(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)"], "6b69ca5daf8a0e936fcbda901fd704692f189bc2": ["src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.main(String)"], "be831dff83e23a64b2393cef2fe09a94b7e53834": ["core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isEmptyStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()"], "fb36b9cf0b580f025e6b0446eb091b3c6138ddd5": ["core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "core/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "core/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)", "core/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)"], "00965dfd1e38b3d47646db015c301ae827c14349": ["src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.setUp()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.getFile(String)", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,File)", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.suite()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String)", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.getFile(String)"], "998ef6d6cc7c9a93c42c30e8740ba569271b559a": ["src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.createMessage(byte)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()"], "2ad221d8532bd6f5086638f798b24c0077010e10": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()"], "153257ad3dd3a47e9951dc98c6bff0eef11d4aa6": ["src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.copy(InputStream,OutputStream)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.testCopy()", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.setUp()"], "faa4bc3cc771f4b6a199cfeb17d8dd8a368929b9": ["dom/src/main/java/org/apache/james/mime4j/dom/MessageServiceFactory.java@org.apache.james.mime4j.dom.MessageServiceFactory.newInstance()", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageFormatter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewInstance()"], "9bdc1fced2207f9e635f3a46f9e38be73d858117": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.getMaxHeaderLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMalformedHeaderStartsBody(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setHeadlessParsing(String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.isMalformedHeaderStartsBody()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.isStrictParsing()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.getMaxHeaderCount()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.getMaxContentLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.toString()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.getMaxLineLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.MimeConfig()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.isCountLineNumbers()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.getHeadlessParsing()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setCountLineNumbers(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.clone()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxLineLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setStrictParsing(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxContentLen(long)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeConfig,EntityState,EntityState,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeConfig,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,BodyDescriptorBuilder)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()"], "c3d5a784746a9030be8535806042b9adc427226b": ["dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreamble(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreamble()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogue(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogueRaw(ByteSequence)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogue()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreambleRaw(ByteSequence)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogue()", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreamble()", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(Multipart)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreamble(String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogue(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.assertEquals(byte,byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()"], "89d5b6a748f734850c633f55d0815fd8b6c4c38b": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressDisplayName(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isAtomPhrase(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressLocalPart(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isDotAtomText(String)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getEncodedString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getEncodedString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDisplayString(boolean)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressLocalPart()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()"], "1cc0295258cb5c924bf5d2681fd491385cc7fe5c": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.addField(Field)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.addField(Field)", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String,String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.field(Field)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.field(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig,StorageProvider)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(String)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(String)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getFieldName()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getFieldValue()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getField()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getFieldName()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getBody()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getName()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.RawField(String,String,String)", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.toString()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getRaw()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/javorg/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "src/test/javorg/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(String)", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(String)"], "3434dab8cf4d3a517bed644ad1d97de0f1a39d02": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRaw()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRecurse()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setFlat()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRaw()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setFlat()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRecurse()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getField()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.stateToString(EntityState)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MutableBodyDescriptor,int,int,MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.stateToString(int)", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMessage()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,int,int,MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getContentStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMessage()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,int,int,MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.isRaw()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.next()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,int)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.next()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.isRaw()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.RawEntity(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.advance()", "core/src/main/javorg/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.advance()", "core/src/main/javorg/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.RawEntity(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "core/src/test/javorg/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "core/src/test/javorg/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()", "core/src/test/javorg/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)"], "8736f0810ccd958525d95cd32e9d59e08cb8d1b6": ["dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testMimeVersion()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()"], "a8c31a292352e1f805a67aab81c06dd9e3afb90c": ["src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()"], "b781e935428350372d13fe78f388f923156cd136": ["dom/src/main/javorg/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.print()", "dom/src/main/javorg/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.main(String)", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()"], "67b9f606fee77e94d8fe73e3aba89e955f80b665": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.setField(Field)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.removeFields(String)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()"], "385099cd30d0b91dfceccbca5f8851e2f356674e": ["src/main/javorg/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempFile(String)", "src/main/javorg/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.SimpleTempFile(String)"], "869168e66ca0fd16e5c7f894b2b3c5c00e7d7be0": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.checkNextIs(int)"], "4f5569a6cdd133fc1c5bde8ffa9b7b0e11825612": ["src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getAddressList()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getParseException()", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.AddressListField(String,String,String,AddressList,ParseException)", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getBoundary()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMultipart()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMimeType(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMimeType(String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset()", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMultipart()", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getBoundary()", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.ContentTypeField(String,String,String,String,Map,ParseException)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse()", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getDate()", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.DateTimeField(String,String,String,Date,ParseException)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getMailbox()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getParseException()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.MailboxField(String,String,String,Mailbox,ParseException)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse()", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getMailboxList()", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getParseException()", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.MailboxListField(String,String,String,MailboxList,ParseException)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,String)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,String,String)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)"], "98399d48b50352ccd624771b24a5d243a241d2fc": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.loadStream(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.ParserStreamContentHandler(Entity,MessageImplFactory,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.epilogue(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.preamble(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.startHeader()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.raw(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.ParserStreamContentHandler(Entity,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.startMultipart(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.startMessage()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.endMessage()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.endBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.expect(Class)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.endMultipart()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.body(BodyDescriptor,InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.startBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/ParserStreamContentHandler.java@org.apache.james.mime4j.message.ParserStreamContentHandler.endHeader()"], "bc1993b1b87ef97dcd37c658c349a0b947d8a3cf": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()"], "e183124e9205688bb8f2eba24fcb44f390669841": ["src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String)", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String)", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String,String)", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,ByteSequence)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.loadStream(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBytes(ByteSequence,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeEntity(Entity,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getCharsetEncoder(ContentTypeField)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getWriter(ContentTypeField,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.ignoreEncoder(Charset)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBody(Body,OutputStream)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.replaceBodyPart(BodyPart,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogueRaw(ByteSequence)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogueRaw()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(Multipart)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogue()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreambleRaw()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreamble()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreambleRaw(ByteSequence)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogue()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreamble()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.replaceBodyPart(BodyPart,int)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseBody()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseName()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getBody()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getName()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.toString()", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.RawField(ByteSequence,int)", "src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getRaw()", "src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.RawField(String,String,String)", "src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getRaw()", "src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getBody()", "src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getName()", "src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.toString()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.byteAt(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,boolean)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,int,boolean)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,byte,int,int)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(Charset,String)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence,int,int)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(String)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence)", "src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence,int,int)", "src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.toByteArray()", "src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.byteAt(int)", "src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.length()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getBody()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getRaw()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getBody()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getRaw()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getName()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getName()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.TestField(String,String)", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.TestField(String,String)", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(ByteSequence)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteSpecialCharacters()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMail()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachment()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.decode(ByteSequence)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)", "src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)"], "fee6200c22a7252ca907806fb02fbea140974185": ["src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.parseContentType(String)", "src/main/javorg/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)"], "4b59934fef38ccd8d5a44286632dad872192fa01": ["core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionStringThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionString()", "core/src/test/javorg/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionThrowable()", "core/src/test/javorg/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionStringThrowable()", "core/src/test/javorg/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionString()", "core/src/test/java/org/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionMimeException()", "core/src/test/javorg/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionMimeException()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeNoLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testNoLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteFlush()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeLs(String)", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeNoLs(String)", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testNoLineSeparators()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteFlush()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testLineSeparators()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteOffset()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteInt()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64OutputStream()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64Encoder()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.setUp()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64Encoder()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64OutputStream()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonWhiteSpaceBetweenEncodedWordsIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainQuestionMark()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeB()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainDollarSign()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testInvalidEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testFunnyInputDoesNotRaiseOutOfMemoryError()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testTextBeforeAndAfterEncodedWordIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWordsWithFallback()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayStartWithAnEqualsSign()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testWhiteSpaceBetweenEncodedWordsGetsRemoved()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testWhiteSpaceBetweenEncodedWordsGetsRemoved()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testTextBeforeAndAfterEncodedWordIsRetained()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainDollarSign()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testInvalidEncodedWordsAreIgnored()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeB()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonEncodedWordsAreIgnored()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWordsWithFallback()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainQuestionMark()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayStartWithAnEqualsSign()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonWhiteSpaceBetweenEncodedWordsIsRetained()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testFunnyInputDoesNotRaiseOutOfMemoryError()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRestricted()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressLocalPart()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplit()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWord()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeHeaderParameter()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRegular()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeB()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWord()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeB()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplit()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRestricted()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRegular()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeHeaderParameter()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressLocalPart()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testLetterEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testLetterEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.setUp()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpacesBeforeEOL()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream6()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream6()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpacesBeforeEOL()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeSpecials()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeWrapping()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeSpecials()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.setUp()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/javorg/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/javorg/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/javorg/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "core/src/test/javorg/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testAutomaticContentDecoding()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMultipart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startBodyPart()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMultipart(BodyDescriptor)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMultipart()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testAutomaticContentDecoding()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endBodyPart()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.nextIs(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.nextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkBody(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkBody(String)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.checkState(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.checkState(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.checkState(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.checkState(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEmpty()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParse()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax1()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax2()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseFolded()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseEmptyParam()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEscaped()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseEmptyParam()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEmpty()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax1()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEscaped()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax2()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseFolded()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParse()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.tearDown()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testExpandAppend()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testSetLength()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testAppendOneByte()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testRemove()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testSetInvalidLength()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testInvalidRemove()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testInvalidAppend()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testConstructor()", "core/src/test/java/org/apache/james/mime4j/util/ByteArrayBufferTest.java@org.apache.james.mime4j.util.ByteArrayBufferTest.testSimpleAppend()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupNullInput()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupFailure()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testNonASCII()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testAllASCII()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookup()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testAllASCII()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupFailure()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookup()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupNullInput()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testNonASCII()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFoldOverlyLongNonWhitespace()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testUnfold()", "core/src/test/javorg/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "core/src/test/javorg/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFoldOverlyLongNonWhitespace()", "core/src/test/javorg/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testUnfold()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.tearDown()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewInstance()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewInstance()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageServiceFactoryTest.java@org.apache.james.mime4j.dom.MessageServiceFactoryTest.testNewMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testDisposeGetsPropagatedToBody()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testMimeVersion()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testIsMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testIsMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testDisposeGetsPropagatedToBody()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testMimeVersion()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.assertEquals(byte,byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.tearDown()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.assertEquals(byte,byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetSize()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetReadDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetFilename()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetSize()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetReadDate()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithEmptyElement()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithUnderscore()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguage()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageEmpty()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguage()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithComments()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithEmptyElement()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithUnderscore()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithBlanks()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetQuotedLocation()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithCommens()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetSimpleLocation()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetSimpleLocation()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithCommens()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithBlanks()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetQuotedLocation()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithNonameParam()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithMultipleSemiColon()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithNonameParam()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithMultipleSemiColon()", "dom/src/test/javorg/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testdd()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDSTNoDayOfWeek()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDST()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testMime4j219()", "dom/src/test/javorg/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDSTNoDayOfWeek()", "dom/src/test/javorg/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDST()", "dom/src/test/javorg/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testMime4j219()", "dom/src/test/javorg/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testdd()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed1()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed3()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed2()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed4()", "dom/src/test/javorg/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed4()", "dom/src/test/javorg/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed2()", "dom/src/test/javorg/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed1()", "dom/src/test/javorg/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed3()", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testEmptyLine()", "dom/src/test/javorg/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testEmptyLine()", "dom/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "dom/src/test/javorg/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxEquals()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxHashCode()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxHashCode()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxEquals()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testLexicalError()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxEncoded()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testSimpleForm()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testFlatten()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testLexicalError()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxEncoded()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testEmptyGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testEmptyGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressQuotedLocalPart()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmptyAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEncoded()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxListEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseRoute()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressStartingWithAt()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseNoRoute()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNonASCII()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingGarbage()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingComments()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTruncated()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNullAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParsePartialQuotes()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseDomain()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEncoded()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingComments()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseDomain()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNullAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNonASCII()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseRoute()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressStartingWithAt()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTruncated()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmpty()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testSimpleForm()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParsePartialQuotes()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressQuotedLocalPart()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingGarbage()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testFlatten()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxListEmpty()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmptyAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseNoRoute()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/java/org/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()", "dom/src/test/javorg/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "dom/src/test/javorg/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "dom/src/test/javorg/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "dom/src/test/javorg/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "dom/src/test/javorg/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "dom/src/test/javorg/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "dom/src/test/javorg/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "dom/src/test/javorg/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testAddField()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentId()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoDefaultToUsAsciiWhenUntyped()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetContentLength()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDescription()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersion()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentMD5Url()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionDefault()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testLanguageParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationWithComment()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetContentLength()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentId()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testAddField()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationWithComment()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionDefault()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersion()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testLanguageParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentMD5Url()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionType()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDescription()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoDefaultToUsAsciiWhenUntyped()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "storage/src/test/javorg/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "storage/src/test/javorg/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "storage/src/test/javorg/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "storage/src/test/javorg/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "storage/src/test/javorg/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "storage/src/test/javorg/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "storage/src/test/javorg/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "storage/src/test/javorg/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.copyTest(SingleBody)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.copyTest(SingleBody)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)"], "0c5c74bb7b46b698c045a942a08335732c935f60": ["core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isMalformedHeaderStartsBody()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMalformedHeaderStartsBody(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.toString()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.toString()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isMalformedHeaderStartsBody()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMalformedHeaderStartsBody(boolean)"], "96700349bd451c706a7feec2250ece668e368979": ["dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateWithExtraLeadingWhiteSpace()"], "9d26d3d5a807a2b59d1bf254f8a7e7d314f77b9c": ["core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isFullyConsumed()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isEmptyStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeMultipart(Multipart,OutputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()"], "f92e1786d2b9f8a5a6097d1520e044f6dd1c4ac5": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/test/javorg/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/javorg/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testAddField()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetParameters()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testAddField()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMediaType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType(ContentTypeField,ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getSubType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMultipart()", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMimeType(String)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType(ContentTypeField,ContentTypeField)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,FieldParser,BodyFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,BodyFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setFieldParser(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,FieldParser,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,FieldParser,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,FieldParser,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getDecodeMonitor()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getContentLength()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getContentTypeParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getMediaType()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getSubType()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.toString()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler()", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()"], "b87fab02d923849e478f60a84d7d9c44d6afa528": ["examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImageBodyPart(BodyFactory,BufferedImage)", "examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(BodyFactory,String)", "examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.renderSampleImage()", "examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.storeImage(StorageProvider,BufferedImage,String)", "examples/src/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)"], "8f8c265cfa628885b9c74dfe452772c1b54b1a44": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)"], "19cfb5765b2c0b443f3ea6e7a077041ea6d69402": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)"], "ed80834e0efc298e710c343ddeff8c289b4aaf69": ["dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeHeader(Header,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeHeader(Header,OutputStream)", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)"], "98fdb53164da70b2fdf88c5de2588cadfe00c56d": ["src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)"], "963b65d79e6601d85c745ee9f3f53f66109ab960": ["core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLocation(String)", "core/src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLocation(String)"], "61b9c92a8fa1ccb631a440474e9ecc509da8f6d3": ["src/main/java/org/apache/james/mime4j/io/MaxHeaderLimitException.java@org.apache.james.mime4j.io.MaxHeaderLimitException.MaxHeaderLimitException(String)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxLineLen()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxHeaderCount(int)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxHeaderCount()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setStrictParsing(boolean)", "src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setStrictParsing(boolean)", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderCount()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()"], "f472147eb521c157de6e44e78f8f46d99daad106": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()"], "4e05451b299957ea5c2cee794ee0d5fa1eaa41d4": ["src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getSecretKeySpec()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.delete()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.close()", "src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.reset()", "src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.getInstance()", "src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.setInstance(StorageProvider)", "src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.MemoryStorage(byte,int)", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.delete()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.addReference()", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.delete()", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.incrementCounter()", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.decrementCounter()", "src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte)", "src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.toStorage()", "src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.close()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorage(File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.TempFileStorage(File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.close()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.delete()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.delete()", "src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.tearDown()", "src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.delete()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.getInputStream()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.delete()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.getInputStream()", "src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCipherStorageProvider()", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testThresholdStorageProvider()", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testTempFileStorageProvider()", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.createData(int)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testMemoryStorageProvider()"], "381605f899761283d37825a9d2545b2b2e34de19": ["dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageFormatter()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageFormatter()"], "d559dd351091e7938f9c9ce4a9fa7319a578651f": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)"], "a88b4705e2b91e16e65307f3d8b9d4a8f9a67423": ["src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()"], "37cf3c75e654dc0ba8a70dff2e56bbafa044224f": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseSimpleMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.tearDown()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.checkState(int)", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.setUp()"], "704df2aad2ed8c210d6929cfe310e9e5ab01e7b5": ["src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read(byte,int,int)"], "326eb7c095d0d1f3307ca35650ead8423592418d": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,Collection)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,Mailbox[])", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()"], "912f62936934cfeb0112291745d092f30a5bbed0": ["dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)"], "ca9f8c5c363822800f353f878ef8b039c8638fe7": ["core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyContent(ByteSequence,ParserCursor,BitSet,StringBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,BitSet)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseToken(ByteSequence,ParserCursor,BitSet)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.INIT_BITSET(int[])", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.isOneOf(int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseToken(ByteSequence,ParserCursor,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyContent(ByteSequence,ParserCursor,int,StringBuilder)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicTokenParsing()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingWithQuotedPairs()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingQuotedValuesWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithUnquotedBlanks()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingWithQuotedPairs()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingQuotedValuesWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithUnquotedBlanks()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicTokenParsing()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseGroup(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.createMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddressList(ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddress(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseDomain(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddress(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxes(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseGroup(ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddressList(String)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(ByteSequence,ParserCursor,int)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor,int)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseDomain(ByteSequence,ParserCursor,int)", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testTortureTest()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressQuotedLocalPart()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxListEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingGarbage()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingComments()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTruncated()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseDomain()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingComments()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseDomain()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingGarbage()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTruncated()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressQuotedLocalPart()"], "00c9d8f54eb02b81566493f647eaed970e41fa1b": ["src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testZeroLengthInput()", "src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLongLine()", "src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLineLengthShorterThanInput()", "src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLineLengthEqualInput()", "src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLineLengthLongerThanInput()", "src/test/javorg/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLongLine()"], "6c969882a833b1ad5fed9e66daba6dde3c898c93": ["dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.setSubType(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.create(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.getPreamble()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.replaceBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.getBodyParts()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.getSubType()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.MultipartBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.setPreamble(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.removeBodyPart(int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.getEpilogue()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.setEpilogue(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.getCount()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBodyPart(Entity)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImageBody(StorageBodyFactory,BufferedImage)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(StorageBodyFactory,String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(StorageBodyFactory,BufferedImage)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)"], "9c3b4c5557bc8452824fa40157c2cd8d0c98fe00": ["examples/src/main/java/org/apache/james/mime4j/samples/mbox/IterateOverMbox.java@org.apache.james.mime4j.samples.mbox.IterateOverMbox.saveMessageToFile(int,CharBuffer)", "examples/src/main/java/org/apache/james/mime4j/samples/mbox/IterateOverMbox.java@org.apache.james.mime4j.samples.mbox.IterateOverMbox.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/mbox/IterateOverMbox.java@org.apache.james.mime4j.samples.mbox.IterateOverMbox.messageSummary(InputStream)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.ByteBufferInputStream.read()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.toString()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.ByteBufferInputStream(ByteBuffer)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.equals(Object)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.read(byte,int,int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.asInputStream(Charset)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.hashCode()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.asCharArray()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.CharBufferWrapper(CharBuffer)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.asInputStreamUTF8Encoded()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.ByteBufferInputStream.read(byte,int,int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.ByteBufferInputStream.ByteBufferInputStream(ByteBuffer)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.read()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MessageIterator.remove()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.fromFile(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.next()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.iterator()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.Builder(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.saveFindPositions(Matcher)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.fromFile(File)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MessageIterator.next()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.charset(Charset)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.initMboxIterator()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.MboxIterator(File,Charset,String,int,int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.updateEndOfInputFlag()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.build()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.Builder(File)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.Builder(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.flags(int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.close()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.fromLine(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.charset(Charset)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.remove()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.Builder(File)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.maxMessageSize(int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MessageIterator.hasNext()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.build()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.bufferDetailsToString(Buffer)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.maxMessageSize(int)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.fromLine(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.decodeNextCharBuffer()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.hasNext()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.Builder.flags(int)", "mbox/src/test/java/org/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.iterateWithMaxMessage(int)", "mbox/src/test/java/org/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.testIterator()", "mbox/src/test/java/org/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.testIteratorLoop()"], "4bba3178297288dc18f72fd16d570ec32650a6e0": ["core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.ExampleMessageTestCase(File,URL)", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getResourceBase()", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getResource()", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getFilenameBase()", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getConfig()", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getSourceFile()", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestSuiteBuilder.java@org.apache.james.mime4j.ExampleMessageTestSuiteBuilder.ExampleMessageTestSuiteBuilder(ExampleMessageTestCaseFactory)", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestSuiteBuilder.java@org.apache.james.mime4j.ExampleMessageTestSuiteBuilder.addAllTests(TestSuite)", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestSuiteBuilder.java@org.apache.james.mime4j.ExampleMessageTestSuiteBuilder.addTests(TestSuite,String)", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestSuiteBuilder.java@org.apache.james.mime4j.ExampleMessageTestSuiteBuilder.build()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.create(File,URL)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(File,URL)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.suite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.suite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,URL)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.create(File,URL)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.suite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(File,URL)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,URL)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.suite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.suite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(File,URL)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.create(File,URL)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String,URL)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.suite()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.bufferedReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()"], "ee24d30eddd369ec36056fcc8d2171d6be55ab8c": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setMutableBodyDescriptorFactory(MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setStorageProvider(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setMimeEntityConfig(MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.MessageBuilderImpl(StorageProvider)"], "d0d17ec02579e07e4ae7264f0afce507ec65d461": ["core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.parseContentType(Field)", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.parseContentType(Field)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testMultipartNoBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.build()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMultipartNoBoundary()"], "ec7a5ce58bb60dec90378f1abcf6e6790cbb24a5": ["src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.removeBody()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetBodyTwice()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetBody()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testRemoveBody()"], "c3c53363df2cdcf46f695d9f7b79e249aaba65f1": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)"], "7aca49bdd9d839db9c0235c84e5f07c6d68bcc8c": ["core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getInputStream()", "core/src/main/javorg/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getInputStream()"], "d1f79405f63a72e47f4d06bf52b9e953e5049683": ["src/main/java/org/apache/james/mime4j/MimeParseEventException.java@org.apache.james.mime4j.MimeParseEventException.getEvent()", "src/main/java/org/apache/james/mime4j/MimeParseEventException.java@org.apache.james.mime4j.MimeParseEventException.MimeParseEventException(MimeTokenStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.toString()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.hashCode()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.monitor(Event)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.warn(Event)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.Event(String)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.equals(Object)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream(boolean)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createStrictValidationStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Event(String)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.message(Event)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.hashCode()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.toString()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.equals(Object)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.debug(Event)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()"], "d34dd48ee07af23017c607f0741dc1183253a97f": ["src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.addField(String,String)", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getHeaderParams(String)", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isBase64Encoded()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMimeType(String)", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getBoundary()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.BodyDescriptor()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.BodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getParameters()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getCharset()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.toString()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMessage()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMultipart()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getMimeType()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getTransferEncoding()", "src/main/javorg/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isQuotedPrintableEncoded()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.toString()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getBoundary()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getParameters()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getMimeType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getContentLength()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getTransferEncoding()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getCharset()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMultipart(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isSameMimeType(String,String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMessage(String)", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()"], "3e5738a159c9f6f0b996ae8a4425eb09e816b1d4": ["core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.decodePad(int,int,byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpectedEof(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(int,InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpecedPad(int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read()", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpectedEof(int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpecedPad(int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.decodePad(int,int,byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(int,InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueData()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decodeSpecialSequence()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decode()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decode()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueBlanks()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(int,InputStream,boolean)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decodeSpecialSequence()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueData()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.remove(int,int)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidRemove()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testRemove()"], "74716ba508bca1c4743d7ea50ed3d4a52ce157a0": ["core/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.initData(int)", "core/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.compare(byte,byte)", "core/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "core/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "core/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "core/benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.initData(int)", "core/benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.main(String)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.createTest(int)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.AbstractContentHandlerTest.run(byte,int)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "core/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "core/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(BodyFactory,String)", "core/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.renderSampleImage()", "core/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.storeImage(StorageProvider,BufferedImage,String)", "core/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "core/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(BodyFactory,BufferedImage)", "core/examples/src/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "core/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "core/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "core/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "core/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "core/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "core/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(Throwable)", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(String)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.decodePad(int,int,byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpectedEof(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpecedPad(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush0()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writeLineSeparator()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close0()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writePad()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.checkLineSeparator(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.dequeue()", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.clear()", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.enqueue(byte)", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.count()", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.iterator()", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.ByteQueue()", "core/src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.ByteQueue(int)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapQuotedPrintable(OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapBase64(OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.copy(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeBase64(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWord(String,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBaseQuotedPrintable(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hexDigit(int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(String,String,int,Charset,byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressDisplayName(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hasToBeEncoded(String,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressLocalPart(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isToken(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encode(String,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeIfNecessary(String,Usage,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.initChars(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeHeaderParameter(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isAtomPhrase(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.quote(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isDotAtomText(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.bEncodedLength(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.escape(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encode(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.lineBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.completeEncoding()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.softBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.initEncoding(OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.writePending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.flushOutput()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.plain(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.clearPending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.write(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.populatePushbackQueue()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flush()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.get()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.isEmpty()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.hasNext()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.remove()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.next()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.decrement(int)", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.increment(int)", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.iterator()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.size()", "core/src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.add(byte)", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getMediaType()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getMimeType()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.parseContentType(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.toString()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getContentTypeParameters()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getBoundary()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getCharset()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getTransferEncoding()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getContentLength()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getSubType()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.DefaultBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.addField(Field)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentId(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentId()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDescription(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionCreationDate()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionModificationDate()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeMajorVersion()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeVersionParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLanguageParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLocationParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLanguage()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDescription()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeMinorVersion()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionFilename()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseDate(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionType()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseMimeVersion(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLocation(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionParameters()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentMD5Raw()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLocation()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseMD5(String)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.addField(Field)", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionSize()", "core/src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionReadDate()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "core/src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getAddressList()", "core/src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.AddressListField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse()", "core/src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getReadDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getFilename()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isDispositionType(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isInline()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParameters()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.ContentDispositionField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getDispositionType()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getModificationDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getSize()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getCreationDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isAttachment()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parseDate(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParameter(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding()", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.ContentTypeField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMultipart()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMimeType(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getBoundary()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.DateTimeField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getDate()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date0(String,Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox0(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.checkValidFieldName(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidMimeType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList0(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "core/src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse()", "core/src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getMailbox()", "core/src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.MailboxField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getMailboxList()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.MailboxListField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(String,Throwable)", "core/src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(Throwable)", "core/src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(String)", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.getValue()", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse()", "core/src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.getDisplayString()", "core/src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.addMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.toString()", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.size()", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.main(String)", "core/src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuilder,Token)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "core/src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "core/src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "core/src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.size()", "core/src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toString()", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getName()", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,Mailbox[])", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,Collection)", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getDisplayString(boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getEncodedString()", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getMailboxes()", "core/src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.doAddMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,DomainList,String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getCanonicalizedAddress()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getName()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.equals(Object)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getRoute()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDomain()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDisplayString(boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.hashCode()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getEncodedString()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddress()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getLocalPart()", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "core/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.print()", "core/src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.size()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getHour()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.toString()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getYear()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMonth()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMinute()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.hashCode()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDate()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.print()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToYear(String)", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDay()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getTimeZone()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getSecond()", "core/src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.equals(Object)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.length()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.clear()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.expand(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.hasBufferedData()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.buf()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.ensureCapacity(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.limit()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.pos()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.skip(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.truncate()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.charAt(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.capacity()", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.close()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.getBytesLeft()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.enforceLimit()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.LimitedInputStream(InputStream,long)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.LineNumberInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.getLineNumber()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStream.java@org.apache.james.mime4j.io.LineReaderInputStream.LineReaderInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.eof()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.toString()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.isUsed()", "core/src/main/java/org/apache/james/mime4j/io/MaxHeaderLimitException.java@org.apache.james.mime4j.io.MaxHeaderLimitException.MaxHeaderLimitException(String)", "core/src/main/java/org/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.eof()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.toString()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isLastPart()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.skipBoundary()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.endOfStream()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.hasData()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.available()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.getPosition()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.mark(int)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.close()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.reset()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.PositionInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyCopier.java@org.apache.james.mime4j.message.BodyCopier.copy(Body)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.getStorageProvider()", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(Storage)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(BodyPart)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getHeader()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getBody()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.obtainField(String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.obtainHeader()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.Entity(Entity)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String,Map)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.removeBody()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String,long)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMimeType(String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody,String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setHeader(Header)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getParent()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart,Map)", "core/src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMessage(Message)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(Header)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.field(Field)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields()", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.iterator()", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.addField(Field)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.removeFields(String)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getField(String)", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.setField(Field)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Mailbox[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Address)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.createMessageId(String)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getAddressList(String)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMailbox(String)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Address[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(Message)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMailboxList(String)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "core/src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.loadStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeEntity(Entity,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBody(Body,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.encodeStream(OutputStream,String,boolean)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBytes(ByteSequence,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart,int)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.removeBodyPart(int)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogue()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getBodyParts()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(Multipart)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreamble()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreambleRaw(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogueRaw()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getCount()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(String)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getSubType()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setSubType(String)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getParent()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreambleRaw()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogueRaw(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.replaceBodyPart(BodyPart,int)", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.body(BodyDescriptor,InputStream)", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.getParent()", "core/src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.getInputStream()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.StorageBinaryBody(MultiReferenceStorage)", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.dispose()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getMimeCharset()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.dispose()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getReader()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.StringTextBody(String,Charset)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getReader()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getMimeCharset()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.copy()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.message(Event)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.debug(Event)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.warn(Event)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.toString()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getState()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.stateToString(int)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.monitor(Event)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getField()", "core/src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.toString()", "core/src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.equals(Object)", "core/src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.Event(String)", "core/src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.hashCode()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.createMimeStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advanceToBoundary()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(LineNumberSource,BufferedLineReaderInputStream,BodyDescriptor,int,int,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLineNumber()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(LineNumberSource,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLimitedContentStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.setRecursionMode(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getRecursionMode()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.clearMimeStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getContentStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getDataStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setStrictParsing(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.clone()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxLineLen()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxHeaderCount()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isCountLineNumbers()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxContentLen(long)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxContentLen()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setCountLineNumbers(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaximalBodyDescriptor(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isStrictParsing()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxLineLen(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isMaximalBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/MimeParseEventException.java@org.apache.james.mime4j.parser.MimeParseEventException.getEvent()", "core/src/main/java/org/apache/james/mime4j/parser/MimeParseEventException.java@org.apache.james.mime4j.parser.MimeParseEventException.MimeParseEventException(Event)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isContentDecoding()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isRaw()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.stop()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRaw(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentDecoding(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentHandler(ContentHandler)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getField()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stateToString(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.isRaw()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stop()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getInputStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.setRecursionMode(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getRecursionMode()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getState()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.next()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getReader()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getDecodedInputStream()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.RawEntity(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getFieldValue()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getFieldName()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getContentStream()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getState()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getField()", "core/src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.advance()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getRaw()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.RawField(ByteSequence,int)", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getName()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.toString()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.getBody()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseName()", "core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseBody()", "core/src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getSecretKeySpec()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.setInstance(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.reset()", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.getInstance()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.MemoryStorage(byte,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.incrementCounter()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.addReference()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.decrementCounter()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.toStorage()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorage(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.TempFileStorage(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isEmpty()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.capacity()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.byteAt(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toString()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,boolean)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isFull()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.clear()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toByteArray()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.expand(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.setLength(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.buffer()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,int,boolean)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.length()", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(char)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Charset)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.Charset(String,String,String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Charset)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.getCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.Charset(String,String,String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(char)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(Charset,String)", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.byteAt(int)", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.length()", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.toByteArray()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMultipart(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.fold(String,int)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.format(Date,StringBuffer,FieldPosition)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.formatDate(Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.indexOfWsp(String,int)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueMessageId(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.Rfc822DateFormat()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isSameMimeType(String,String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueBoundary()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.nextCounterValue()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMessage(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.initialValue()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.format(Date,StringBuffer,FieldPosition)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.Rfc822DateFormat()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold0(String,int)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.convertName(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getMap()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValue(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValueEnum(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.nextElement()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValues(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNames()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addValue(String,String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.getMessage()", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Throwable)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.add_escapes(String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.getMessage()", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toBase64(byte)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.checkLineLength(byte,int)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.main(String)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.setResult(byte,int,byte)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte,byte)", "core/src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResource(String,String)", "core/src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResourceAsStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.read(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeNoLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testNoLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteFlush()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encode(String,int,byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64OutputStream()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64Encoder()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeB()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRestricted()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressLocalPart()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplit()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWord()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.encodeB(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeHeaderParameter()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRegular()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeB()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEncodeSpace()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainASCII()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.read(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String,Charset)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainASCII()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEncodeSpace()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeSpaceBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeTabsBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapeSpaceAtLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontWhiteSpaceBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeLF()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getRaw()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getBody()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.TestField(String,String)", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getBody()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getRaw()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.getName()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.TestField(String,String)", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.TestField.getName()", "core/src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()", "core/src/test/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.describe(byte)", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentId()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionParameters()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testLanguageParameters()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersion()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDescription()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.describe(byte,int)", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionType()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersionDefault()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentMD5Url()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationWithComment()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "core/src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "core/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "core/src/test/java/org/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testContentType()", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testPlainLine()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithNestedComments()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.parse(String)", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithComments()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testRead()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "core/src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.read(InputStream,int)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMessage()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyMessage()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyBodyPart()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMultipart()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyBodyPart()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMultipartMessage()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyMultipart()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetFilename()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetBodyTwice()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testRemoveBody()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetBody()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetContentDispositionTypeFilename()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetContentDispositionType()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,File)", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.suite()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String)", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteSpecialCharacters()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "core/src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartAlternative()", "core/src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartMixed()", "core/src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.createMessage(byte)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(String,String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(Body,File)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String,File)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.escape(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.suite()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.dispose()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetCc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getRawMessageAsByteArray()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testDisposeGetsPropagatedToBody()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetSender()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetSubject()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.dispose()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetReplyTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testIsMultipart()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetBcc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetFrom()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.writeTo(OutputStream)", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testCreateMessageId()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.writeTo(OutputStream)", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetDate()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMail()", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.createMessage(byte)", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachment()", "core/src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.storageIsReadable(Storage)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.copyTest(SingleBody)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageBinaryBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.suite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.decode(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testAutomaticContentDecoding()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(Field)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMultipart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeQuotedPrintable()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeASCIIBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadSimpleBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.checkBody(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64Latin1Body()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64ASCIIBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.checkNextIs(int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.checkState(int)", "core/src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.checkState(int)", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/java/org/apache/james/mime4j/parser/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.parser.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/parser/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.parser.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMultipart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMessage()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(String)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(char)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endHeader()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.raw(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.preamble(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMessage()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.delete()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.getInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.delete()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.getInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCipherStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testTempFileStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testMemoryStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.createData(int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testThresholdStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testNonASCII()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testAllASCII()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFoldOverlyLongNonWhitespace()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testUnfold()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValue()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.getSampleMap()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValueEnum()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNameArray()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValues()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetInvalidLength()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidAppend()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testConstructor()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSimpleAppend()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetLength()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testExpandAppend()"], "038e9c5b12216e1434992301ce3e4713688e6044": ["dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.AddressBuilder()", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.AddressFormatter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.writeTo(OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeBody(Body,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.getBoundary(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeHeader(Header,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.encodeStream(OutputStream,String,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeEntity(Entity,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeBytes(ByteSequence,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.getContentType(Multipart)", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)"], "68bc1194428d9cf057e60a0178469821d49d1d42": ["core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getBody()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getBody()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldTest.java@org.apache.james.mime4j.stream.RawFieldTest.testTabAfterDelimiter()"], "4fadda0b36f0a0c135f43478f3f10e98322972a5": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.lookup(String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.Charset(String,String,String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Charset)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.Charset(String,String,String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Charset)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.testCharset(String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)", "core/src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getMimeCharset()", "storage/src/main/javorg/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getMimeCharset()", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getMimeCharset()", "storage/src/main/javorg/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getMimeCharset()"], "799d25ce3b71a73b87a81375634f7def0de8215e": ["core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.getnext()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.peek(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.transfer(int,byte,int,int,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decode()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.advance()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.peek(int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.bufferLength()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decodeSpecialSequence()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueData()"], "8ab9362b799f4fe44cb250bcd7a132f07dff8c40": ["core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainQuestionMark()"], "f54d37a43a47a5c9cd1814b08a55b0392b64ed69": ["src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()"], "558450a22978b1bfda8e0c9c6bb183bb87750537": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()"], "19bc10cfdfea108f6698f453190a22589a0569fa": ["src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getCanonicalizedAddress()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getCanonicalizedAddress()"], "b6ea5829bae1b4da04f3de7682e035bc9ff2d155": ["core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiByteArray(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(ByteArrayBuffer,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,int,int,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toByteArray(String,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiByteArray(String)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(ByteArrayBuffer)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(byte)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(byte)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.raw(InputStream)", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.raw(InputStream)"], "671da21b4e1b473121ae57f8883d43a5a5646d77": ["src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.reset()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMoreComplexMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseSimpleMessage()"], "f67dc0577e226c5dda3d13f49017eaffe51bca6c": ["core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getHeaderParams(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(String)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.NameValuePair(String,String,boolean)", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.toString()", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.equals(Object)", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.hashCode()", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.isQuoted()", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.getValue()", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.getName()", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.getLowerBound()", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.updatePos(int)", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.getUpperBound()", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.ParserCursor(int,int)", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.atEnd()", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.getPos()", "core/src/main/java/org/apache/james/mime4j/stream/ParserCursor.java@org.apache.james.mime4j.stream.ParserCursor.toString()", "core/src/main/java/org/apache/james/mime4j/stream/RawBody.java@org.apache.james.mime4j.stream.RawBody.toString()", "core/src/main/java/org/apache/james/mime4j/stream/RawBody.java@org.apache.james.mime4j.stream.RawBody.getValue()", "core/src/main/java/org/apache/james/mime4j/stream/RawBody.java@org.apache.james.mime4j.stream.RawBody.getParams()", "core/src/main/java/org/apache/james/mime4j/stream/RawBody.java@org.apache.james.mime4j.stream.RawBody.RawBody(String,List)", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getDelimiterIdx()", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copy(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.isWhitespace(int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameters(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyTrimmed(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.isOneOf(int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyEscaped(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameter(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameter(ByteSequence,ParserCursor,int)", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParse()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEmpty()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEscaped()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(RawField)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(String)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(String)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)"], "2f3532585c36b71936fed03bff31e085f870402a": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hasToBeEncoded(String,int)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hasToBeEncoded(String,int)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()"], "ce99a8b8b02cca3a8df4646736c24c6d2531bae8": ["benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.compare(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.body(BodyDescriptor,InputStream)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.body(BodyDescriptor,InputStream)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.AbstractContentHandlerTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.createTest(int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.compare(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.encode(byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableOutputStreamBench.java@org.apache.james.mime4j.QuotedPrintableOutputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableOutputStreamBench.java@org.apache.james.mime4j.QuotedPrintableOutputStreamBench.initData(int)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(Throwable)", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.getCause()", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(int,InputStream,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.decodePad(int,int,byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpectedEof(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpecedPad(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush0()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writeLineSeparator()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close0()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writePad()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush()", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.checkLineSeparator(byte)", "core/src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapQuotedPrintable(OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapBase64(OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.copy(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeBase64(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/DecodeMonitor.java@org.apache.james.mime4j.codec.DecodeMonitor.warn(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecodeMonitor.java@org.apache.james.mime4j.codec.DecodeMonitor.isListening()", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.monitor(DecodeMonitor,String,String,String,String,String[])", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.recombine(String,String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.replaceUnderscores(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hexDigit(int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(String,String,int,Charset,byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressDisplayName(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hasToBeEncoded(String,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeAddressLocalPart(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isToken(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(byte)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encode(String,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeIfNecessary(String,Usage,int)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.initChars(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeHeaderParameter(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isAtomPhrase(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.quote(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isDotAtomText(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.bEncodedLength(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(int,InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.getnext()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.peek(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.transfer(int,byte,int,int,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(int,InputStream,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.convert(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encodeChunk(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.softBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flushOutput()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.completeEncoding()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.writePending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.plain(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.clearPending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encode(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.escape(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flush()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.lineBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(int,OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainField(String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getBody()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setFilename(String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getDispositionType()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMimeType(String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getHeader()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.removeBody()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMultipart()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainHeader()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String,Map)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getMimeType()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTransferEncoding()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTypeField()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart,Map)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.dispose()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody,String)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getFilename()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getParent()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getCharset()", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setHeader(Header)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMessage(Message)", "core/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.removeFields(String)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields()", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.iterator()", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getField(String)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.toString()", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields(String)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.Header(Header)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.setField(Field)", "core/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.addField(Field)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getReplyTo()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailbox(String)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSubject()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMessageId()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getDate()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailboxList(String)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSender()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getCc()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getBcc()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getAddressList(String)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getFrom()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSubject(String)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getTo()", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Collection)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSender(Mailbox)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address[])", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.createMessageId(String)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getBodyParts()", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.removeBodyPart(int)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.dispose()", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setBodyParts(List)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getSubType()", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getParent()", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity,int)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.Multipart(String)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getCount()", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.replaceBodyPart(Entity,int)", "core/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setSubType(String)", "core/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.setParent(Entity)", "core/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.copy(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.getParent()", "core/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.copy()", "core/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.addMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.toString()", "core/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.getDisplayString()", "core/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.size()", "core/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.get(int)", "core/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.flatten()", "core/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.print()", "core/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.toRouteString()", "core/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.size()", "core/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.get(int)", "core/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.toString()", "core/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getDisplayString(boolean)", "core/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.Group(String,MailboxList)", "core/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getName()", "core/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getMailboxes()", "core/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.doAddMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getLocalPart()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getCanonicalizedAddress()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getName()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,DomainList,String,String)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getRoute()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getDomain()", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getDisplayString(boolean)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.doAddMailboxesTo(List)", "core/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getAddress()", "core/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.size()", "core/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.get(int)", "core/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(List,boolean)", "core/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.print()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getSecond()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getDay()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.hashCode()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getMinute()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.equals(Object)", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getDate()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.print()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getYear()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.convertToYear(String)", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getMonth()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getHour()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.toString()", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "core/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getTimeZone()", "core/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(String)", "core/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(String,Throwable)", "core/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(Throwable)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "core/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.getAddressList()", "core/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.AddressListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.ContentDispositionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParameters()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParameter(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getModificationDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getFilename()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getReadDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getCreationDate()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getDispositionType()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getSize()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isDispositionType(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isAttachment()", "core/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isInline()", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.getEncoding()", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.getEncoding(ContentTransferEncodingField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.ContentTransferEncodingFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMimeType(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getCharset()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getCharset(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getBoundary()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMultipart()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType(ContentTypeField,ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParameter(String)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.ContentTypeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType()", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParameters()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.getDate()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.DateTimeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.getParser()", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date0(String,Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox0(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.checkValidFieldName(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidMimeType(String)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList0(String,Iterable)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "core/src/main/java/org/apache/james/mime4j/field/LoggingMonitor.java@org.apache.james.mime4j.field.LoggingMonitor.isListening()", "core/src/main/java/org/apache/james/mime4j/field/LoggingMonitor.java@org.apache.james.mime4j.field.LoggingMonitor.warn(String,String)", "core/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.getMailbox()", "core/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.MailboxFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.MailboxListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.getMailboxList()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.getParseException()", "core/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.UnstructuredFieldImpl(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.getValue()", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse()", "core/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.main(String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseGroup(String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseMailbox(String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddress(String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseMailbox(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddress(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseGroup(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.getInstance()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddress(ASTaddress,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.remove()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.hasNext()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.hasNext()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.ChildNodeIterator(SimpleNode)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildGroupBody(ASTgroup_body,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddressList(ASTaddress_list,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.remove()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.addSpecials(StringBuilder,Token)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(ASTaddr_spec)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAngleAddr(ASTangle_addr)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.next()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildMailbox(ASTmailbox,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildString(SimpleNode,boolean)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.next()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildRoute(ASTroute)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,Collection)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.getEncodedString()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,MailboxList)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,Mailbox[])", "core/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.getEncodedString()", "core/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(DomainList,String,String)", "core/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,DomainList,String,String)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.length()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.clear()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.expand(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.hasBufferedData()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.buf()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.ensureCapacity(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readAllowed()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.limit()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.pos()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.skip(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.truncate()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.unread(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.bufferLen()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.charAt(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.capacity()", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.close()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.getBytesLeft()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.enforceLimit()", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.LimitedInputStream(InputStream,long)", "core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.LineNumberInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.getLineNumber()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStream.java@org.apache.james.mime4j.io.LineReaderInputStream.LineReaderInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.eof()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.toString()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.unread(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.isUsed()", "core/src/main/java/org/apache/james/mime4j/io/MaxHeaderLengthLimitException.java@org.apache.james.mime4j.io.MaxHeaderLengthLimitException.MaxHeaderLengthLimitException(String)", "core/src/main/java/org/apache/james/mime4j/io/MaxHeaderLimitException.java@org.apache.james.mime4j.io.MaxHeaderLimitException.MaxHeaderLimitException(String)", "core/src/main/java/org/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.eof()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.toString()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isLastPart()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.skipBoundary()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readAllowed()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.endOfStream()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.unread(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.hasData()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.available()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.getPosition()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.mark(int)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.close()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.reset()", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.PositionInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyCopier.java@org.apache.james.mime4j.message.BodyCopier.copy(Body)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.getStorageProvider()", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(Storage)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "core/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newUniqueBoundary()", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcCharset(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(Entity)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcTransferEncoding(ContentTransferEncodingField)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcMimeType(ContentTypeField,ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentType(String,Map)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,Map)", "core/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(Header)", "core/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.field(RawField)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(RawField)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.loadStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcTransferEncoding(ContentTransferEncodingField)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newDate(Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailbox(String,Mailbox)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentType(String,Map)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,Map)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcMimeType(ContentTypeField,ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(Message)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newSubject(String)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailboxList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newUniqueBoundary()", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcCharset(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,String,long,Date,Date,Date)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentTransferEncoding(String)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeEntity(Entity,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBody(Body,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.encodeStream(OutputStream,String,boolean)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBytes(ByteSequence,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(Multipart)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreamble(String)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreamble()", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogue(String)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreambleRaw(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogue()", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogueRaw(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreambleRaw()", "core/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogueRaw()", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(RawField)", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.endHeader()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.getInputStream()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.StorageBinaryBody(MultiReferenceStorage)", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.dispose()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getMimeCharset()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.dispose()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getInputStream()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getReader()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getMimeCharset()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.copy()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.StringTextBody(String,Charset)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getReader()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getInputStream()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentLanguage()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseMD5(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionFilename()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.newChild()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseDate(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionCreationDate()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentMD5Raw()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentLocation()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getMimeVersionParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseLanguage(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getMimeMajorVersion()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionReadDate()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDescription()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionSize()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseContentId(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionModificationDate()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseContentDescription(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentId()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentLanguageParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.MaximalBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseLocation(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionType()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentLocationParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getMimeMinorVersion()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionParameters()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseMimeVersion(String)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptor.java@org.apache.james.mime4j.parser.MaximalBodyDescriptor.parseContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isContentDecoding()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeTokenStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isRaw()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.stop()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRaw(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentDecoding(boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentHandler(ContentHandler)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.newBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getSecretKeySpec()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.setInstance(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.reset()", "core/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.getInstance()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.MemoryStorage(byte,int)", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.incrementCounter()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.addReference()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.decrementCounter()", "core/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.toStorage()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorage(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.TempFileStorage(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.delete()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.getInputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.write0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.delete()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.close()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.toStorage0()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.createStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.toString()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.stateToString(int)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getState()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.message(Event)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.parseField()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getField()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.monitor(Event)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MutableBodyDescriptor,int,int,MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.fillFieldBuffer()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getField()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.stateToString(int)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getReader()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.isRaw()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.newBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.stop()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.doParse(InputStream,MutableBodyDescriptor,int)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getInputStream()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getDecodedInputStream()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getState()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getConfig()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.next()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.setRecursionMode(int)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.doParse(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.getRecursionMode()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getHeaderParams(String)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getContentTypeParameters()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getSubType()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getContentLength()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getMediaType()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.newChild()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.toString()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getTransferEncoding()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getCharset()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(String)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getMimeType()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getBoundary()", "core/src/main/java/org/apache/james/mime4j/stream/Event.java@org.apache.james.mime4j.stream.Event.Event(String)", "core/src/main/java/org/apache/james/mime4j/stream/Event.java@org.apache.james.mime4j.stream.Event.toString()", "core/src/main/java/org/apache/james/mime4j/stream/Event.java@org.apache.james.mime4j.stream.Event.equals(Object)", "core/src/main/java/org/apache/james/mime4j/stream/Event.java@org.apache.james.mime4j.stream.Event.hashCode()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.clearMimePartStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.decodedStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getDataStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advanceToBoundary()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getDecodedContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getLineNumber()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.stop()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(int,int,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getLimitedContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,int,int,MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMessage()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getRecursionMode()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.setRecursionMode(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,int,int,MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.clone()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getDefaultContentType()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setDefaultContentType(String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isMalformedHeaderStartsBody()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaximalBodyDescriptor(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaxHeaderLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setCountLineNumbers(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isStrictParsing()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getMaxHeaderCount()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaxContentLen(long)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isMaximalBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getMaxLineLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMalformedHeaderStartsBody(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isCountLineNumbers()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setStrictParsing(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getMaxHeaderLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.MimeEntityConfig()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.toString()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaxLineLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getMaxContentLen()", "core/src/main/java/org/apache/james/mime4j/stream/MimeParseEventException.java@org.apache.james.mime4j.stream.MimeParseEventException.getEvent()", "core/src/main/java/org/apache/james/mime4j/stream/MimeParseEventException.java@org.apache.james.mime4j.stream.MimeParseEventException.MimeParseEventException(Event)", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getDecodedContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.RawEntity(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getState()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getFieldValue()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getField()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getContentStream()", "core/src/main/java/org/apache/james/mime4j/stream/RawEntity.java@org.apache.james.mime4j.stream.RawEntity.getFieldName()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.parseName()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.toString()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getBody()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(String,String)", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.isObsoleteSyntax()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getRaw()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.parseBody()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getName()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isEmpty()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.capacity()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.byteAt(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toString()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,boolean)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isFull()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.clear()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toByteArray()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.expand(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.remove(int,int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.setLength(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.indexOf(byte)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.buffer()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(byte,int,boolean)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.length()", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(char)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Charset)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.Charset(String,String,String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Charset)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.Charset(String,String,String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(char)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,byte,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(Charset,String)", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.byteAt(int)", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.length()", "core/src/main/java/org/apache/james/mime4j/util/EmptyByteSequence.java@org.apache.james.mime4j.util.EmptyByteSequence.toByteArray()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMultipart(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.fold(String,int)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.Rfc822DateFormat()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.format(Date,StringBuffer,FieldPosition)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.formatDate(Date,TimeZone)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.indexOfWsp(String,int)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueMessageId(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isSameMimeType(String,String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueBoundary()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.nextCounterValue()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMessage(String)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.initialValue()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.format(Date,StringBuffer,FieldPosition)", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.Rfc822DateFormat()", "core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold0(String,int)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.convertName(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getMap()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValue(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValueEnum(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.nextElement()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValues(String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNames()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addValue(String,String)", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "core/src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.getMessage()", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.add_escapes(String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Token,int,String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException()", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Throwable)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(String)", "core/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.getMessage()", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Throwable)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.add_escapes(String)", "core/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.getMessage()", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toBase64(byte)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.checkLineLength(byte,int)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.main(String)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.setResult(byte,int,byte)", "core/src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte,byte)", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionStringThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionString()", "core/src/test/java/org/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionMimeException()", "core/src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResource(String,String)", "core/src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResourceAsStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.read(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeNoLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testNoLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteFlush()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testLineSeparators()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encode(String,int,byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeLs(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64OutputStream()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64Encoder()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonWhiteSpaceBetweenEncodedWordsIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeB()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainDollarSign()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testInvalidEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testFunnyInputDoesNotRaiseOutOfMemoryError()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testTextBeforeAndAfterEncodedWordIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayStartWithAnEqualsSign()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testWhiteSpaceBetweenEncodedWordsGetsRemoved()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRestricted()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressLocalPart()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplit()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWord()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.encodeB(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeHeaderParameter()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRegular()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeB()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEncodeSpace()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainASCII()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.read(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpacesBeforeEOL()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream6()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.toString(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String,Charset)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainASCII()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEncodeSpace()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeSpaceBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeTabsBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapeSpaceAtLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontWhiteSpaceBeforeLineEnd()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeLF()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMessage()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMultipart()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyBodyPart()", "core/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "core/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.suite()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.setUp()", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String)", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,File)", "core/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "core/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "core/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "core/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "core/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.setUp()", "core/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "core/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "core/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "core/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(Body,File)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String,File)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.escape(String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(String,String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.suite()", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "core/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.dispose()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.DummyBody.getInputStream()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.getRawMessageAsByteArray()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testIsMultipart()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.DummyBody.dispose()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.getInputStream()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testDisposeGetsPropagatedToBody()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "core/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.assertEquals(byte,byte)", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.setUp()", "core/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "core/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "core/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "core/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "core/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "core/src/test/java/org/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testContentType()", "core/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "core/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testPlainLine()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithNestedComments()", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.parse(String)", "core/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithComments()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "core/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testRead()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "core/src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.read(InputStream,int)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.storageIsReadable(Storage)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.copyTest(SingleBody)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageBinaryBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "core/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "core/src/test/java/org/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentDispositionType()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentId()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testMimeVersion()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.describe(byte,int)", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.describe(byte)", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentDispositionParameters()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentLocationWithComment()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentDescription()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentMD5Url()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testLanguageParameters()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testMimeVersionDefault()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "core/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.delete()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.getInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.delete()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.getInputStream()", "core/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCipherStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testTempFileStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testMemoryStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.createData(int)", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testThresholdStorageProvider()", "core/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.TestField(String,String)", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testAddField()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetContentLength()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetParameters()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.TestField.TestField(String,String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.suite()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.stream.MimeStreamParserExampleMessagesTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.startMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.field(RawField)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.decode(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testAutomaticContentDecoding()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testStop()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testBoundaryInEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.endMultipart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testEmpyHeader()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.endMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.startHeader()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.endHeader()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamParserTest.java@org.apache.james.mime4j.stream.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.stream.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.nextIs(int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.stream.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadOnePartMimeASCIIBody()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64ASCIIBody()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadOnePartMimeQuotedPrintable()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadSimpleBody()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.checkBody(String)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64Latin1Body()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.stream.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.checkNextIs(int)", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.checkState(int)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.checkState(int)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.startMessage()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.escape(String)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.endMultipart()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.endMessage()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.endHeader()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.preamble(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.raw(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.escape(char)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.field(RawField)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.startHeader()", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/TestHandler.java@org.apache.james.mime4j.stream.TestHandler.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testNonASCII()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testAllASCII()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFoldOverlyLongNonWhitespace()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "core/src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testUnfold()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValue()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.getSampleMap()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValueEnum()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNameArray()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "core/src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValues()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetInvalidLength()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidRemove()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidAppend()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testRemove()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testConstructor()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSimpleAppend()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetLength()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testExpandAppend()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.storeImage(StorageProvider,BufferedImage,String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(BodyFactory,BufferedImage)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(BodyFactory,String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.renderSampleImage()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(MessageImpl)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(MessageImpl)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()"], "66a87ba9b1828b57618066ec682c8a11f34ad413": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)"], "c3319669fda0e0dc2e5369cb42d00cc683bd026e": ["src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()"], "bf543d1a489942c3704c0589cfda07e4267c1202": ["core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.getFile(String)", "core/src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "core/src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.getFile(String)", "core/src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "core/src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.MessageParserTestSuite()", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.getFile(String)", "core/src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTestSuite()", "core/src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.MessageParserTestSuite()", "core/src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getFile(String)", "core/src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)"], "26b444386f2df798a92847e17084ab4e219167bd": ["core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.addTests(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()"], "c644c9ccd9fc28ce4d4461ed2ba5d8f48e3f9e94": ["src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getParameters()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getMimeType()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.BodyDescriptor(BodyDescriptor)", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isQuotedPrintableEncoded()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.addField(String,String)", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMessage()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.BodyDescriptor()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getBoundary()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getTransferEncoding()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getHeaderParams(String)", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isBase64Encoded()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMimeType(String)", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getCharset()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.toString()", "src/main/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMultipart()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.markSupported()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.reset()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.mark(int)", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.skip(long)", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read(byte)", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.available()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.close()", "src/main/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.read()", "src/main/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/main/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/main/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.close()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.read()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.hasMoreParts()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.parentEOF()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputStream,String)", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.matchBoundary()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.consume()", "src/main/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.close()", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseEntity(InputStream)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.setContentHandler(ContentHandler)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parse(InputStream)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.stop()", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.isRaw()", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseMessage(InputStream)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseHeader(InputStream)", "src/main/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseBodyPart(InputStream)", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read()", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read(byte)", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.truncate()", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.getLineNumber()", "src/main/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read(byte,int,int)", "src/main/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.startHeader()", "src/main/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.field(String)", "src/main/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.endHeader()", "src/main/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.close()", "src/main/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.read()", "src/main/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.fillBuffer()", "src/main/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.decodeAndEnqueue(byte,int)", "src/main/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.ByteQueue()", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.enqueue(byte)", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.ByteQueue(int)", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.dequeue()", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.count()", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.iterator()", "src/main/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.clear()", "src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeB(String,String)", "src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(String)", "src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeBase64(String)", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.read()", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.populatePushbackQueue()", "src/main/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.close()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.decrement(int)", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.next()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.remove()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.isEmpty()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.size()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.hasNext()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.increment(int)", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.get()", "src/main/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.add(byte)", "src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.getAddressList()", "src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.parseBody(String)", "src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.getParseException()", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.getEncoding()", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.parseBody(String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getCharset()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.isMimeType(String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getMimeType()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.parseBody(String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getBoundary()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParseException()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.isMultipart()", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParameter(String)", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.getDate()", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.getParseException()", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.parseBody(String)", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isContentType()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isSubject()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.toString()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getName()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getBody()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getRaw()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isFrom()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isTo()", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.parseBody(String)", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.getMailbox()", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.getParseException()", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.parseBody(String)", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.getMailboxList()", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.getParseException()", "src/main/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.getValue()", "src/main/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.parseBody(String)", "src/main/java/org/mime4j/field/address/Address.java@org.mime4j.field.address.Address.addMailboxesTo(ArrayList)", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.iterator()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.hasNext()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.main(String)", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.remove()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.print()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.flatten()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.next()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.parse(String)", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.size()", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.AddressList(ArrayList,boolean)", "src/main/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.get(int)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.hasNext()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.next()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.nextNode()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.getInstance()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.nextNode()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.addSpecials(StringBuffer,Token)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.remove()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.next()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.remove()", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.hasNext()", "src/main/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.size()", "src/main/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.DomainList(ArrayList,boolean)", "src/main/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.get(int)", "src/main/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.getName()", "src/main/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.toString()", "src/main/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.getMailboxes()", "src/main/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.doAddMailboxesTo(ArrayList)", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getAddressString()", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.doAddMailboxesTo(ArrayList)", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.toString()", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getDomain()", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getLocalPart()", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getRoute()", "src/main/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.get(int)", "src/main/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/main/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.print()", "src/main/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.size()", "src/main/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/main/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/main/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.getName()", "src/main/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/main/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getHour()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getMonth()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.convertToYear(String)", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getMinute()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getSecond()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.parse(String)", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getTimeZone()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getYear()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.print()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getDay()", "src/main/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getDate()", "src/main/java/org/mime4j/message/AbstractBody.java@org.mime4j.message.AbstractBody.getParent()", "src/main/java/org/mime4j/message/AbstractBody.java@org.mime4j.message.AbstractBody.setParent(Entity)", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.isMimeType(String)", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getMimeType()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.isMultipart()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setBody(Body)", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getParent()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getHeader()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getBody()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getCharset()", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setHeader(Header)", "src/main/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setParent(Entity)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.addField(Field)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getField(String)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.endHeader()", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.field(String)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.Header(InputStream)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getFields()", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getFields(String)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.toString()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.epilogue(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endHeader()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startBodyPart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.field(String)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endHeader()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.preamble(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endMessage()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startHeader()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.expect(Class)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startMessage()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.field(String)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startBodyPart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endBodyPart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.expect(Class)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startMessage()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endMultipart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endBodyPart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.Message(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endMessage()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endMultipart()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startHeader()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.getSubject()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getSubType()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getBodyParts()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setBodyParts(List)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getEpilogue()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setEpilogue(String)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setPreamble(String)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setParent(Entity)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getPreamble()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getParent()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setSubType(String)", "src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.getParent()", "src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.setParent(Entity)", "src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.getInputStream()", "src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.getReader()", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.Charset.Charset(String,String,String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.Charset.compareTo(Object)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.isEncodingSupported(String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.Charset(String,String,String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.isDecodingSupported(String)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.compareTo(Object)", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read(byte)", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read()", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.skip(long)", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.getBytesLeft()", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.available()", "src/main/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read(byte,int,int)", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.skip(long)", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.available()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.reset()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.getPosition()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.mark(int)", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.markSupported()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read(byte,int,int)", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.close()", "src/main/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read(byte)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.getAbsolutePath()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempPath(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.length()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.SimpleTempFile(File)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.SimpleTempFile(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getOutputStream()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(String,String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.isInMemory()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getInputStream()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.length()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempPath(File)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile(String,String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getRootTempPath()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getAbsolutePath()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.isInMemory()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(String,String,boolean)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.SimpleTempPath(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getAbsolutePath()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getInputStream()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempFile(File)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempStorage()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(TempPath,String,String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempPath(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile(String,String,boolean)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getOutputStream()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath(TempPath,String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.SimpleTempPath(File)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempFile(String)", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath()", "src/main/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempPath()", "src/main/java/org/mime4j/util/TempStorage.java@org.mime4j.util.TempStorage.getInstance()", "src/main/java/org/mime4j/util/TempStorage.java@org.mime4j.util.TempStorage.setInstance(TempStorage)", "src/test/java/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/java/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testParameters()", "src/test/java/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/java/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testAddField()", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.fromString(String)", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testRead()", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/java/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testBigEnoughPushbackBuffer()", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.read(InputStream)", "src/test/java/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.preamble(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startMessage()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testStop()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endBodyPart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.raw(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.escape(String)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.escape(char)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.field(String)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.epilogue(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endMultipart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.preamble(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.setUp()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.epilogue(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endBodyPart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParse()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startBodyPart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.field(String)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.escape(String)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.raw(InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endMessage()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.escape(char)", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endMultipart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endMessage()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMultipart()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMessage()", "src/test/java/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startBodyPart()", "src/test/java/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testReadSingleByte()", "src/test/java/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testReadManyBytes()", "src/test/java/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testTruncate()", "src/test/java/org/mime4j/TestUtil.java@org.mime4j.TestUtil.readResourceAsStream(String)", "src/test/java/org/mime4j/TestUtil.java@org.mime4j.TestUtil.readResource(String,String)", "src/test/java/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.setUp()", "src/test/java/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.toString(byte)", "src/test/java/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.testDecode()", "src/test/java/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.read(InputStream)", "src/test/java/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.fromString(String)", "src/test/java/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeB()", "src/test/java/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/java/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.setUp()", "src/test/java/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()", "src/test/java/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()", "src/test/java/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.setUp()", "src/test/java/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.read(InputStream)", "src/test/java/org/mime4j/field/ContentTransferEncodingFieldTest.java@org.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/java/org/mime4j/field/ContentTransferEncodingFieldTest.java@org.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.setUp()", "src/test/java/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/java/org/mime4j/field/FieldTest.java@org.mime4j.field.FieldTest.testGetName()", "src/test/java/org/mime4j/field/FieldTest.java@org.mime4j.field.FieldTest.testParse()", "src/test/java/org/mime4j/field/UnstructuredFieldTest.java@org.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testTortureTest()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testParse2()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testLexicalError()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testParse1()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testFlatten()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testSimpleForm()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testEmptyAddressList()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/java/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testEmptyGroup()", "src/test/java/org/mime4j/field/contenttype/ContentTypeTest.java@org.mime4j.field.contenttype.ContentTypeTest.testContentType()", "src/test/java/org/mime4j/field/contenttype/ContentTypeTest.java@org.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "src/test/java/org/mime4j/field/datetime/DateTimeTest.java@org.mime4j.field.datetime.DateTimeTest.testNormalDate()", "src/test/java/org/mime4j/field/datetime/DateTimeTest.java@org.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.main(String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.setUp()", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.MessageParserTest(String,String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.suite()", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.escape(String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.runTest()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testGetMimeType()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.setUp()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testIsMultipart()", "src/test/java/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempFile()", "src/test/java/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempFileStringString()", "src/test/java/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testGetRootTempPath()", "src/test/java/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempPathString()", "src/test/java/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempPath()"], "939de012376e28634e1d301e581a1f72ab0b8008": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)"], "0d03d112d57e1bf897f43975cd42c59f6b93f417": ["james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.includeHeaders(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.caseInsensitive(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.build()", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.messageMatches(InputStream)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.createBuffer(CharSequence)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.isFoundIn(Reader,CharBuffer)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.searchContents(List)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.contentTypes(List)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.searchContents(List)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.builder()", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.matchBufferInMailBeingMimeAware(InputStream,CharBuffer)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.MessageMatcher(List,boolean,boolean,boolean,List,Logger)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.handle(Exception)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.ignoringMime(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.checkBody(CharBuffer,MimeTokenStream)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.includeHeaders(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.contentTypes(List)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.MessageMatcherBuilder()", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.matches(CharBuffer,char)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.build()", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.caseInsensitive(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.checkHeader(CharBuffer,MimeTokenStream)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.ignoringMime(boolean)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.computeNextChar(boolean,char)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcherBuilder.logger(Logger)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.logger(Logger)", "james-utils/src/main/java/org/apache/james/mime4j/utils/search/MessageMatcher.java@org.apache.james.mime4j.utils.search.MessageMatcher.MessageMatcherBuilder()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenSearchingTextLocatedInOtherMimeParts()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldBeAbleToLocateTextFragments()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenSearchingHeaderTextOutsideHeaders()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.caseSensitivenessShouldBeIgnoredWhenTurnedOff()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.headerShouldBeMatchedWhenIgnoringMime()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.headerShouldBeMatchedWhenHeaderMatchingIsTurnedOn()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInIgnoringMimeShouldReturnFalseOnNonContainedText()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnTrueWhenSearchingTextLocatedInSpecifiedMimePart()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldBeAbleToRecognizedMimeTypes()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenTextIsAbsent()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInIgnoringMimeShouldIgnoreMimeStructure()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldNotBeAffectedByInvalidMimeTypes()", "james-utils/src/test/java/org.apache.james.mime4j.utils.search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.caseSensitivenessShouldBeTakenIntoAccountWhenTurnedOn()"], "a07e4893903730117747242214a1c44ab7ae6e84": ["dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateWhenGeneralTimezone()"], "8b0d7b356ace7df8737c543ac9938845d45a46bd": ["core/src/main/java/org/apache/james/mime4j/io/MaxHeaderLengthLimitException.java@org.apache.james.mime4j.io.MaxHeaderLengthLimitException.MaxHeaderLengthLimitException(String)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()"], "a39fa365641666390853c4d277b269559e417513": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String,String)", "src/main/javorg/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()"], "037460d11c9c1f09bc8ac4da4309e2f525f66182": ["src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.StorageBinaryBody(Storage)", "src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.dispose()", "src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.getInputStream()", "src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getReader()", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.StorageTextBody(Storage,Charset)", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.dispose()", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getReader()", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.StringTextBody(String,Charset)", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.writeTo(OutputStream,Mode)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.writeTo(OutputStream,Mode)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.getReader()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String,String)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.writeTo(OutputStream,Mode)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.getReader()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String,String)", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()"], "8a8942badaf4d7dc574130e74a9c7892a09bd1a9": ["dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,DomainList,String,String)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,DomainList,String,String)", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEmptyAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNullAddress()"], "8bd9e07432bb77018d064f9d901b58375b84549d": ["src/main/javorg/mime4j/message/Header.java@org.mime4j.message.Header.toString()", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getBoundary()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getBoundary()", "src/test/java/org/mime4j/message/HeaderTest.java@org.mime4j.message.HeaderTest.testHeader()", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/javorg/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testWriteTo()", "src/test/javorg/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/javorg/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testAddHeaderWriteTo()"], "5978538e4d2101d891023c87131e174a40849e76": ["core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.verifyEndOfStream()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readAllowed()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String,boolean)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readAllowed()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()"], "90a8cc5b5088d226ce4828ec7e27de9080c93b79": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,FieldParser,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory(FieldParser,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(RawField)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.newChild()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getParseAllFields()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor,FieldParser,boolean,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.MinimalBodyDescriptorFactory(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.MinimalBodyDescriptorFactory(FieldParser,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()"], "570be9a14dea979fa2d6310f54ccdef335669695": ["core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentMD5Raw()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeVersionParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentId()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocationParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseDate(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguageParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentMD5Url()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testLanguageParameters()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionDefault()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentId()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationWithComment()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionType()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionParameters()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersion()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDescription()"], "bf14786296d4ced5dbae10a103059815e105fd06": ["dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRawField()", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getRaw()", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.AddressListFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.AddressListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.ContentDescriptionFieldImpl(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.ContentDescriptionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.ContentDispositionFieldImpl(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.ContentDispositionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.ContentIdFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.ContentIdFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.ContentLanguageFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.ContentLanguageFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.ContentLengthFieldImpl(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.ContentLengthFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.ContentLocationFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.ContentLocationFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.ContentMD5FieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.ContentMD5FieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.ContentTransferEncodingFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.ContentTransferEncodingFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.ContentTypeFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.ContentTypeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getSubType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getCharset()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getBoundary()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.ContentTypeFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getParameter(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getParameters()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.getMediaType()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.DateTimeFieldImpl(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.DateTimeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.parse(String)", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.getParser()", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.parse(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.MailboxFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.MailboxFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.MailboxListFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.MailboxListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.MimeVersionFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.MimeVersionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.UnstructuredFieldImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.UnstructuredFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithNonameParam()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testMimeTypeWithMultipleSemiColon()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentTypeFieldTest.java@org.apache.james.mime4j.field.LenientContentTypeFieldTest.testGetParameter()"], "7d2817d0edf9a893876aac35549389a5475cccef": ["examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(BodyFactory,BufferedImage)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long,Date,Date,Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String,long,Date,Date,Date)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentDisposition(String,String,long)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.obtainField(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.obtainField(String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetContentDispositionType()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetContentDispositionTypeFilename()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testSetFilename()", "src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()"], "a041af42e17e239f413409869fc10fb6cc7c919e": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLanguage()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLanguageParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseLanguageTag(String)", "src/main/javorg/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.getMessage()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte,int)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testLanguageTagParameters()", "src/test/javorg/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte,int)"], "149e3010ade21239c2c4a2f9f28ddf7626017832": ["dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)"], "c01124f113f6e82199fae4a4df42e485f7a176b2": ["benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)"], "73c06166d88f1ca82107d48f761eacd511673b03": ["core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,FieldParser,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,FieldParser,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)"], "e47c72cda66134fc009f1fe7ac2d1712ff85661f": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()"], "03c1f6fcb5e1fc0d78371d03af5310a5c6cb1f98": ["core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(String,String,int,Charset,byte)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(String,String,int,Charset,byte)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplitForUnicode()"], "5b892df8552a6be41c77c7b41b555fd98c1438e7": ["dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testdd()"], "6ec1135e813fc845875cfae3c1055ad534a418b9": ["core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeBEncodedWordSplitForUnicode()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQEncodedWordSplitForUnicode()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()"], "191aba61a789006e04fa17041f4c4998c11f1644": ["dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.isDispositionType(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getParameter(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.isInline()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getParameters()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getSize()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.getFilename()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.ContentDispositionFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.isAttachment()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.getLanguages()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.getLanguages()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.getLanguages()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.ContentLanguageFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldLenientImpl.java@org.apache.james.mime4j.field.ContentTypeFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLanguageFieldTest.java@org.apache.james.mime4j.field.ContentLanguageFieldTest.testGetLanguageWithUnderscore()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLanguageFieldTest.java@org.apache.james.mime4j.field.ContentLanguageFieldTest.testGetLanguage()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLanguageFieldTest.java@org.apache.james.mime4j.field.ContentLanguageFieldTest.testGetLanguageWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLanguageFieldTest.java@org.apache.james.mime4j.field.ContentLanguageFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/ContentLanguageFieldTest.java@org.apache.james.mime4j.field.ContentLanguageFieldTest.testGetLanguageWithEmptyElement()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetSize()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetReadDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentDispositionFieldTest.java@org.apache.james.mime4j.field.LenientContentDispositionFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithEmptyElement()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageWithUnderscore()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguageEmpty()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLanguageFieldTest.java@org.apache.james.mime4j.field.LenientContentLanguageFieldTest.testGetLanguage()"], "aa8087caba1a527f1197b43644c121f81939d149": ["src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getState()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getField()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.monitor(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.message(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.stateToString(int)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.warn(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.fillFieldBuffer()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.debug(Event)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.toString()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.capacity()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.skip(int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.expand(int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.indexOf(byte,int,int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.length()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.ensureCapacity(int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.clear()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.charAt(int)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.read()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.buf()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.pos()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.indexOf(byte)", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.limit()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.hasBufferedData()", "src/main/java/org/apache/james/mime4j/BufferedLineReaderInputStream.java@org.apache.james.mime4j.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.toByteArray()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.byteAt(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.ByteArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(Object)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.indexOf(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.indexOf(int,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.ensureCapacity(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(char)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.substringTrimmed(int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.CharArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(String)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.substring(int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(CharArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(CharArrayBuffer)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(ByteArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.toCharArray()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.charAt(int)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.available()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.reset()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.close()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getMediaType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.toString()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getContentTypeParameters()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getBoundary()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getContentLength()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getMimeType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getTransferEncoding()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getSubType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.parseContentType(String)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getCharset()", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.read()", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.close()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.equals(Object)", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.toString()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.hashCode()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.Event(String)", "src/main/java/org/apache/james/mime4j/LineReaderInputStream.java@org.apache.james.mime4j.LineReaderInputStream.LineReaderInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.eof()", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.read()", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.isUsed()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLanguage()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMD5(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLanguageParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseLocation(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionReadDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLocationParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseDate(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDescription(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionType()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeMajorVersion()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMimeVersion(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeMinorVersion()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionParameters()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentId(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDescription()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionFilename()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentMD5Raw()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLocation()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentId()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseLanguage(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionCreationDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionModificationDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeVersionParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionSize()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipLineDelimiter()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.toString()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.calculateBoundaryLen()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.endOfStream()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.isLastPart()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasData()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.eof()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMimeEntity()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getLineNumber()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.skipHeader(String)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getDataStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getRecursionMode()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.clearMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advance()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String)", "src/main/java/org/apache/james/mime4j/MimeParseEventException.java@org.apache.james.mime4j.MimeParseEventException.getEvent()", "src/main/java/org/apache/james/mime4j/MimeParseEventException.java@org.apache.james.mime4j.MimeParseEventException.MimeParseEventException(Event)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setContentDecoding(boolean)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setContentHandler(ContentHandler)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isRaw()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isContentDecoding()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.MimeStreamParser()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.stop()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getRecursionMode()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.isRaw()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.doParse(InputStream,String)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getDecodedInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getReader()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createStrictValidationStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stateToString(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldName()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createMaximalDescriptorStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseHeadless(InputStream,String)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream(boolean,boolean)", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getState()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getField()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.advance()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.truncate()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.getLineNumber()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.decodeAndEnqueue(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.dequeue()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.enqueue(byte)", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.ByteQueue(int)", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.clear()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.count()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.iterator()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.ByteQueue()", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeB(String,String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeBase64(String)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.populatePushbackQueue()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.increment(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.size()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.remove()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.next()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.hasNext()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.decrement(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.add(byte)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.get()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getParseException()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.AddressListField(String,String,String,AddressList,ParseException)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getAddressList()", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding()", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getBoundary()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMultipart()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMimeType(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.ContentTypeField(String,String,String,String,Map,ParseException)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.DateTimeField(String,String,String,Date,ParseException)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getDate()", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isTo()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isSubject()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isContentType()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.Field(String,String,String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getParser()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getBody()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isFrom()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getRaw()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getName()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.toString()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getParseException()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getMailbox()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.MailboxField(String,String,String,Mailbox,ParseException)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.MailboxListField(String,String,String,MailboxList,ParseException)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getParseException()", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getMailboxList()", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.getValue()", "src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.addMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.size()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.main(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuffer,Token)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.nextNode()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.nextNode()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.size()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getMailboxes()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getName()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.toString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getLocalPart()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getRoute()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDomain()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.doAddMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.size()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.print()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getName()", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getSecond()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.hashCode()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDay()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.equals(Object)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMinute()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.print()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDate()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMonth()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getTimeZone()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToYear(String)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getYear()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.toString()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getHour()", "src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.getParent()", "src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getParent()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMimeType(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setHeader(Header)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getBody()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.field(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.addField(Field)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getField(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.field(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMultipart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.expect(Class)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.field(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.raw(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreamble()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getParent()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getBodyParts()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setSubType(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogue()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getSubType()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.endHeader()", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(String)", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getInputStream()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getParent()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.getReader()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Object)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.Charset(String,String,String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.getCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Object)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.Charset(String,String,String)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encodeInputBuffer(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.BinaryQuotedPrintableEncoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.BinaryQuotedPrintableEncoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.read()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.copy(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeInputBuffer(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.read()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.plain(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.plain(byte)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(String)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isWhitespace(char)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(char)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMultipart(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isSameMimeType(String,String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isMessage(String)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.getBytesLeft()", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.available()", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.close()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.available()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.reset()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.getPosition()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getRootTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getInputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.isInMemory()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempStorage()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(TempPath,String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.length()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getOutputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath(TempPath,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getOutputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.isInMemory()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.length()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addValue(String,String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValueEnum(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValue(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.nextElement()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValues(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getMap()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.convertName(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNames()", "src/main/java/org/apache/james/mime4j/util/TempStorage.java@org.apache.james.mime4j.util.TempStorage.getInstance()", "src/main/java/org/apache/james/mime4j/util/TempStorage.java@org.apache.james.mime4j.util.TempStorage.setInstance(TempStorage)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.getMessage()", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.add_escapes(String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(String)", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testAddField()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.DefaultBodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testRead()", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.setResult(byte,int,byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toBase64(byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.checkLineLength(byte,int)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.main(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte,byte)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "src/test/java/org/apache/james/mime4j/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.LineReaderInputStreamAdaptorTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentId()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDescription()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersion()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testLanguageParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentMD5Url()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte,int)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersionDefault()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationWithComment()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionType()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReading()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testMultipartEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.raw(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMultipart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(char)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testAutomaticContentDecoding()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.field(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(char)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testStop()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMultipart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.raw(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParse()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.field(String)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64Latin1Body()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.checkBody(String)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadSimpleBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64ASCIIBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeQuotedPrintable()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeASCIIBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamTest.java@org.apache.james.mime4j.MimeTokenStreamTest.checkNextIs(int)", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.checkState(int)", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.tearDown()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testMultipartMessageWithoutHeader()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMoreComplexMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseSimpleMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.checkState(int)", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.tearDown()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.setUp()", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testReadSingleByte()", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testTruncate()", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testReadManyBytes()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSimpleAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testInvalidAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testInvalidAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendEmptyCharArray()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendOneByte()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendNullCharArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.suite()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullByteArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testInvalidCharArrayAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testInvalidAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendSingleChar()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendString()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.TestCharArrayBuffer(String)", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendISOByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullString()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.main(String)", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testIndexOf()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSubstringIndexOfOutBound()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSimpleAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testEnsureCapacity()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSubstring()", "src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResource(String,String)", "src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResourceAsStream(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeB()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testContentType()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testPlainLine()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.parse(String)", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithNestedComments()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithComments()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.constructString(int)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.createMessage(byte)", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartMixed()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartAlternative()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.suite()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(Body,File)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.escape(String)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testIsMultipart()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.createMessage(byte)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.getReader()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.getReader()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String,String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String,String)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.testCopy()", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.constructString(int)", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.testNonASCII()", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.testAllASCII()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempFile()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempFileStringString()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testGetRootTempPath()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempPathString()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempPath()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.getSampleMap()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValues()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValue()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValueEnum()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNameArray()"], "532988378ef03e9235f21569e55269dbe7cb24f3": ["examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)"], "02be12312b78046ecb27190aea45e71fdaed1988": ["src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getCount()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.replaceBodyPart(BodyPart,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.removeBodyPart(int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)"], "312381e2ab3e2e22ac8b0ffc97cc4023e553bc20": ["examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.main(String)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.getObject()", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.toString()", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.toString()", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.run()", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/java/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)"], "67d705efcfcd995ea07605a7953edfd2bc53c9b6": ["src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(String)", "src/main/java/org/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "src/main/javorg/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)"], "db390c15702eff7ba6b0cdb5855ffc5503bb9b5c": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()"], "54cf4c55077a2488061f377e96d6ccdf10ebceff": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setFlatMode()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setContentDecoding(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor,boolean,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)"], "085c69be02491cad869f4fb6008cdb83bb0f7cea": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.containsBase64Byte(byte)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.containsBase64Byte(byte)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/main/javorg/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.parseContentType(String)", "src/main/javorg/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.parseContentType(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionFilename()", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionFilename()", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(ArrayList,boolean)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(ArrayList,boolean)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()", "src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.toString()", "src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.toString()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.addField(Field)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.setField(Field)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.removeFields(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getField(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.setField(Field)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getField(String)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.addField(Field)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.removeFields(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.delete()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.delete()", "src/main/javorg/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.delete()", "src/main/javorg/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.delete()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.clone()", "src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.clone()", "src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.next()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.next()", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Object)", "src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/main/javorg/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Object)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueMessageId(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueBoundary()", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueMessageId(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueBoundary()", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "src/main/javorg/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testBase64OutputStream()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.assertEquals(byte,byte)", "src/test/javorg/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "src/test/javorg/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testBase64OutputStream()", "src/test/javorg/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "src/test/javorg/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/javorg/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.constructString(int)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.constructString(int)", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.assertEquals(byte,byte)", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(String)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(String)", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.constructString(int)", "src/test/javorg/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.constructString(int)", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "src/test/javorg/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "src/test/javorg/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "src/test/javorg/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()"], "ee7fa00e4e58cf7a7299982080e0e99371f88dfe": ["core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)"], "165ca378610334025d3293889542001537886446": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMultipart(Multipart)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setText(TextBody,String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String,long)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setBody(Body,String,Map)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getFilename()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMultipart(Multipart,Map)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMessage(Message)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setBody(Body,String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.isMimeType(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setFilename(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setText(TextBody)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getTo()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setSender(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Address)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setSubject(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Address)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.createMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailbox(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getSubject()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getMailbox(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Address[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setDate(Date)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Address)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getBcc()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Address)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getSender()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Address)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newUniqueBoundary()", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,Map)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentType(String,Map)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl()", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailbox(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentType(String,Map)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newUniqueBoundary()", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newSubject(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailboxList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,Map)", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()"], "0879e0cd3ad72636ad526c5258c431b7cf830593": ["dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.createParser(Collection)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDSTNoDayOfWeek()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testDateDST()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.parse(String)"], "02b6cf919214698bf2f0d63ebe00981573f26809": ["dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()"], "6c42272d5a901af7fe103df0ffa19d1fdc951ff2": ["src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getEncodedString()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getDisplayString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getDisplayString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getEncodedString()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()"], "f71467c17e54f730a7631a7b30d72d57cfc79c42": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig,StorageProvider)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(StorageProvider,InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getInputStream()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getInputStream()", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.getReader()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(StorageProvider,InputStream,String)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.getReader()", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorage(Storage,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorage.delete()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorage.CipherStorage(Storage,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.getInstance()", "src/main/java/org/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.setInstance(StorageProvider)", "src/main/java/org/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.reset()", "src/main/java/org/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.initialize()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorage.MemoryStorage(byte,int)", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorage.delete()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorage.delete()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.TempFileStorage(File)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.TempFileStorageProvider()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorage.TempFileStorage(File)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.delete()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorage.delete()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorage.getInputStream()", "src/test/java/org/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "src/test/java/org/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.testDefaultIsTempFile()", "src/test/java/org/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.testSetter()", "src/test/java/org/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.createData(int)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testThresholdStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testMemoryStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testTempFileStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testCipherStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testDelete(StorageProvider)"], "6ef0a45a50e53942b06b3a47ba2442b2f610d5b1": ["src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String,String)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.Base64OutputStream(Writer)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream._encode(int)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.write(int)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream._processArray(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.flush()", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream._writeBase64(byte,byte,byte)", "src/main/java/org/apache/james/mime4j/util/Base64OutputStream.java@org.apache.james.mime4j.util.Base64OutputStream.finish()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encodeInputBuffer(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableOutputStream.flush()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.wrapQuotedPrintable(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.wrapBase64(OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeInputBuffer(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableOutputStream.close()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.close()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.flush()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.flushOutput()", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encodeInputBuffer(int)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.escape(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.read()", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.read()", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.QuotedPrintableEncoder(int,boolean)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeInputBuffer(int)", "src/main/java/org/apache/james/mime4j/util/LineBreakingOutputStream.java@org.apache.james.mime4j.util.LineBreakingOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/LineBreakingOutputStream.java@org.apache.james.mime4j.util.LineBreakingOutputStream.LineBreakingOutputStream(OutputStream,int)", "src/main/java/org/apache/james/mime4j/util/LineBreakingOutputStream.java@org.apache.james.mime4j.util.LineBreakingOutputStream.write(int)", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.Base64OutputStreamTest(String)", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.testOnePaddingChar()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest._testWriteChar(String,String)", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest._testWriteArray(String,String)", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.testNoPaddingChar()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.testTwoPaddingChars()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.testMultipleWrites()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.testWriteBinaryData()", "src/test/java/org/apache/james/mime4j/util/Base64OutputStreamTest.java@org.apache.james.mime4j.util.Base64OutputStreamTest.suite()", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.roundtripUsingOutputStream(String)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.testBase64OutputStream()", "src/test/java/org/apache/james/mime4j/util/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.util.LineBreakingOutputStreamTest.testLongLine()"], "6fce73d9d22035214a6d1ef5d489af7d0dab4e83": ["examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.ignoreEncoder(Charset)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getWriter(ContentTypeField,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBody(Body,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.encodeStream(OutputStream,String,boolean)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getCharsetEncoder(ContentTypeField)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeEntity(Entity,OutputStream)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.constructString(int)", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/javorg/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "src/test/javorg/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)"], "a455e654f241c4900f8477a1eefce170c0349707": ["src/main/java/org/mime4j/message/BodyPart.java@org.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getBoundary()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.getRawMessageAsByteArray()"], "61385fb2f82fd71f01846ca37ac42afb3e999c46": ["src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "src/main/java/org/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "src/main/javorg/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)"], "222ed3681dc35a89c1589f9b1c35f054dd0fba1d": ["core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)"], "679af7b361f7f4d03d120349c8f1888c8aa18d3d": ["src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._processArray(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(Writer)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.finish()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._encode(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._writeBase64(byte,byte,byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.close()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.flushOutput()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.plain(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.plain(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.clearPending()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.toInt(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.lineBreak()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.clearPending()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.toInt(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeInputBuffer(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.wrapQuotedPrintable(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.flush()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.flush()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.completeEncoding()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.writePending()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.writePending()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encode(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.encodeInputBuffer(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.softBreak()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.escape(byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.copy(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.wrapBase64(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.lineBreak()", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.completeEncoding()", "src/main/java/org/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.LineBreakingOutputStream(OutputStream,int)", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getMimeType()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getCharset()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getMediaType()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getBoundary()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getContentTypeParameters()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getContentLength()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.toString()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.DefaultBodyDescriptor()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getTransferEncoding()", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.parseContentType(String)", "src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.getSubType()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionParameters()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentMD5Raw()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLocation()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseDate(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLocation(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseMimeVersion(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentId(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionSize()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeMajorVersion()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionType()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionCreationDate()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeVersionParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getMimeMinorVersion()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDescription(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentId()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLocationParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLanguageParseException()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDescription()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionReadDate()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseMD5(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionModificationDate()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentLanguage()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.getContentDispositionFilename()", "src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.monitor(Event)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.toString()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.message(Event)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.stateToString(int)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.warn(Event)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getField()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.debug(Event)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.getState()", "src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.Event(String)", "src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.toString()", "src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.hashCode()", "src/main/java/org/apache/james/mime4j/parser/Event.java@org.apache.james.mime4j.parser.Event.equals(Object)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advance()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getDataStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.skipHeader(String)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.clearMimeStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getRecursionMode()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLineNumber()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/parser/MimeParseEventException.java@org.apache.james.mime4j.parser.MimeParseEventException.MimeParseEventException(Event)", "src/main/java/org/apache/james/mime4j/parser/MimeParseEventException.java@org.apache.james.mime4j.parser.MimeParseEventException.getEvent()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentDecoding(boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isContentDecoding()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.stop()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.isRaw()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setContentHandler(ContentHandler)", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stateToString(int)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.next()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.parse(InputStream)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getField()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getState()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.parseHeadless(InputStream,String)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getDecodedInputStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.isRaw()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getReader()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getFieldName()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(boolean,boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getRecursionMode()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getState()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.advance()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getField()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/parser/RawEntity.java@org.apache.james.mime4j.parser.RawEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.pos()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.indexOf(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.indexOf(byte)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.skip(int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.capacity()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.buf()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.ensureCapacity(int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.length()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.hasBufferedData()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.clear()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.limit()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.toString()", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.charAt(int)", "src/main/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStream.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStream.expand(int)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.close()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.reset()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.available()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/EOLConvertingInputStream.java@org.apache.james.mime4j.stream.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/EOLConvertingInputStream.java@org.apache.james.mime4j.stream.EOLConvertingInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/EOLConvertingInputStream.java@org.apache.james.mime4j.stream.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/stream/EOLConvertingInputStream.java@org.apache.james.mime4j.stream.EOLConvertingInputStream.close()", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStream.java@org.apache.james.mime4j.stream.LineReaderInputStream.LineReaderInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.isUsed()", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.read()", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.eof()", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptor.toString()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.toString()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.calculateBoundaryLen()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.isLastPart()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.endOfStream()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.eof()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.hasData()", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "src/main/java/org/apache/james/mime4j/stream/MimeBoundaryInputStream.java@org.apache.james.mime4j.stream.MimeBoundaryInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.available()", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/PartialInputStream.java@org.apache.james.mime4j.stream.PartialInputStream.getBytesLeft()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.getPosition()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.close()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.reset()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.available()", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.truncate()", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.getLineNumber()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.byteAt(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toByteArray()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(Object)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(String)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(CharArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.indexOf(int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.CharArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.indexOf(int,int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.toCharArray()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(char)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.substringTrimmed(int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(CharArrayBuffer)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(ByteArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.charAt(int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.substring(int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.ensureCapacity(int)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testTwoPaddingChars()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest._testWriteArray(String,String)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testNoPaddingChar()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.suite()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testOnePaddingChar()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest._testWriteChar(String,String)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.tearDown()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testMultipleWrites()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testWriteBinaryData()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.Base64OutputStreamTest(String)", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.tearDown()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testBase64OutputStream()", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.roundtripUsingOutputStream(String)", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.testCopy()", "src/test/java/org/apache/james/mime4j/decoder/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.decoder.LineBreakingOutputStreamTest.testLongLine()", "src/test/java/org/apache/james/mime4j/decoder/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.decoder.LineBreakingOutputStreamTest.testLineLengthShorterThanInput()", "src/test/java/org/apache/james/mime4j/decoder/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.decoder.LineBreakingOutputStreamTest.testZeroLengthInput()", "src/test/java/org/apache/james/mime4j/decoder/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.decoder.LineBreakingOutputStreamTest.testLineLengthEqualInput()", "src/test/java/org/apache/james/mime4j/decoder/LineBreakingOutputStreamTest.java@org.apache.james.mime4j.decoder.LineBreakingOutputStreamTest.testLineLengthLongerThanInput()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testDontEscapeSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testDontEscapeTabsBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testDontEscapeLF()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testDontWhiteSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testEscapeSpaceAtLineEnd()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testDontEscapeCR()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.check(String,String)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.decoder.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDescription()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationWithComment()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testLanguageParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionType()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.describe(byte)", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentMD5Url()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.describe(byte,int)", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersion()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentId()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testMimeVersionDefault()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.suite()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testAutomaticContentDecoding()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(String)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMultipart()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endBodyPart()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startBodyPart()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.nextIs(int)", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.parser.MimeStreamTokenMessageRfc822Test.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.parser.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.parser.MimeTokenStreamBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeQuotedPrintable()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadSimpleBody()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64ASCIIBody()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeASCIIBody()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64Latin1Body()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.parser.MimeTokenStreamReaderTest.checkBody(String)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.checkNextIs(int)", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.testSetRecursionModeBeforeParse()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenStreamTest.java@org.apache.james.mime4j.parser.MimeTokenStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.checkState(int)", "src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MultipartStreamTest.java@org.apache.james.mime4j.parser.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testMultipartMessageWithoutHeader()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseSimpleMessage()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMoreComplexMessage()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.checkState(int)", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.tearDown()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.setUp()", "src/test/java/org/apache/james/mime4j/parser/MultipartTokensTest.java@org.apache.james.mime4j.parser.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "src/test/java/org/apache/james/mime4j/parser/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.parser.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "src/test/java/org/apache/james/mime4j/parser/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.parser.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(String)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endBodyPart()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(char)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMessage()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.raw(InputStream)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(String)", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endHeader()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMessage()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMultipart()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startBodyPart()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.testRead()", "src/test/java/org/apache/james/mime4j/stream/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.stream.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testBasicReading()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/java/org/apache/james/mime4j/stream/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.stream.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/stream/RootInputStreamTest.java@org.apache.james.mime4j.stream.RootInputStreamTest.testTruncate()", "src/test/java/org/apache/james/mime4j/stream/RootInputStreamTest.java@org.apache.james.mime4j.stream.RootInputStreamTest.testReadSingleByte()", "src/test/java/org/apache/james/mime4j/stream/RootInputStreamTest.java@org.apache.james.mime4j.stream.RootInputStreamTest.testReadManyBytes()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidAppend()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSimpleAppend()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendEmptyCharArray()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendNullCharArray()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testSubstringIndexOfOutBound()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendNullCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testInvalidCharArrayAppend()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.main(String)", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendNullString()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testIndexOf()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.suite()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.TestCharArrayBuffer(String)", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testEnsureCapacity()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testSubstring()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendString()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testInvalidAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendISOByteArray()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendNullByteArrayBuffer()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendNullByteArray()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testAppendSingleChar()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/util/TestCharArrayBuffer.java@org.apache.james.mime4j.util.TestCharArrayBuffer.testSimpleAppend()"], "85129f85d936e11ba29665b9f1ad7d3def36383a": ["src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read()", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read()"], "c5d3b8bd5d351f278a09dbb7a1fb65b172efcb43": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getBodyDescriptor()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForPreamble()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.testShouldReturnValidDescriptorForEpilogue()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.setUp()"], "cc7e1e54e6527a629f02f073a92444e0eb03c160": ["src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.handleUnexpecedPad(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.decodePad(int,int,byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read0(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream,boolean)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.handleUnexpectedEof(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read(byte)", "src/main/javorg/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.fillBuffer()", "src/main/javorg/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.decodeAndEnqueue(byte,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read()", "src/main/javorg/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testStrictUnexpectedEof()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testLenientUnexpectedPad()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testStrictUnexpectedPad()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testReadOffset()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testLenientUnexpectedEof()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testReadInt()"], "d430823597309f84ce76e25acdc68ef8e6a805a3": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)"], "465575adc12b1b9df20dd7c71dcfe26d59619009": ["core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "core/src/main/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorFactory.newInstance()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,boolean)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.newBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "core/src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.newBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.newBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/BasicMimeTokenStream.java@org.apache.james.mime4j.stream.BasicMimeTokenStream.BasicMimeTokenStream(MimeEntityConfig,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.toString()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.isMaximalBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.toString()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.MimeEntityConfig()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setMaximalBodyDescriptor(boolean)", "core/src/test/java/org/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.setUp()", "core/src/test/javorg/apache/james/mime4j/parser/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.parser.MaximalBodyDescriptorTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()"], "447ab517b0606d7a7f17c5e42bfe790a59265fd2": ["core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.clearMimePartStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.decodedStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.stop()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.decodedStream(InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.clearMimePartStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.stop()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.build()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()"], "ce4d27537dafe9a7a3d0b50f6edd1353c3c42d2a": ["core/src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getInputStream()", "core/src/main/javorg/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.writeTo(OutputStream)", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getMimeCharset()", "core/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getInputStream()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getInputStream()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.getInputStream()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.writeTo(OutputStream)", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.writeTo(OutputStream)"], "e15c2f211091acaca400cc01fdf869e89301356c": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Rfc822DateFormat.Rfc822DateFormat()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.format(Date,StringBuffer,FieldPosition)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.Rfc822DateFormat()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.initialValue()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Rfc822DateFormat.format(Date,StringBuffer,FieldPosition)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidDate()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()"], "79053794224ff7a3494bc2cde2735478bbe8c9ee": ["core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonWhiteSpaceBetweenEncodedWordsIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testInvalidEncodedWordsAreIgnored()"], "4a51d573606b1e314d47ae2e4ec30c1cae2c6f48": ["dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.getAddressList()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.AddressListFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.getDate()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.getMailbox()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.MailboxFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.MailboxListFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.getMailboxList()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,DecodeMonitor,FieldParser,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,FieldParser,BodyFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(FieldParser,DecodeMonitor)"], "780041520dcb350eebd7d5d39c353c584f1107f1": ["src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setContentDecoding(boolean)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isContentDecoding()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.MimeStreamParser()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getDecodedInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getReader()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getReader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testAutomaticContentDecoding()"], "345a32115ed2f61820669eaf538747372414e53b": ["src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.close()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.reset()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.available()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte)", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.close()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.markSupported()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.available()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.reset()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.skip(long)", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.getUnderlyingStream()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.checkIfClosed()", "src/main/javorg/apache/james/mime4j/stream/CloseShieldInputStream.java@org.apache.james.mime4j.stream.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.close()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.reset()", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.available()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.skip(long)", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.read()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.mark(int)", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.available()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.markSupported()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.close()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.reset()", "src/main/javorg/apache/james/mime4j/stream/PositionInputStream.java@org.apache.james.mime4j.stream.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read()", "src/main/javorg/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read()", "src/main/javorg/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/stream/RootInputStream.java@org.apache.james.mime4j.stream.RootInputStream.RootInputStream(InputStream)"], "72507b8e6e7c99f54388ed896682bfe95bfbe8a1": ["src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()"], "9496dcb6927a1ed1079594f613d981a54c39edbf": ["core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "core/src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()"], "d5ee778b7f9bc1054ac2c63799f4b5018d6f66cd": ["src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.getReader()", "src/main/javorg/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.getReader()", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)", "src/main/javorg/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)"], "5ee294466721140de11b83f45e9624b399215f55": ["src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()"], "6dfae6fdd4b1a4a36c3128bdea651ac12ebcda3d": ["src/main/java/org/apache/james/mime4j/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.LineReaderInputStreamAdaptor.toString()"], "da99013500a43ca1dd502881d0ce38959f03ea08": ["benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)"], "d18d7a8d010ecdee587208f57b223e6a9a070903": ["src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(byte,int,int)", "src/main/javorg/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.append(byte,int,int)"], "d7cc9e33b4da0e3a14ed628f8da7e2cbc12daee7": ["dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "dom/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()"], "82eca4941c5206e62e2a138e07ad2c717ae74fd2": ["src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testRead()"], "906f8ea6879aab9d55f92e87af89c7ce554ddd99": ["src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isRaw()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.stop()", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseHeader(InputStream)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseEntity(InputStream)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.stop()", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isRaw()", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseBodyPart(InputStream)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseMessage(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Entity(InputStream,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParsingFieldState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.parseField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.BodyPart(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.Message(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.BodyPart.BodyPart(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParsingFieldState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.isRaw()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Message(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.Entity(InputStream,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()"], "f09991baded9caf1caf3b548b98d78a7db51b0d0": ["src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isDispositionType(String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isInline()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getDispositionType()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParseException()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.isAttachment()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getReadDate()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.ContentDispositionField(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParameter(String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getParameters()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getSize()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parseDate(String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getCreationDate()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getModificationDate()", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.getFilename()", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(String)", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.setUp()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "src/test/java/org/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()"], "f5ea3a491d251cfd97c3a7e1cc1f20b31940d672": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,Charset)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWordsWithFallback()"], "513969caa8416986eccc7d8411c5b5f01c868379": ["src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNameArray()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addValue(String,String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringArray(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValueEnum(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValue(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.nextElement()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getValues(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getMap()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.addMapValue(Map,String,String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.hasMoreElements()", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.convertName(String)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asMap(Map)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asString(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.asStringEnum(Object)", "src/main/java/org/apache/james/mime4j/util/StringArrayMap.java@org.apache.james.mime4j.util.StringArrayMap.getNames()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.getSampleMap()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValues()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValue()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.assertEquals(String,Enumeration)", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetValueEnum()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetMap()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNames()", "src/test/java/org/apache/james/mime4j/util/StringArrayMapTest.java@org.apache.james.mime4j.util.StringArrayMapTest.testGetNameArray()"], "6c31bd1e8f8b97cc432bbf9580e7383f00de1506": ["dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(String[])", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List,boolean)", "dom/src/main/javorg/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(List)", "dom/src/main/javorg/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Iterable)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addTextPart(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBinaryPart(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBinaryPart(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addTextPart(String,Charset)", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithNoDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCustomBody()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCopy()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java@org.apache.james.mime4j.message.MultipartBuilderTest.testCopy()", "dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java@org.apache.james.mime4j.message.MultipartBuilderTest.testBasis()", "dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java@org.apache.james.mime4j.message.MultipartBuilderTest.testAddCustomPart()"], "494eace063935a1fb104e768bd255bce8ab7aa63": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseLocation(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLocationParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentLocation()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/javorg/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testLanguageParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentLocationWithComment()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)"], "567e3e46909d938d2fe494aeabfffc58ea4ce7dc": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String)"], "e6cba8274eaeca214522bb92cff96ebef1c083a3": ["dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()"], "6abdfd170243a50d6f876925598b7ffdbba5b116": ["core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.suite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.decode(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testAutomaticContentDecoding()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testStop()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMultipart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testBoundaryInEpilogue()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endMessage()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.field(RawField)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.endHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMultipart(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMultipart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endMessage()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(String)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.escape(char)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(RawField)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.endHeader()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.raw(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.preamble(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startBodyPart()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startMessage()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.body(BodyDescriptor,InputStream)"], "4d0abb92e881c6b185e3a723c5f455dc442e1e18": ["src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close0()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.writePad()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.writeLineSeparator()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.checkLineSeparator(byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush0()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flushBuffer()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.resizeBuf()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.containsBase64Byte(byte)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.isBase64(byte)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testNoLineSeparators()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testLineSeparators()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.encodeLs(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.encode(String,int,byte)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.encodeNoLs(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testWriteInt()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testWriteFlush()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testWriteOffset()"], "0222376d4fa4b1a8affb72c1213799f897fceb91": ["benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.createTest(int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.AbstractContentHandlerTest.run(byte,int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)"], "71b1ca80907e5c142d13d0ddf52118c30efabb02": ["src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationWithComment()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testLanguageParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionType()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentMD5Url()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "src/test/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testLanguageParameters()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentMD5Url()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionType()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentDispositionParameters()", "src/test/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptorTest.testContentLocationWithComment()"], "31fc20a56f5d53ee21c4d1f3c7143ddb54071417": ["src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.writeTo(OutputStream)", "src/main/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/javorg/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.writeTo(OutputStream)", "src/main/javorg/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)"], "6ff1dc47f32eb38348f07e6ed3307dfd7e99eb88": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)"], "e6e5ce9ae8e5c6504482bbbc38c352864ba359ea": ["core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.MimeEntityConfig()"], "1dca95e0524b1aa49a5fa1d8975615c90fe1934a": ["src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,Mailbox)", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()"], "78699d466a8c3dd67b78a347cbf4043b2e26d952": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentId()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentId(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDescription()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMimeVersion(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDescription(String)", "src/main/javorg/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/javorg/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMimeVersion(String)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentId()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDescription()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "src/test/javorg/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()"], "90251b96d3c8c70859e99aaa0fba626e6f915132": ["core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.convert(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(int,InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.peek(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.bufferLength()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueData()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.enqueueBlanks()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.advance()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decodeSpecialSequence()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.decode()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.close()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.populatePushbackQueue()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()"], "0a5c7bb61d7e1f77c2482a4f33d408622874a317": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encodeInputBuffer(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeInputBuffer(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.checkLineLength(byte,int)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailStrictError()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentLenient()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testBinaryAttachmentStrictIgnore()", "src/test/java/org/apache/james/mime4j/message/MessageWriteToTest.java@org.apache.james.mime4j.message.MessageWriteToTest.testSimpleMailLenient()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()"], "c709ea31443266e41711cc36f1a23ab28b19d680": ["src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset(ContentTypeField)"], "4e78a99de2f732af0fc139510927122ec7ddbacb": ["samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.getObject()", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.getObject()", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.main(String)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Header)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.run()", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.toString()", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Entity)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.createNode(Multipart)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.MessageTree(Message)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.toString()", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "samples/org/mime4j/samples/tree/MessageTree.java@org.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)"], "4568079e3bef46ee3c6de8af927996883641f2bf": ["benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.compare(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.AbstractContentHandlerTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.createTest(int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)"], "f3be165121a63eb57a7692c21efb8a01fb6e3153": ["src/main/java/org/apache/james/mime4j/message/BodyCopier.java@org.apache.james.mime4j.message.BodyCopier.copy(Body)", "src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(BodyPart)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.Entity(Entity)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(Header)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(Message)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(Multipart)", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMultipart()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyBodyPart()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyMessage()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyBodyPart()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMultipartMessage()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyEmptyMultipart()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyMessage()"], "68dceaa2ca559224feb44e9108aa2f66a501cfd5": ["src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()"], "cd362e02fd37faaf8150c15ee7a53424777d2f08": ["core/src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String,DecodeMonitor,Charset)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.transfer(int,byte,int,int,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.transfer(int,byte,int,int,boolean)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.unread(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.INIT_BITSET(int[])", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.INIT_BITSET(int[])", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "core/src/test/javorg/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeSpecials()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeWrapping()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeSpecials()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.epilogue(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.preamble(InputStream)", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.body(BodyDescriptor,InputStream)", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.epilogue(InputStream)", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.field(Field)", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.body(BodyDescriptor,InputStream)", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.preamble(InputStream)", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.equals(Object)", "dom/src/main/javorg/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.equals(Object)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddress(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(ByteSequence,ParserCursor,BitSet)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor,BitSet)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseAddress(ByteSequence,ParserCursor,BitSet)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.obtainField(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "dom/src/test/javorg/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxEquals()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxEquals()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.equals(Object)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.hashCode()", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.hashCode()", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.equals(Object)"], "08b2a22cdb7d2b2d2259e2e6e67a8897429fc320": ["core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testFoldedContentType()"], "30c8bcfd547511cccaf877076748eddd6e87ebd8": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(InputStream,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.field(RawField)", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newSubject(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newUniqueBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailbox(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newUniqueBoundary()", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newSubject(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailboxList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,DecodeMonitor,MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler()", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(RawField)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/LoggingMonitor.java@org.apache.james.mime4j.samples.dom.LoggingMonitor.isListening()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/LoggingMonitor.java@org.apache.james.mime4j.samples.dom.LoggingMonitor.warn(String,String)"], "73c901d1ec70b2033e8e156084aea14a795d488f": ["src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.indexOfWsp(String,int)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.fold(String,int)", "src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFoldOverlyLongNonWhitespace()"], "f66774ac68408e49d75ab6a5a9b3371eb514b945": ["src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.getMessage()", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.add_escapes(String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(String)"], "0305055ddb918504bb21e4f10a16286b00f3db80": ["src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "src/main/javorg/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)"], "5bf35051e7071629a5c8de5456fe5a4d46cb96c9": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setMimeBuilder(MimeBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.writeTo(Message,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.getMimeWriter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setMimeWriter(MimeWriter)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.getMimeBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeMessage(Message,OutputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)"], "06176a43f74565d8d9c73ca6665ca5d5aa65a3c1": ["src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)"], "d7670fb750dbb8e5b973ef4a7ef48cadafd14095": ["src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.toInt(byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.Base64Encoder(int)", "src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.setResult(byte,int,byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64Encoder.java@org.apache.james.mime4j.decoder.Base64Encoder.encodeInputBuffer(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.encodeInputBuffer(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeInputBuffer(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.checkLineLength(byte,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.toInt(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.Base64Encoder(int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.Base64Encoder(int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.setResult(byte,int,byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.toInt(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.setResult(byte,int,byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.Base64Encoder.checkLineLength(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/LineBreakingOutputStream.java@org.apache.james.mime4j.decoder.LineBreakingOutputStream.write(int)"], "f28400be0570bfa8e5ef7fd1ab44289f933c3be8": ["src/test/java/org/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.testDefaultInstance()", "src/test/javorg/apache/james/mime4j/message/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.message.storage.DefaultStorageProviderTest.testDefaultIsTempFile()"], "4009783fda700ba42484c87aa37cb67bd64bb8ab": ["src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.tearDown()", "src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithDefaultConfiguration()", "src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.setUp()", "src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithFlat()", "src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.nextIs(int)", "src/test/java/org/apache/james/mime4j/MimeStreamTokenMessageRfc822Test.java@org.apache.james.mime4j.MimeStreamTokenMessageRfc822Test.testShouldParseMessageRFC822CorrectWithNoRecurse()"], "d924dcb518f4aa85a7e7ff21920a472251345c0d": ["dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(SingleBodyBuilder)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(MultipartBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMultipart(MultipartBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBodyPart(BodyPartBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBodyPart(Entity)"], "dbe2d960888dfbb92cb555dfb0d3215151b310e0": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCharsetLenientTest.java@org.apache.james.mime4j.dom.MessageCharsetLenientTest.testLenientCharsetHandling()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCharsetLenientTest.java@org.apache.james.mime4j.dom.MessageCharsetLenientTest.testLenientCharsetHandling()"], "7829f79a69bd3f07bfea324edbb30ab850b8c886": ["dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.parseShouldAddCenturyWhen2Digits()", "dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.dayIsDependentFromTheDateNotFromTheGivenDay()", "dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.setup()", "dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.parseShouldReturnYearWhen4Digits()"], "582e990ad489db219364bfd5b70333de1bd999fc": ["benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)"], "2a914e6c0ad9d1b243011642da953a8b34b0575f": ["dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.getDescription()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDescriptionFieldImpl.java@org.apache.james.mime4j.field.ContentDescriptionFieldImpl.ContentDescriptionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.ContentIdFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentIdFieldImpl.java@org.apache.james.mime4j.field.ContentIdFieldImpl.getId()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.ContentLanguageFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.getLanguages()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.ContentLengthFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.getContentLength()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.getLocation()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.ContentLocationFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.ContentMD5FieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.getMD5Raw()", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentMD5FieldImpl.java@org.apache.james.mime4j.field.ContentMD5FieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.getEncoding()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.ContentTransferEncodingFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.getMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.getMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.MimeVersionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldImpl.java@org.apache.james.mime4j.field.MimeVersionFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentId()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentMD5Raw()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentMD5Raw()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseDate(String)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocationParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentId()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeVersionParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguageParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getContentLength()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getContentLength()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getTransferEncoding()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionDefault()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentId()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDescription()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersion()"], "5c5830375afc12b71055a73ce76e5895f0ab846e": ["dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.of(InputStream)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getDate()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.use(BodyDescriptorBuilder)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.enableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.use(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setTo(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.Builder()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.generateMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.of(Message)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setTo(String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.enableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setAddressList(String,Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailboxList(String,String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.use(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.parseAddresses(String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailboxList(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailbox(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setAddressList(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getFrom()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.parseMailboxes(String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setSender(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.clearFields()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailboxList(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setAddressList(String,String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getBcc()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getMailboxList(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setFrom(String[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.disableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getTo()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getCc()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setSubject(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getSender()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setFrom(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setAddressList(String,Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.use(MimeConfig)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(BinaryBody)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.getSubject()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.disableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setMailboxList(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.of()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.build()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Builder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(BinaryBody)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getFields()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getFields(String,Class)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getField(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.clearFields()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getBody()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getField(String,Class)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.AbstractEntityBuilder()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getCharset()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getSize()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.containsField(String)", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getFilename()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.raw(InputStream)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.startMessage()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.endMessage()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.field(Field)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.body(BodyDescriptor,InputStream)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.preamble(InputStream)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.endHeader()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.expect(Class)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.endMultipart()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.ParserStreamContentHandler(Entity,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.loadStream(InputStream)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.startMultipart(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.startBodyPart()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.ParserStreamContentHandler(Entity,MessageImplFactory,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.startHeader()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.endBodyPart()", "dom/src/main/java/org/apache/james/mime4j/internal/ParserStreamContentHandler.java@org.apache.james.mime4j.internal.ParserStreamContentHandler.epilogue(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getField(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.generateMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSubject()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.read(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(BinaryBody)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getBcc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyDescriptorBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFrom()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getBody()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.createCopy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(MimeConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.clearFields()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSender()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.containsField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSize()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSubject(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getTo()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSender()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.read(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(TextBody)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.clearFields()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSubject(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFrom()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReplyTo()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Multipart)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMailboxList(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Address)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseAddresses(String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.generateMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getAddressList(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDate()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableFlatMode()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.create()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyDescriptorBuilder)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMailbox(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.createCopy(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Address[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMessageId()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSubject()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(BinaryBody)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCc()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableContentDecoding()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(MimeConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableContentDecoding()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseMailboxes(String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.copy(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentType(String,NameValuePair[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getBcc()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(FieldParser)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableFlatMode()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testBuildWithNoDefaults()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testOfOnBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCustomBody()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testBuildWithDefaults()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithNoDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCustomBody()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCopy()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatOfMesageReturnNullDateWhenNoDateHeader()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetFrom()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatOfInputStreamReturnNullDateWhenNoDateHeader()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetMessageId()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCreateMessageId()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedReadNeverReturnNullDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetCc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedCreateCopyNeverReturnNullDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCustomBody()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testOfWithAMessage()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSender()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithNoDefaults()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedConstructorNeverReturnNullDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetBcc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedCreateNeverReturnNullDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithDefaults()"], "3b0b19fd99ba347e2883a435375351a98472dd72": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.writeTo(OutputStream,Mode)", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.writeTo(OutputStream,Mode)"], "abd229b3ffac7ee2734469f4f71f86363168bf65": ["dom/src/main/java/org/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Multipart)", "dom/src/main/javorg/apache/james/mime4j/internal/AbstractEntityBuilder.java@org.apache.james.mime4j.internal.AbstractEntityBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.getContentTypeParameters()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.AbstractMultipart(String,List)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMultipart(String)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMultipart(String,NameValuePair[])", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addContentTypeParameter(NameValuePair)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.setEpilogue(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.MultipartBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String,List)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetMultipartBody()", "dom/src/test/javorg/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetMultipartBody()"], "52a983895321163ea19fdb77a6f5060c2bf0367e": ["benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.initData(int)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.compare(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.encode(byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableOutputStreamBench.java@org.apache.james.mime4j.QuotedPrintableOutputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableOutputStreamBench.java@org.apache.james.mime4j.QuotedPrintableOutputStreamBench.initData(int)"], "6bf85616a83393a0ba6393041ee1885634b4145d": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Rfc822DateFormat.format(Date,StringBuffer,FieldPosition)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.format(Date,StringBuffer,FieldPosition)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Rfc822DateFormat.Rfc822DateFormat()", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.initialValue()", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.Rfc822DateFormat()", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.Rfc822DateFormat()", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.initialValue()", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.format(Date,StringBuffer,FieldPosition)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.Rfc822DateFormat.format(Date,StringBuffer,FieldPosition)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.formatDate(Date,TimeZone)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.Rfc822DateFormat()"], "c28ca968ef692b8286f27c1abb73a5d8fa1e3b50": ["examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)"], "aff532e2f40b137bcd7f2d7f384d09705405cb6c": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String,Map)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setContentTransferEncoding(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMessage(Message)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody,String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart,Map)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody,String)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMessage(Message)"], "159142b0ff7311e5961dbc6e28edc6ea9bcd8c0c": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setRecurse()", "dom/src/main/java/org/apache/james/mime4j/dom/ParseParams.java@org.apache.james.mime4j.dom.ParseParams.isFlatMode()", "dom/src/main/java/org/apache/james/mime4j/dom/ParseParams.java@org.apache.james.mime4j.dom.ParseParams.isContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/dom/ParseParams.java@org.apache.james.mime4j.dom.ParseParams.ParseParams()", "dom/src/main/java/org/apache/james/mime4j/dom/ParseParams.java@org.apache.james.mime4j.dom.ParseParams.setFlatMode(boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/ParseParams.java@org.apache.james.mime4j.dom.ParseParams.setContentDecoding(boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoader.java@org.apache.james.mime4j.dom.ServiceLoader.load(Class)", "dom/src/main/javorg/apache/james/mime4j/dom/ServiceLoader.java@org.apache.james.mime4j.dom.ServiceLoader.load(Class)", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoaderException.java@org.apache.james.mime4j.dom.ServiceLoaderException.ServiceLoaderException(String,Throwable)", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoaderException.java@org.apache.james.mime4j.dom.ServiceLoaderException.ServiceLoaderException(String)", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoaderException.java@org.apache.james.mime4j.dom.ServiceLoaderException.ServiceLoaderException(Throwable)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageFormatter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream,ParseParams,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.writeTo(Message,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setFlatMode()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setDecodeMonitor(DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setContentDecoding(boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setMimeWriter(MimeWriter)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.getMimeWriter()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageFormatterImpl.java@org.apache.james.mime4j.message.MessageFormatterImpl.setMimeWriter(MimeWriter)", "dom/src/main/java/org/apache/james/mime4j/message/MessageFormatterImpl.java@org.apache.james.mime4j.message.MessageFormatterImpl.getMimeWriter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageFormatterImpl.java@org.apache.james.mime4j.message.MessageFormatterImpl.writeTo(Message,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,ParseParams,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor,boolean,boolean)"], "014b6402852f36782ca2bef63438e3ce9d80ccc5": ["dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getFilename()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainHeader()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setHeader(Header)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setFilename(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getBody()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTypeField()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getParent()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getCharset()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getHeader()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.removeBody()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart,Map)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String,Map)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.dispose()", "dom/src/main/java/org/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.iterator()", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.toString()", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields()", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getField(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.Header(Header)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSubject(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.createMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getDate()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getFrom()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getTo()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getCc()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailboxList(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSender()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getBcc()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSubject()", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address[])", "dom/src/main/java/org/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getBodyParts()", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setBodyParts(List)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.Multipart(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.dispose()", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getSubType()", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getCount()", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setSubType(String)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.replaceBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.removeBodyPart(int)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity)", "dom/src/main/java/org/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getParent()", "dom/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.getParent()", "dom/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.copy(InputStream,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/dom/SingleBody.java@org.apache.james.mime4j.dom.SingleBody.copy()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.toString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.getDisplayString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.addMailboxesTo(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.flatten()", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.print()", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.size()", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.AddressList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/AddressList.java@org.apache.james.mime4j.dom.address.AddressList.get(int)", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.get(int)", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.toRouteString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.size()", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.toString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.doAddMailboxesTo(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.Group(String,MailboxList)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getMailboxes()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getName()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getDisplayString(boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getRoute()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getName()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getDisplayString(boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getCanonicalizedAddress()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getAddress()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getDomain()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.doAddMailboxesTo(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getLocalPart()", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.get(int)", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.MailboxList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.print()", "dom/src/main/java/org/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.size()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getDate()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getMonth()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getTimeZone()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getMinute()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.print()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.equals(Object)", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.toString()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.hashCode()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getHour()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getSecond()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getYear()", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.convertToYear(String)", "dom/src/main/java/org/apache/james/mime4j/dom/datetime/DateTime.java@org.apache.james.mime4j.dom.datetime.DateTime.getDay()", "dom/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(Throwable)", "dom/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(String,Throwable)", "dom/src/main/java/org/apache/james/mime4j/dom/field/ParseException.java@org.apache.james.mime4j.dom.field.ParseException.ParseException(String)", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getName()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getBody()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isValidField()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.toString()", "dom/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.AddressListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.getAddressList()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.ContentDispositionFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParameters()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isInline()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParameter(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isAttachment()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getSize()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.isDispositionType(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getFilename()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.ContentTransferEncodingFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.getEncoding()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.getEncoding(ContentTransferEncodingField)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldImpl.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getCharset()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getBoundary()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParameter(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType(ContentTypeField,ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.ContentTypeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getParameters()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.getDate()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.DateTimeFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.getParser()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidDispositionType(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.checkValidFieldName(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox0(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList0(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date0(String,Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/LoggingMonitor.java@org.apache.james.mime4j.field.LoggingMonitor.warn(String,String)", "dom/src/main/java/org/apache/james/mime4j/field/LoggingMonitor.java@org.apache.james.mime4j.field.LoggingMonitor.isListening()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.getMailbox()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.MailboxFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.getMailboxList()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.getParseException()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.MailboxListFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.getValue()", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.parse(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/UnstructuredFieldImpl.java@org.apache.james.mime4j.field.UnstructuredFieldImpl.UnstructuredFieldImpl(String,String,ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.main(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseMailbox(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddress(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseGroup(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddress(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseGroup(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.getInstance()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAngleAddr(ASTangle_addr)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildMailbox(ASTmailbox,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildString(SimpleNode,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.next()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.addSpecials(StringBuilder,Token)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.hasNext()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(ASTaddr_spec)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.ChildNodeIterator(SimpleNode)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.next()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.remove()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildGroupBody(ASTgroup_body,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildRoute(ASTroute)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddressList(ASTaddress_list,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.hasNext()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.remove()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,MailboxList)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.getEncodedString()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/GroupImpl.java@org.apache.james.mime4j.field.address.parser.GroupImpl.GroupImpl(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,String,String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.getEncodedString()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,String)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/MailboxImpl.java@org.apache.james.mime4j.field.address.parser.MailboxImpl.MailboxImpl(String,DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyCopier.java@org.apache.james.mime4j.message.BodyCopier.copy(Body)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.getStorageProvider()", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(Storage)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcTransferEncoding(ContentTransferEncodingField)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentType(String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newUniqueBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcMimeType(ContentTypeField,ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newContentDisposition(String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(Header)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentId()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocationParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguageParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeVersionParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentMD5Raw()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(String)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.loadStream(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newSubject(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcTransferEncoding(ContentTransferEncodingField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentDisposition(String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,DecodeMonitor,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newUniqueBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcMimeType(ContentTypeField,ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newContentType(String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBody(Body,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeEntity(Entity,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.encodeStream(OutputStream,String,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getBoundary(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeBytes(ByteSequence,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreamble(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreamble()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogue(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setEpilogueRaw(ByteSequence)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogueRaw()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getEpilogue()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.getPreambleRaw()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.setPreambleRaw(ByteSequence)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.copy()", "dom/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.StorageBinaryBody(MultiReferenceStorage)", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.copy()", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.StringTextBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.copy()", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.close()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.close()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.createStorageOutputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getSecretKeySpec()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "dom/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.getInstance()", "dom/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.setInstance(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.reset()", "dom/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.MemoryStorage(byte,int)", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.createStorageOutputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "dom/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.addReference()", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.incrementCounter()", "dom/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.decrementCounter()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.toStorage()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(int)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.close()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.createStorageOutputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.TempFileStorage(File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.close()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.close()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorage(File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.close()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.write0(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.close()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.delete()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.createStorageOutputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.toStorage0()", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "dom/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException()", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/contentdisposition/ParseException.java@org.apache.james.mime4j.field.contentdisposition.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException()", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException()", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.getMessage()", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Token,int,String)", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.add_escapes(String)", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException(Throwable)", "dom/src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.parser.ParseException.ParseException()", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.add_escapes(String)", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Throwable)", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(String)", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.getMessage()", "dom/src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.getFile(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.getFile(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.suite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,File)", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String,File)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getFile(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.suite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.escape(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.getFile(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(Body,File)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.getRawMessageAsByteArray()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testDisposeGetsPropagatedToBody()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.DummyBody.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.dispose()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.DummyBody.dispose()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testIsMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.assertEquals(byte,byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "dom/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "dom/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSize()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringDateTimeZone()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringNullParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionStringParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionString()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilenameSizeDate()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentDispositionFilename()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSubject()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentDisposition()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "dom/src/test/java/org/apache/james/mime4j/field/contentdisposition/ContentDispositionTest.java@org.apache.james.mime4j.field.contentdisposition.ContentDispositionTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "dom/src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testContentType()", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testPlainLine()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithNestedComments()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "dom/src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDescription()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationFoldedUrl()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentId()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersion()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentMD5Url()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte,int)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionDefault()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationRelativeUrl()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationWithComment()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testLanguageParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentDispositionParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testContentLocationAbsoluteUrl()", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.storageIsReadable(Storage)", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.copyTest(SingleBody)", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "dom/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "dom/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "dom/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.tearDown()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.delete()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.delete()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "dom/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCipherStorageProvider()", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.createData(int)", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testThresholdStorageProvider()", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testMemoryStorageProvider()", "dom/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testTempFileStorageProvider()"], "6ca2454710ce06f10272f3c9852293464b2a2d67": ["src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(Throwable)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getParseException()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isValidField()", "src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(Throwable)", "src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(String)", "src/main/java/org/apache/james/mime4j/field/ParseException.java@org.apache.james.mime4j.field.ParseException.ParseException(String,Throwable)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/contenttype/ParseException.java@org.apache.james.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/datetime/ParseException.java@org.apache.james.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/language/ParseException.java@org.apache.james.mime4j.field.language.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Token,int,String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException()", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Throwable)", "src/main/jjtree/org/apache/james/mime4j/field/address/ParseException.java@org.apache.james.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)"], "028ceb80069e99b28ddaf2b153b436822b252c26": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getCharset()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getMediaType()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getBoundary()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getContentLength()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getMimeType()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getTransferEncoding()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.BasicBodyDescriptor(String,String,String,String,String,String,long)", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.getSubType()", "core/src/main/java/org/apache/james/mime4j/stream/BasicBodyDescriptor.java@org.apache.james.mime4j.stream.BasicBodyDescriptor.toString()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.reset()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.parseContentType(Field)", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.newChild()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.FallbackBodyDescriptorBuilder(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.FallbackBodyDescriptorBuilder()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.newBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testAddField()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetContentLength()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testRawEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testObsoleteSyntaxEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSimpleEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMultipartEntity()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.DefaultBodyDescriptorBuilder(String,FieldParser,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.DefaultBodyDescriptorBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.DefaultBodyDescriptorBuilder(String)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.reset()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultBodyDescriptorBuilder.java@org.apache.james.mime4j.message.DefaultBodyDescriptorBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setBodyDescriptorBuilder(BodyDescriptorBuilder)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setMutableBodyDescriptorFactory(MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentId()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getBoundary()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentTypeParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(String,String,String,String,String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getSubType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMediaType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.toString()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentMD5Raw()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLength()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testAddField()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoDefaultToUsAsciiWhenUntyped()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetContentLength()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.tearDown()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor()"], "40424f0625156e2055896517068298c17967baef": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream,int)"], "a3963bd051049c456e995707c04d1cb35dbc039f": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getBoundary()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getCharset()", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(String)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(char)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.constructString(int)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.constructString(int)", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.testNonASCII()", "src/test/java/org/apache/james/mime4j/util/MessageUtilsTest.java@org.apache.james.mime4j.util.MessageUtilsTest.testAllASCII()"], "74df48ff2e9541cf960e771d12aed70273a83dd2": ["src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyStream()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyStream()"], "bf706690989e893d8d1926b17ea92f339dd1a313": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.containsField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.AbstractEntityBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getSize()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getBody()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFilename()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCharset()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getField(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReadDate()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentType(String,NameValuePair[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDispositionType()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCreationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getContentTransferEncoding()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.containsField(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSize()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.obtainField(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFilename()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getModificationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)"], "b0d1d2e99274e7cf41f695df8ed57efd474c2d32": ["src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.toString()"], "afb89b428b70c01c4316379fe5be1e42d62a29d6": ["src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream,int)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.monitor(Event)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.monitor(Event)", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,boolean,boolean)", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.clearMimeStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.createMimeStream()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.clearMimeStream()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxLineLen()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isMaximalBodyDescriptor()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.clone()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxLineLen(int)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isStrictParsing()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setStrictParsing(boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaximalBodyDescriptor(boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createStrictValidationStream()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.MimeTokenStream(boolean,boolean)", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.createMaximalDescriptorStream()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "src/test/java/org/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/javorg/apache/james/mime4j/message/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.message.ExampleMessagesRoundtripTest.runTest()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "src/test/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()"], "685de05ebe4cd1df500f4798084845758857ec21": ["core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCRStrictMode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakStrictMode()"], "e16c52d83c9b13d70c18af40618b8ac816126126": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setFieldParser(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.newMessage()", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setFlatMode(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setContentDecoding(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setBodyFactory(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setMimeEntityConfig(MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setDecodeMonitor(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.setMutableBodyDescriptorFactory(MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,FieldParser,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,FieldParser,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,FieldParser,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)"], "b81567a2c33e229223cc426e30ed5cb6199c3a41": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.setFlat(boolean)"], "96126301575fff168df0403588833daa42192c50": ["james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.caseSensitivenessShouldBeIgnoredWhenTurnedOff()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInIgnoringMimeShouldReturnFalseOnNonContainedText()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenTextIsAbsent()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.headerShouldBeMatchedWhenIgnoringMime()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldBeAbleToRecognizedMimeTypes()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.headerShouldBeMatchedWhenHeaderMatchingIsTurnedOn()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldBeAbleToLocateTextFragments()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnTrueWhenSearchingTextLocatedInSpecifiedMimePart()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenSearchingTextLocatedInOtherMimeParts()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInIgnoringMimeShouldIgnoreMimeStructure()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.caseSensitivenessShouldBeTakenIntoAccountWhenTurnedOn()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldReturnFalseWhenSearchingHeaderTextOutsideHeaders()", "james-utils/src/test/java/org/apache/james/mime4j/utils/search/MessageMatcherTest.java@org.apache.james.mime4j.utils.search.MessageMatcherTest.isFoundInShouldNotBeAffectedByInvalidMimeTypes()"], "b9ead7835af290b75acd33815ae9cee44ae77ab3": ["src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,String)"], "810d150726259c7e9c79bc9906c3390547475463": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.next()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()"], "2e84c2ab7d5d26ec1c7d16e36fe3c4f9628b15d4": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.initQTable(String)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)"], "3fd654b71b2e5edf93a2b039cafa846145cd54bd": ["src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.hasToBeEncoded(String,int)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.qEncodedLength(byte,Usage)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encode(String,Charset)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeB(byte)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeEncodedWord(String,Usage,int)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.bEncodedLength(byte)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.initQTable(String)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.determineEncoding(byte,Usage)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeEncodedWord(String,Usage)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeIfNecessary(String,Usage,int)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeB(String,String,int,Charset,byte)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.hexDigit(int)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.encodeQ(byte,Usage)", "src/main/java/org/apache/james/mime4j/decoder/EncoderUtil.java@org.apache.james.mime4j.decoder.EncoderUtil.determineCharset(String)", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testHasToBeEncoded()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeB()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWordSplit()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeQRestricted()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeQRegular()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.encodeB(String)", "src/test/java/org/apache/james/mime4j/decoder/EncoderUtilTest.java@org.apache.james.mime4j.decoder.EncoderUtilTest.testEncodeEncodedWord()"], "8d8d93d8dea7d5b5ccd53ae1272d0bcfd3b75cee": ["src/main/java/org/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.addField(String,String)", "src/main/javorg/apache/james/mime4j/descriptor/DefaultBodyDescriptor.java@org.apache.james.mime4j.descriptor.DefaultBodyDescriptor.addField(String,String)", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetContentLength()"], "2b4575e4626578bed11c3914f6ddb6011ffe3aef": ["src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncode()", "src/test/javorg/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/javorg/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncode()"], "30b7639e03ad4a9f02333326907100e24283efa0": ["src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream,boolean)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.close()", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.Base64InputStream(InputStream)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read0(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.decodePad(int,int,byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read()", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpectedEof(int)", "src/main/java/org/apache/james/mime4j/codec/Base64InputStream.java@org.apache.james.mime4j.codec.Base64InputStream.handleUnexpecedPad(int)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.checkLineSeparator(byte)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(int)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close0()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writeLineSeparator()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.writePad()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.flush0()", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/Base64OutputStream.java@org.apache.james.mime4j.codec.Base64OutputStream.write(byte)", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.clear()", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.ByteQueue()", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.iterator()", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.enqueue(byte)", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.count()", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.ByteQueue(int)", "src/main/java/org/apache/james/mime4j/codec/ByteQueue.java@org.apache.james.mime4j.codec.ByteQueue.dequeue()", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapBase64(OutputStream)", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.wrapQuotedPrintable(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.copy(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBaseQuotedPrintable(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hexDigit(int)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.bEncodedLength(byte)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.hasToBeEncoded(String,int)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.qEncodedLength(byte,Usage)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeIfNecessary(String,Usage,int)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(byte)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(String,String,int,Charset,byte)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int,Charset,Encoding)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeEncodedWord(String,Usage,int)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encode(String,Charset)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.initQTable(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(String,String,Usage,int,Charset,byte)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineEncoding(byte,Usage)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.clearPending()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.lineBreak()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.plain(byte)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.completeEncoding()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableEncoder.java@org.apache.james.mime4j.codec.QuotedPrintableEncoder.writePending()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.close()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.populatePushbackQueue()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.close()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flush()", "src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.next()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.hasNext()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.remove()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.iterator()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.increment(int)", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.get()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.decrement(int)", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.size()", "src/main/java/org/apache/james/mime4j/codec/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.codec.UnboundedFifoByteBuffer.add(byte)", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeLs(String)", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encode(String,int,byte)", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testLineSeparators()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncode()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteOffset()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteFlush()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.encodeNoLs(String)", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testNoLineSeparators()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.testWriteInt()", "src/test/java/org/apache/james/mime4j/codec/Base64OutputStreamTest.java@org.apache.james.mime4j.codec.Base64OutputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64OutputStream()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testBase64Encoder()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.tearDown()", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeEncodedWords()", "src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeB()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeB()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceEncoding()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.encodeB(String)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectEncoding()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testHasToBeEncoded()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRestricted()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQRegular()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordSplit()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWord()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordDetectCharset()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncode()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeLF()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontWhiteSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeTabsBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testDontEscapeCR()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testEscapeSpaceAtLineEnd()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()"], "0aef98aa2b84010ea4a52bf37a31fc8d541450b8": ["core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "core/src/main/javorg/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "core/src/main/javorg/apache/james/mime4j/codec/CodecUtil.java@org.apache.james.mime4j.codec.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encodeChunk(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.softBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flushOutput()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.completeEncoding()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.writePending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.plain(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.clearPending()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encode(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.escape(byte)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flush()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.close()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.lineBreak()", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(int,OutputStream,boolean)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.close()", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.write(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.flush()"], "9d0a79dd2382440a2c2c1ceee660eb996643f972": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.asBytes(Message)", "dom/src/test/java/org/apache/james/mime4j/message/DefaultMessageWriterTest.java@org.apache.james.mime4j.message.DefaultMessageWriterTest.asBytesShouldSerializeTheMessage()"], "e09af333ae40322643616001d51858175b90b83f": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeVersionParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMimeVersion(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeMajorVersion()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getMimeMinorVersion()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream(boolean,boolean)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createMaximalDescriptorStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createStrictValidationStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.createStrictValidationStream()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.MimeTokenStream()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/mimeversion/ParseException.java@org.apache.james.mime4j.field.mimeversion.ParseException.ParseException(Token,int,String)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersion()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersionDefault()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testMimeVersionHeaderBreak()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.tearDown()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testEmptyLine()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testPlainLine()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.check(String,int,int)", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.setUp()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.parse(String)", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithNestedComments()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.tearDown()", "src/test/java/org/apache/james/mime4j/field/mimeversion/MimeVersionParserTest.java@org.apache.james.mime4j.field.mimeversion.MimeVersionParserTest.testLineWithComments()"], "3f729a8117d36bbc5cb42a61a16e58ff7cd40a16": ["core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.skip(long)"], "0c4c67fc0cbaa472343110d909addd83db812a7e": ["core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.lookup(String)", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupNullInput()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookupFailure()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookup()"], "a571dd7ccfbde8297e995a38e809d5077183f0e3": ["src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.fillBuffer()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipLineDelimiter()"], "e086c03d464433cd6fa6a4722d46492129de56aa": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isSpecial(char)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.quote(String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTransferEncoding()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeString()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidContentType()"], "16eb70ffdfcccd7321eba573ab2c18dabfc42834": ["examples/src/main/java/org/apache/james/mime4j/samples/mbox/IterateOverMbox.java@org.apache.james.mime4j.samples.mbox.IterateOverMbox.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/mbox/IterateOverMbox.java@org.apache.james.mime4j.samples.mbox.IterateOverMbox.main(String)", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.CharBufferWrapper(CharBuffer)", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.CharBufferWrapper(CharBuffer)", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/CharBufferWrapper.java@org.apache.james.mime4j.mboxiterator.CharBufferWrapper.asInputStreamUTF8Encoded()", "mbox/src/test/java/org/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.iterateWithMaxMessage(int)", "mbox/src/test/java/org/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.fileToString(File)", "mbox/src/test/javorg/apache/james/mime4j/mboxiterator/MboxIteratorTest.java@org.apache.james.mime4j.mboxiterator.MboxIteratorTest.iterateWithMaxMessage(int)"], "eb818c43d11980d230b57ff922dfdb0b709b942b": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.clearFields()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.use(BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.read(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.enableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.createCopy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(MimeConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableFlatMode()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.clearFields()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyDescriptorBuilder)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.disableContentDecoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.use(BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.copy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addTextPart(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.MultipartBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.use(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.createCopy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.copy(SingleBody)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.createCopy(SingleBody)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.readFrom(Reader)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinary(int)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)"], "8e15487778b5482d479574aa3147da75aa2d746f": ["src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/java/org/apache/james/mime4j/descriptor/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.descriptor.BaseTestForBodyDescriptors.testAddField()"], "1d455fe145f4a534a6736eb5f673382dbda99278": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeTokenStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean)"], "42a492b71a753b640da701a495abbb216b19cdfb": ["src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)"], "627bfb7eccd1f2b2b3a2cdecd4b2f4d9d4d05778": ["src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.writePending()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeQuotedPrintable(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.clearPending()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.clearPending()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.QuotedPrintableEncoder.writePending()", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.encode(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testDontEscapeLF()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testDontEscapeCR()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testDontEscapeSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.check(String,String)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testEscapeSpaceAtLineEnd()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testDontWhiteSpaceBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testDontEscapeTabsBeforeLineEnd()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.testCRLFShouldResetLineCount()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)"], "d50b3c2c35360e67b3537e1433b0a1832b76abbb": ["core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isCountLineNumbers()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setDefaultContentType(String)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getDefaultContentType()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/test/java/org/apache/james/mime4j/message/MessageHeadlessParserTest.java@org.apache.james.mime4j.message.MessageHeadlessParserTest.testMultipartFormContent()"], "dafbd99750f5b30482dced4cbfca3bc4a4ffa3b4": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)"], "3ddf9fb63e7805ff998e434aaba8ba1be3199ebc": ["src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.iterator()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.iterator()", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.iterator()", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)"], "b9ddb88cad3c0c2cf13fa9b643d7e8c4b0be59f1": ["src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.parse(String,String,String)", "src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.AddressListField(String,String,String,AddressList,ParseException)", "src/main/javorg/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.parseBody(String)", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,String,String)", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.parseBody(String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.ContentTypeField(String,String,String,String,Map,ParseException)", "src/main/javorg/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.parseBody(String)", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.DateTimeField(String,String,String,Date,ParseException)", "src/main/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.parseBody(String)", "src/main/java/org/mime4j/field/DefaultFieldParser.java@org.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/mime4j/field/DelegatingFieldParser.java@org.mime4j.field.DelegatingFieldParser.getParser(String)", "src/main/java/org/mime4j/field/DelegatingFieldParser.java@org.mime4j.field.DelegatingFieldParser.parse(String,String,String)", "src/main/java/org/mime4j/field/DelegatingFieldParser.java@org.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getParser()", "src/main/java/org/mime4j/field/Field.java@org.mime4j.field.Field.Field(String,String,String)", "src/main/javorg/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.parse(String,String,String)", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.MailboxField(String,String,String,Mailbox,ParseException)", "src/main/javorg/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.parseBody(String)", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.MailboxListField(String,String,String,MailboxList,ParseException)", "src/main/javorg/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.parseBody(String)", "src/main/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.UnstructuredField(String,String,String,String)", "src/main/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/javorg/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.parseBody(String)"], "1adde0a03e003bc9513ac5aefcf287bf11888392": ["src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.runTest()", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.suite()", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "src/test/java/org/apache/james/mime4j/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.MimeStreamParserExampleMessagesTest.getFile(String)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.epilogue(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.field(String)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.raw(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.raw(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endBodyPart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endHeader()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.preamble(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(String)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startBodyPart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMessage()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMultipart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMessage()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMultipart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(char)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endHeader()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startBodyPart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startHeader()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParse()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startHeader()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(char)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(String)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMessage()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.preamble(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMessage()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.epilogue(InputStream)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endBodyPart()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.field(String)", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.endMultipart()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.escape(char)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.endBodyPart()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.raw(InputStream)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.startMessage()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.startBodyPart()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.startHeader()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.endHeader()", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.field(String)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.escape(String)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/TestHandler.java@org.apache.james.mime4j.TestHandler.endMessage()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.getFile(String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.suite()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getFile(String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTestSuite()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String,File)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTestSuite.MessageParserTestSuite()", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String,String)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.suite()"], "ad071208880b15fb922e71dc768ea4716148d33a": ["src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.escape(byte)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()"], "0362553c3d4a79786795e9688c898d083b848507": ["core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()"], "b71f20232ea668145437c433935742a1ceea344e": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setFlatMode(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setDecodeMonitor(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessage()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setMutableBodyDescriptorFactory(MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setContentDecoding(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.DefaultMessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setBodyFactory(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Body)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setMimeEntityConfig(MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Header)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setFieldParser(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.getContentType(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeHeader(Header,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeField(Field,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.encodeStream(OutputStream,String,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeMultipart(Multipart,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeBytes(ByteSequence,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeBody(Body,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeEntity(Entity,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.getBoundary(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.writeMessage(Message,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageWriter()", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageWriter()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)"], "f3a5ae285d1c60db9b7ad0ec06e477c7a51e8c70": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessageImpl()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setMessageImplFactory(MessageImplFactory)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.setFieldParser(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessage()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Message)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMessage()", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageImplFactory.java@org.apache.james.mime4j.message.DefaultMessageImplFactory.messageImpl()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startMessage()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,MessageImplFactory,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startMessage()"], "6573d1401b4a8a4ccb782d3c0bf437a33172732a": ["core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableInputStream.java@org.apache.james.mime4j.codec.QuotedPrintableInputStream.read0(byte,int,int)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpaceBeforeSoftBreakStrictMode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.readTextByOne(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.readText(InputStream)"], "80ae660827b998248945f8fac5d437df1f02f12b": ["src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()"], "017b78f5d6f9d7b9bd68da3d674774a8e0d1952a": ["core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.copy(Reader,Writer)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.copy(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.buffer(Reader)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.buffer(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingOutputStream(String)", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingEncoder(String)", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.bufferContent(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.StringBody2(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.StringBody1(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.readFrom(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.buildText()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.setByteArray(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.readFrom(Reader)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.setCharset(Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.buildBinary()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.setText(String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody1.StringBody1(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.BodyBuilder.BodyBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/BodyBuilder.java@org.apache.james.mime4j.message.StringBody2.StringBody2(byte,Charset)"], "4d1730d067c5f688fd73a4a3f1f6220523437c10": ["dom/src/main/java/org/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List)", "dom/src/main/javorg/apache/james/mime4j/dom/address/DomainList.java@org.apache.james.mime4j.dom.address.DomainList.DomainList(List,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor,BitSet)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor,BitSet)", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupSerialization()"], "f83f99896612f88a3b754c5f4d43fd9b49d68764": ["src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.toString()"], "5e5b63bf221f8c343371f2d050290c91e48dfe9d": ["src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getBodyDescriptor()", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.reset()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputBuffer,String)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.reset()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputBuffer,String)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advanceToBoundary()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/main/javorg/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/javorg/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.epilogue(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "src/test/javorg/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest._testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()"], "12e3e753b1b81e7381a577c5c4127cc31dc5adee": ["dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.dispose()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getParent()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody,String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTransferEncoding()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainField(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMessage(Message)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setText(TextBody)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String,Map)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setParent(Entity)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.obtainHeader()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart,Map)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMimeType(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String,String,long)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setHeader(Header)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getBody()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentTransferEncoding(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.isMultipart()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getFilename()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.removeBody()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setBody(Body,String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setMultipart(Multipart)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getCharset()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setContentDisposition(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getDispositionType()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getHeader()", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.setFilename(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Entity.java@org.apache.james.mime4j.dom.Entity.getContentTypeField()", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.iterator()", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.toString()", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getField(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.removeFields(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.Header(Header)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.setField(Field)", "dom/src/main/javorg/apache/james/mime4j/dom/Header.java@org.apache.james.mime4j.dom.Header.getFields()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailboxList(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSender()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailboxList(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getDate()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSender(Mailbox)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getAddressList(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.createMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getTo()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMailbox(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Address[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setReplyTo(Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setAddressList(String,Address)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setFrom(Mailbox[])", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setDate(Date,TimeZone)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setSubject(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getMessageId()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Address)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getSubject()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setMailbox(String,Mailbox)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getBcc()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setCc(Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.setBcc(Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getReplyTo()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getFrom()", "dom/src/main/javorg/apache/james/mime4j/dom/Message.java@org.apache.james.mime4j.dom.Message.getCc()", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getSubType()", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.Multipart(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setBodyParts(List)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getParent()", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.removeBodyPart(int)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getCount()", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setParent(Entity)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.setSubType(String)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.addBodyPart(Entity,int)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.replaceBodyPart(Entity,int)", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.dispose()", "dom/src/main/javorg/apache/james/mime4j/dom/Multipart.java@org.apache.james.mime4j.dom.Multipart.getBodyParts()", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/parser/AddressBuilder.java@org.apache.james.mime4j.field.address.parser.AddressBuilder.parseAddressList(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setBody(Body,String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getHeader()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setMultipart(Multipart,Map)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.obtainHeader()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getFilename()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setFilename(String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setMultipart(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setText(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setHeader(Header)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getContentTypeField()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getBody()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.removeBody()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setText(TextBody,String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getParent()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBase.java@org.apache.james.mime4j.message.EntityBase.setBody(Body,String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startHeader()", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startHeader()", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.getFields()", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.HeaderBase(Header)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.iterator()", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.toString()", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/HeaderBase.java@org.apache.james.mime4j.message.HeaderBase.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getFrom()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setAddressList(String,Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setMailboxList(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getSubject()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getSender()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setMailboxList(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setAddressList(String,Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getMailboxList(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getBcc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getCc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setSubject(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.createMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.setMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBase.java@org.apache.james.mime4j.message.MessageBase.getAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.removeBodyPart(int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.getCount()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.MultipartBase(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.getBodyParts()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.getSubType()", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.setSubType(String)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.addBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.replaceBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.setBodyParts(List)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.addBodyPart(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBase.java@org.apache.james.mime4j.message.MultipartBase.getParent()", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetDispositionType()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testGetFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionTypeFilename()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetContentDispositionType()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveFields()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testRemoveNonExistantField()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testSetNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetCc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetDate()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetFrom()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMessageId()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()"], "ef54d455bb530f29754bff978e4a36f5b3ba867d": ["core/src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "core/src/main/javorg/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/main/javorg/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionStringThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionThrowable()", "core/src/test/java/org/apache/james/mime4j/MimeExceptionTest.java@org.apache.james.mime4j.MimeExceptionTest.testMimeExceptionString()", "core/src/test/java/org/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionMimeException()", "core/src/test/java/org/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionString()"], "c26958ff271540fb7061c4c81061500eb4025494": ["core/src/main/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encode(byte)", "core/src/main/javorg/apache/james/mime4j/codec/QuotedPrintableOutputStream.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStream.encode(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableOutputStreamTest.testEncodeSpecials()"], "203e6e7969843fbf2dd53b60495460e75d7b60d4": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)"], "8048c1e3d6c1ff09929aa5604094088c07a4a750": ["src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse()", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.getValue()"], "a70e2289a64912bd7d0f1a2eb810d006b9b1681e": ["src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.getStorageProvider()"], "c027a5b13b114db953e95c870ca1e148bf144721": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidDate()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateString()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateDST()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testDateStringString()"], "a07f3a0ade43404dd814d7da4d973c9a65680661": ["core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/javorg/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.reset()", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.LenientFieldBuilder(int)", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.getRaw()", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.append(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(String,String)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(String,String)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.isUsedObsoleteSyntax()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence,int,boolean,String,String)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.indexOf(ByteSequence,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseField(ByteSequence)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseField(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testObsoleteSyntax()", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testBasics()", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testTooLong()", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testIllegalCharsInName()", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testReset()", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.line(String)", "core/src/test/java/org/apache/james/mime4j/stream/DefaultFieldBuilderTest.java@org.apache.james.mime4j.stream.DefaultFieldBuilderTest.testNoTrailingCRLF()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testObsoleteSyntax()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testBasics()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testTooLong()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testIllegalCharsInName()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testReset()", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.line(String)", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicParsing()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingObsoleteSyntax()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldTest.java@org.apache.james.mime4j.stream.RawFieldTest.testPrivateConstructor()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldTest.java@org.apache.james.mime4j.stream.RawFieldTest.testPrivateConstructor()"], "ffd83a70fe1b417ec7285311e9c884fba0dc00e8": ["core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(Field)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmpyHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "core/src/test/javorg/apache/james/mime4j/parser/TestHandler.java@org.apache.james.mime4j.parser.TestHandler.startHeader()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(RawField,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(RawField)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeField(Field,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeField(Field,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(RawField)", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.decode(Field)"], "8a3703fbfd081783dc82b974951b61e579848377": ["mbox/src/main/javorg/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.bufferDetailsToString(Buffer)"], "10e1bc075dd556a298f19f85454484b31c60197a": ["dom/src/main/javorg/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.toString()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Address.java@org.apache.james.mime4j.dom.address.Address.getDisplayString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.doAddMailboxesTo(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.toString()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.Group(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.Group(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.doAddMailboxesTo(List)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Group.java@org.apache.james.mime4j.dom.address.Group.getDisplayString(boolean)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.Mailbox(String,String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.toString()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getDisplayString(boolean)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getAddress()", "dom/src/main/javorg/apache/james/mime4j/dom/address/MailboxList.java@org.apache.james.mime4j.dom.address.MailboxList.print()", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeAddresses(Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.format(Mailbox,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.encode(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.format(StringBuilder,Group,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.encode(StringBuilder,Group)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.format(Group,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.encode(StringBuilder,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.format(StringBuilder,Mailbox,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.encode(Group)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.format(StringBuilder,Address,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/formatter/AddressFormatter.java@org.apache.james.mime4j.field.address.formatter.AddressFormatter.encode(StringBuilder,Address)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "dom/src/main/java/org/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "dom/src/main/javorg/apache/james/mime4j/field/address/parser/Builder.java@org.apache.james.mime4j.field.address.parser.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()"], "4efef4a3804cf92051e8b3acb0ca9ab35cbaa592": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.read()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.read()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.read()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advance()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.rest()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advance()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.checkState(int)", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.tearDown()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "src/test/java/org/apache/james/mime4j/MultipartStreamTest.java@org.apache.james.mime4j.MultipartStreamTest.setUp()"], "13198249b101f8d754140c03353eb96a60c316ba": ["src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testAddField()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testGetParameters()", "src/test/java/org/apache/james/mime4j/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.DefaultBodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.newBodyDescriptor()"], "a3fc3643889704006d45e6d3b533f69cb6c38381": ["dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeHeader(Header,OutputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeField(Field,OutputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.writeHeader(Header,OutputStream)"], "764353092ec375ec27a186f1f70c5098d3415145": ["src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.getReader()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.getReader()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.StringPart(String,String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.writeTo(OutputStream)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.StringPart.StringPart(String,String)", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.writeTo(OutputStream)"], "5f6052d17b540d9943c721b777b0ee1dc9fc70fd": ["core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testNonWhiteSpaceBetweenEncodedWordsIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testInvalidEncodedWordsAreIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEmptyEncodedTextIsIgnored()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testTextBeforeAndAfterEncodedWordIsRetained()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testWhiteSpaceBetweenEncodedWordsGetsRemoved()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeQ()"], "c4d83ba9bc1633e7520e7e6615283ae8758877c0": ["dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startMessage()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.endMessage()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.preamble(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startHeader()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.loadStream(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.endBodyPart()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.epilogue(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.body(BodyDescriptor,InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.raw(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.endMultipart()", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.expect(Class)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.startMultipart(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)"], "58f474acfe8aa0e8cafdcba74b6bb5fa665f5092": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMailboxList(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMailbox(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getAddressList(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setAddressList(String,Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setMailboxList(String,Mailbox[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetFrom()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetBcc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetSubject()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetReplyTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetDate()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetCc()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetSender()"], "58ed6c97db2c5c270efaadc2083442de50ead797": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isToken(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeValue(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.quote(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.quote(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isSpecial(char)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParameters()", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringParametersWithSpaces()"], "993cfe554ed6c18eb88c38c62b82a97644eff6ce": ["src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.completeEncoding()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.writePending()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.flush()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.initEncoding(OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.close()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.lineBreak()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.escape(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.plain(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.softBreak()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.clearPending()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.flush()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.clearPending()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.QuotedPrintableEncoder(int,boolean)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.writePending()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.flushOutput()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.lineBreak()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.flushOutput()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.plain(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.completeEncoding()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.initEncoding(OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeChunk(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.write(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.softBreak()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(int)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.escape(byte)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encode(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encodeChunk(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.completeEncoding()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.QuotedPrintableEncoder(int,boolean)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.clearPending()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.lineBreak()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.writePending()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.plain(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableEncoder.java@org.apache.james.mime4j.decoder.QuotedPrintableEncoder.initEncoding(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.read()", "src/main/javorg/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.flush()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.QuotedPrintableOutputStream(OutputStream,boolean)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testDecodePrematureClose()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.testEncode()", "src/test/java/org/apache/james/mime4j/decoder/Base64OutputStreamTest.java@org.apache.james.mime4j.decoder.Base64OutputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStreamTest.testEncodeUnderlyingStreamStaysOpen()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStreamTest.testEncode()"], "5c79f1fc1e03052c8a8837a6dbf10f47bc224423": ["core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(byte,Usage)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,EntityState)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()"], "4d9c2101d78fa2008281983b12b8a341b7c31c73": ["src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.write(byte)", "src/test/java/org/apache/james/mime4j/util/CodecUtilTest.java@org.apache.james.mime4j.util.CodecUtilTest.testEncodeQuotedPrintableLargeInput()"], "e56e143ff1457d4ae346eac4d44b84842f7ac8ce": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody2.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody1.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody2.StringBody2(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody1.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody2.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody1.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.StringBody1(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BinaryBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody2.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.StringBody2(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.StringBody1.StringBody1(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildText()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.withFactory(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.SingleBodyBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildBinary()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.StringBody2(byte,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.BinaryBody2(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.copy()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getReader()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getReader()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.copy()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getReader()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.copy()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildBinary()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.StringBody2(byte,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.copy()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildText()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.StringBody1(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.BinaryBody1(byte)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.BinaryBody2(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.copy()", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.BinaryBody1(byte)", "dom/src/main/javorg/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.StringBody1(String,Charset)"], "e822eb4c015af6fab2fe0990fc0d843747551aba": ["core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxHeaderLen()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxHeaderLen(int)", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()"], "33e2a81b72a0a4cd87e3b228522ab74a42956dd6": ["core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.setUp()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.setUp()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.setUp()"], "5ac9609a591e0167ac1ad6db27720c1b9f4fde00": ["src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toString()"], "7ab6437dfeb7dfa475beacec0f287d397d2c97c9": ["dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseAddress(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseAddress(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseGroup(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseAddressList(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseMailbox(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseGroup(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressBuilder.java@org.apache.james.mime4j.field.address.AddressBuilder.parseAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.encode(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.encode(StringBuilder,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.encode(StringBuilder,Group)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.encode(Group)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.encode(StringBuilder,Address)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.format(Group,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.format(Mailbox,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.format(StringBuilder,Group,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.format(StringBuilder,Mailbox,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/AddressFormatter.java@org.apache.james.mime4j.field.address.AddressFormatter.format(StringBuilder,Address,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuilder,Token)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()"], "a1b701c0aa7c18671c65584dcce7ea050caee9a0": ["dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.testMime4j219()"], "00b5e9353376f4c8ba1c9366ce860d6446d1bb89": ["core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()"], "4dcf17339e499e4d89aa4fcd62e1088a6947c4cd": ["core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()"], "d6eed742fc987e6150b63263f9351223c4b16afc": ["src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/QuotedPrintableOutputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableOutputStream.close()", "src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.addMailboxesTo(List)", "src/main/javorg/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.addMailboxesTo(List)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.size()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.main(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.size()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.main(String)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuilder,Token)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuilder,Token)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.size()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.size()", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(List)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getMailboxes()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getName()", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getMailboxes()", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(List)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getName()", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.toString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getLocalPart()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getRoute()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDomain()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.doAddMailboxesTo(List)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getLocalPart()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.doAddMailboxesTo(List)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDomain()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.toString()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getRoute()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.size()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.print()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.print()", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.size()", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getName()", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/main/javorg/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getName()", "src/main/javorg/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/main/javorg/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/main/javorg/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()"], "466029f55de06ee116f9fe00720aafdcab4dd9eb": ["dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMultipart(String)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newMultipart(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newHeader(Header)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.newHeader()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)"], "fdb3756b55c8d8e865f17469f5156dcaee10450e": ["core/src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unscrambleHeaderValue(String)"], "a9e0e511ace1c0f9df155e592ed0a7c489b8140f": ["src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.parseContentType(String)", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testParameters()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "src/test/java/org/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "src/test/javorg/apache/james/mime4j/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.BaseTestForBodyDescriptors.testParameters()"], "eaa51e9a52f5411fe910dfb0ff4ff57cb864def1": ["mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.next()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MessageIterator.next()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.initMboxIterator()", "mbox/src/main/java/org/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.MboxIterator(File,Charset,String,int,int)", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.next()", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MessageIterator.next()", "mbox/src/main/javorg/apache/james/mime4j/mboxiterator/MboxIterator.java@org.apache.james.mime4j.mboxiterator.MboxIterator.initMboxIterator()"], "1cdbde4ac85039ea995779d79c402acb6d62170d": ["src/main/java/org/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.read()", "src/main/java/org/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.close()", "src/main/java/org/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.BufferingInputStream(InputBuffer)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.toString()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.charAt(int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.read()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.pos()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.read(byte)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.skip(int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.hasBufferedData()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.closeStream()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.InputBuffer(InputStream,int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.indexOf(byte)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.fillBuffer()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.length()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputBuffer,String)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.isLastPart()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.calculateBoundaryLen()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.endOfStream()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasData()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.eof()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasMoreParts()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.matchBoundary()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.parentEOF()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.close()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputStream,String)", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.consume()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.read()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.read()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.read()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.isEnded()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextMimePartCursor()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor,InputStream)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeBase64()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeQuotedPrintable()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.root()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.moreMimeParts()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.boundary(String)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.rest()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(InputStream)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextSection()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.boundary(String)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advanceToBoundary()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(InputStream)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.isEnded()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextMimePartCursor()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.moreMimeParts()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextSection()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeQuotedPrintable()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor,InputStream)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(RootInputStream,InputStream)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.rest()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeBase64()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testPatternMatching1()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testPatternMatching2()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testPatternMatching3()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReading()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBigEnoughPushbackBuffer()", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()"], "7b6919cdbb4dd68332b51da6901f79d932df526c": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMultipart(Multipart)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setMessage(Message)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setText(TextBody,String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.obtainHeader()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body,String)", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.getMimeCharset()", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.StringTextBody(String,Charset)", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.getMimeCharset()"], "3c6076331031eb5802f3752a72a447554cf16e66": ["core/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "core/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)"], "918d08d09fb0446cb0b8bd36f0f7abe39a440341": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()"], "bd41063d02bc01469ffb3d2201de36dec4b2c0b6": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getFilename()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getBody()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setHeader(Header)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getContentTypeField()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMultipart(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMultipart(Multipart,Map)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getHeader()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.isMultipart()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.obtainHeader()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getParent()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setBody(Body,String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.removeBody()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setText(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.isMimeType(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setBody(Body,String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setFilename(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setText(TextBody,String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.toString()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getFields()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.AbstractHeader(Header)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.iterator()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setSubject(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Address[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getCc()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setMailboxList(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getDate()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getBcc()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.createMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getFrom()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setAddressList(String,Address)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getSender()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getTo()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getSubject()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMessage.java@org.apache.james.mime4j.message.AbstractMessage.getMailboxList(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.getBodyParts()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.replaceBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.addBodyPart(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.setSubType(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.getSubType()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.setBodyParts(List)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.getParent()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.getCount()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.setParent(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.addBodyPart(Entity,int)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.dispose()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.AbstractMultipart(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractMultipart.java@org.apache.james.mime4j.message.AbstractMultipart.removeBodyPart(int)"], "29eba99b0a6388d1841e0ca819fda6d90bc0fcfc": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.initChars(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isToken(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.quote(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeContentTypeParameterValue(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.quote(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.encodeValue(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isToken(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeContentTypeParameterValue()", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()"], "d7f54e53af40911dd8206e35fa4c3ef7944fdf68": ["examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.storeImage(StorageProvider,BufferedImage,String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(BodyFactory,BufferedImage)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(BodyFactory,String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.renderSampleImage()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()"], "9ff10987c9477dcfb52c6571d9ddcdcb297f69c4": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.obtainField(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.createMessageId(String)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetSubject()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testCreateMessageId()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testSetDate()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()"], "728a2eeb9032630ff9bf66f0b2bff8df172ba174": ["src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWord(String,int,int)", "src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(String)", "src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeEncodedWords()", "src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeEncodedWords()"], "5be6e1b66d19da4f8477236ccd842a4a9f34c7ec": ["src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getCanonicalizedAddress()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.equals(Object)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.hashCode()"], "daa74dbc67924495451053c703248fa756cbcfe0": ["src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.addReference()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.incrementCounter()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.delete()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.decrementCounter()", "src/main/javorg/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.addReference()", "src/main/javorg/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.delete()"], "de654aa758833d3fab1b9187d7c4882e97f36c5d": ["src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeBase64(InputStream,OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.encodeBase64(InputStream,OutputStream)"], "ac531537c585fb73dc513288740f70f027d97a6b": ["src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.iterator()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)"], "0a043d756a3533941296afae6ec820778681fb86": ["core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(String)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(String)", "core/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "core/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getDecodeMonitor()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getHeaderParams(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.newChild()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(String)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.getHeaderParams(String)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(String)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.newChild()", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.newBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.newBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/java/org/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "core/src/test/javorg/apache/james/mime4j/parser/DefaultBodyDescriptorTest.java@org.apache.james.mime4j.parser.DefaultBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)"], "0e4b7e9b25d988c9a1c5bc9838f87e3aca9058a1": ["src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueMessageId(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.createUniqueBoundary()", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.nextCounterValue()"], "1384bb96aee71e4f1561b301b21503edcebb73ba": ["core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseToken(ByteSequence,ParserCursor,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyContent(ByteSequence,ParserCursor,int,StringBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.skipComment(ByteSequence,ParserCursor)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyContent(ByteSequence,ParserCursor,int,StringBuilder)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingQuotedValuesWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipCommentsWithQuotedPairs()"], "bb6607a6cb9a0f2d1c3fd1298e0410dd76f6afb6": ["src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/javorg/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/javorg/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()"], "280a2c9a1f688f8bd7eefc0b794d7e72a9aae3a2": ["core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.parseContentType(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyQuotedContent(ByteSequence,ParserCursor,StringBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyQuotedContent(ByteSequence,ParserCursor,StringBuilder)"], "253b715c8da48714235c01e9b4f2b15154f34109": ["core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.tearDown()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testCorrectEndOfHeaders()"], "ead7a4634659a05fd5b9ed7ac48c41b8ebe3f90d": ["core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.markSupported()", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.reset()", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.mark(int)", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.singleByteReadTest(String)", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testLargeSingleByteRead()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.bufferedReadTest(String)", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testMarkReset()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testSingleByteRead()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testBufferedRead()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testReadZero()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testSkip()", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testLargeBufferedRead()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()"], "bff3bc5b4f7e7bf4ba6a00f04349839f46f63d19": ["core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayContainDollarSign()"], "232c240c334995c6cd8a992695bc0c60ea56ae28": ["src/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.field(String)", "src/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.endHeader()", "src/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.startHeader()", "src/java/org/mime4j/SimpleContentHandler.java@org.mime4j.SimpleContentHandler.body(BodyDescriptor,InputStream)"], "4eb7fbf21ef35c49044baf7ce76a6de34a06a509": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.copy()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.StringBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.reset()", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.StringInputStream(CharSequence,Charset,int)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.StringInputStream(CharSequence,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.skip(long)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.available()", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.read()", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.mark(int)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.read(byte,int,int)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.markSupported()", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.read(byte)", "dom/src/main/java/org/apache/james/mime4j/message/StringInputStream.java@org.apache.james.mime4j.message.StringInputStream.fillBuffer()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testLargeBufferedRead()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testLargeSingleByteRead()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.bufferedReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testBufferedRead()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSingleByteRead()"], "9cb55dcefec96e191f8aaedfafcc39aa56ce61dd": ["core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.getCause()", "core/src/main/java/org/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/main/javorg/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(String)", "core/src/main/javorg/apache/james/mime4j/MimeIOException.java@org.apache.james.mime4j.MimeIOException.MimeIOException(MimeException)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "core/src/test/javorg/apache/james/mime4j/MimeIOExceptionTest.java@org.apache.james.mime4j.MimeIOExceptionTest.testMimeIOExceptionString()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()"], "25af6e2b18d36f758c03b1d340276ea1b6afd851": ["src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String,Throwable)", "src/main/java/org/apache/james/mime4j/MimeException.java@org.apache.james.mime4j.MimeException.MimeException(String)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseBodyPart(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseHeader(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseMessage(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)"], "90a23ed6a809845f59b73bdb69734dee01021aed": ["core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.byteAt(int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.charAt(int)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.skipBoundary()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.skipBoundary()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()"], "a845d27a5ad8d3c9260f1e28ee005c1706ec6fac": ["src/main/java/org/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.initialize()", "src/main/javorg/apache/james/mime4j/message/storage/DefaultStorageProvider.java@org.apache.james.mime4j.message.storage.DefaultStorageProvider.initialize()"], "5f16593c7c3bc7e43a07fadacd059508b22b6c91": ["core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.lookup(String)"], "28f70e83eee11063653ce86d5daa05662bb76922": ["dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.createMailbox(String,DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.LenientAddressBuilder(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxEncoded()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxEncoded()"], "11cca9f27ee014f62cf25a08537ed1fe576cfc75": ["core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.testCharset(String)", "core/src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)"], "c1343990f97d1052b3ec1978977af75af5fee3b9": ["src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isBase64Encoded()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getBoundary()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.toString()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getHeaderParams(String)", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getTransferEncoding()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMultipart()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.addField(String,String)", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMimeType(String)", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.BodyDescriptor(BodyDescriptor)", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getParameters()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isMessage()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.BodyDescriptor()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getCharset()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.isQuotedPrintableEncoded()", "src/java/org/mime4j/BodyDescriptor.java@org.mime4j.BodyDescriptor.getMimeType()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read(byte,int,int)", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read(byte)", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.reset()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.checkIfClosed()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.getUnderlyingStream()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.available()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.skip(long)", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.markSupported()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.close()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.read()", "src/java/org/mime4j/CloseShieldInputStream.java@org.mime4j.CloseShieldInputStream.mark(int)", "src/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.close()", "src/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.read()", "src/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/java/org/mime4j/EOLConvertingInputStream.java@org.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.hasMoreParts()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.read()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.close()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.matchBoundary()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.parentEOF()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.consume()", "src/java/org/mime4j/MimeBoundaryInputStream.java@org.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputStream,String)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.stop()", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseHeader(InputStream)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseEntity(InputStream)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.setRaw(boolean)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseMessage(InputStream)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parse(InputStream)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.isRaw()", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.setContentHandler(ContentHandler)", "src/java/org/mime4j/MimeStreamParser.java@org.mime4j.MimeStreamParser.parseBodyPart(InputStream)", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.getLineNumber()", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read(byte,int,int)", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.RootInputStream(InputStream)", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read()", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.truncate()", "src/java/org/mime4j/RootInputStream.java@org.mime4j.RootInputStream.read(byte)", "src/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.read()", "src/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.decodeAndEnqueue(byte,int)", "src/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.fillBuffer()", "src/java/org/mime4j/decoder/Base64InputStream.java@org.mime4j.decoder.Base64InputStream.close()", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.ByteQueue()", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.iterator()", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.enqueue(byte)", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.count()", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.ByteQueue(int)", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.dequeue()", "src/java/org/mime4j/decoder/ByteQueue.java@org.mime4j.decoder.ByteQueue.clear()", "src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeB(String,String)", "src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeBase64(String)", "src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(String)", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.close()", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.read()", "src/java/org/mime4j/decoder/QuotedPrintableInputStream.java@org.mime4j.decoder.QuotedPrintableInputStream.populatePushbackQueue()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.hasNext()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.remove()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.next()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.get()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.size()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.add(byte)", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.decrement(int)", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.isEmpty()", "src/java/org/mime4j/decoder/UnboundedFifoByteBuffer.java@org.mime4j.decoder.UnboundedFifoByteBuffer.increment(int)", "src/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.getAddressList()", "src/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.parseBody(String)", "src/java/org/mime4j/field/AddressListField.java@org.mime4j.field.AddressListField.getParseException()", "src/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.parseBody(String)", "src/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.getEncoding()", "src/java/org/mime4j/field/ContentTransferEncodingField.java@org.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.isMultipart()", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getBoundary()", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.isMimeType(String)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParseException()", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.parseBody(String)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getCharset()", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getMimeType()", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParameter(String)", "src/java/org/mime4j/field/ContentTypeField.java@org.mime4j.field.ContentTypeField.getParameters()", "src/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.getDate()", "src/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.getParseException()", "src/java/org/mime4j/field/DateTimeField.java@org.mime4j.field.DateTimeField.parseBody(String)", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.toString()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isFrom()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isSubject()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isTo()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getName()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getBody()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.isContentType()", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)", "src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.getRaw()", "src/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.parseBody(String)", "src/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.getMailbox()", "src/java/org/mime4j/field/MailboxField.java@org.mime4j.field.MailboxField.getParseException()", "src/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.getMailboxList()", "src/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.getParseException()", "src/java/org/mime4j/field/MailboxListField.java@org.mime4j.field.MailboxListField.parseBody(String)", "src/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.getValue()", "src/java/org/mime4j/field/UnstructuredField.java@org.mime4j.field.UnstructuredField.parseBody(String)", "src/java/org/mime4j/field/address/Address.java@org.mime4j.field.address.Address.addMailboxesTo(ArrayList)", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.size()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.next()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.flatten()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.hasNext()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.iterator()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.parse(String)", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.print()", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.AddressList(ArrayList,boolean)", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.main(String)", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.get(int)", "src/java/org/mime4j/field/address/AddressList.java@org.mime4j.field.address.AddressList.remove()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.hasNext()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.remove()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.addSpecials(StringBuffer,Token)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.getInstance()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.hasNext()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.nextNode()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.next()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.next()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.remove()", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/java/org/mime4j/field/address/Builder.java@org.mime4j.field.address.ChildNodeIterator.nextNode()", "src/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.size()", "src/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.get(int)", "src/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.DomainList(ArrayList,boolean)", "src/java/org/mime4j/field/address/DomainList.java@org.mime4j.field.address.DomainList.toRouteString()", "src/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.doAddMailboxesTo(ArrayList)", "src/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.toString()", "src/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.getName()", "src/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.getMailboxes()", "src/java/org/mime4j/field/address/Group.java@org.mime4j.field.address.Group.Group(String,MailboxList)", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.doAddMailboxesTo(ArrayList)", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.toString()", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getRoute()", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getDomain()", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getAddressString()", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.getLocalPart()", "src/java/org/mime4j/field/address/Mailbox.java@org.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.print()", "src/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.get(int)", "src/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/java/org/mime4j/field/address/MailboxList.java@org.mime4j.field.address.MailboxList.size()", "src/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.getName()", "src/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/java/org/mime4j/field/address/NamedMailbox.java@org.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/java/org/mime4j/field/address/parser/ASTaddr_spec.java@org.mime4j.field.address.parser.ASTaddr_spec.ASTaddr_spec(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTaddr_spec.java@org.mime4j.field.address.parser.ASTaddr_spec.ASTaddr_spec(int)", "src/java/org/mime4j/field/address/parser/ASTaddr_spec.java@org.mime4j.field.address.parser.ASTaddr_spec.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTaddress.java@org.mime4j.field.address.parser.ASTaddress.ASTaddress(int)", "src/java/org/mime4j/field/address/parser/ASTaddress.java@org.mime4j.field.address.parser.ASTaddress.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTaddress.java@org.mime4j.field.address.parser.ASTaddress.ASTaddress(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTaddress_list.java@org.mime4j.field.address.parser.ASTaddress_list.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTaddress_list.java@org.mime4j.field.address.parser.ASTaddress_list.ASTaddress_list(int)", "src/java/org/mime4j/field/address/parser/ASTaddress_list.java@org.mime4j.field.address.parser.ASTaddress_list.ASTaddress_list(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTangle_addr.java@org.mime4j.field.address.parser.ASTangle_addr.ASTangle_addr(int)", "src/java/org/mime4j/field/address/parser/ASTangle_addr.java@org.mime4j.field.address.parser.ASTangle_addr.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTangle_addr.java@org.mime4j.field.address.parser.ASTangle_addr.ASTangle_addr(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTdomain.java@org.mime4j.field.address.parser.ASTdomain.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTdomain.java@org.mime4j.field.address.parser.ASTdomain.ASTdomain(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTdomain.java@org.mime4j.field.address.parser.ASTdomain.ASTdomain(int)", "src/java/org/mime4j/field/address/parser/ASTgroup_body.java@org.mime4j.field.address.parser.ASTgroup_body.ASTgroup_body(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTgroup_body.java@org.mime4j.field.address.parser.ASTgroup_body.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTgroup_body.java@org.mime4j.field.address.parser.ASTgroup_body.ASTgroup_body(int)", "src/java/org/mime4j/field/address/parser/ASTlocal_part.java@org.mime4j.field.address.parser.ASTlocal_part.ASTlocal_part(int)", "src/java/org/mime4j/field/address/parser/ASTlocal_part.java@org.mime4j.field.address.parser.ASTlocal_part.ASTlocal_part(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTlocal_part.java@org.mime4j.field.address.parser.ASTlocal_part.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTmailbox.java@org.mime4j.field.address.parser.ASTmailbox.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTmailbox.java@org.mime4j.field.address.parser.ASTmailbox.ASTmailbox(int)", "src/java/org/mime4j/field/address/parser/ASTmailbox.java@org.mime4j.field.address.parser.ASTmailbox.ASTmailbox(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTmailbox_list.java@org.mime4j.field.address.parser.ASTmailbox_list.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTmailbox_list.java@org.mime4j.field.address.parser.ASTmailbox_list.ASTmailbox_list(int)", "src/java/org/mime4j/field/address/parser/ASTmailbox_list.java@org.mime4j.field.address.parser.ASTmailbox_list.ASTmailbox_list(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTname_addr.java@org.mime4j.field.address.parser.ASTname_addr.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTname_addr.java@org.mime4j.field.address.parser.ASTname_addr.ASTname_addr(int)", "src/java/org/mime4j/field/address/parser/ASTname_addr.java@org.mime4j.field.address.parser.ASTname_addr.ASTname_addr(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTphrase.java@org.mime4j.field.address.parser.ASTphrase.ASTphrase(int)", "src/java/org/mime4j/field/address/parser/ASTphrase.java@org.mime4j.field.address.parser.ASTphrase.ASTphrase(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTphrase.java@org.mime4j.field.address.parser.ASTphrase.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTroute.java@org.mime4j.field.address.parser.ASTroute.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/ASTroute.java@org.mime4j.field.address.parser.ASTroute.ASTroute(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/ASTroute.java@org.mime4j.field.address.parser.ASTroute.ASTroute(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_10()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.parse()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_la1_1()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_rescan_token()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.name_addr()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.AddressListParser(java)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.route()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_2_2(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jjtreeCloseNodeScope(Node)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_ntk()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.getNextToken()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.angle_addr()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.parseAll()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_13()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.AddressListParser(AddressListParserTokenManager)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_add_error_token(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_scan_token(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_la1_0()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3_2()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jjtreeOpenNodeScope(Node)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.getToken(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_save(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.log(String)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_consume_token(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.addr_spec()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3_1()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.mailbox()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.ReInit(AddressListParserTokenManager)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.parseLine()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.address()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_8()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.domain()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.phrase()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_11()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.address_list()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_9()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.ReInit(java)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.generateParseException()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.main(String)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.group_body()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_2_1(int)", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.local_part()", "src/java/org/mime4j/field/address/parser/AddressListParser.java@org.mime4j.field.address.parser.AddressListParser.jj_3R_12()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveNfa_0(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfaWithStates_2(int,int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjCheckNAdd(int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjFillToken()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveStringLiteralDfa0_1()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopStringLiteralDfa_1(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.setDebugStream(java)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveNfa_4(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveNfa_1(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.AddressListParserTokenManager(SimpleCharStream)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveStringLiteralDfa0_2()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjCheckNAddTwoStates(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfaWithStates_1(int,int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveStringLiteralDfa0_4()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopAtPos(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopStringLiteralDfa_2(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjCheckNAddStates(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveStringLiteralDfa0_3()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfaWithStates_4(int,int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopStringLiteralDfa_3(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfa_2(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjCheckNAddStates(int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.TokenLexicalActions(Token)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfa_0(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfaWithStates_3(int,int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.getNextToken()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.AddressListParserTokenManager(SimpleCharStream,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.ReInitRounds()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfa_1(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfa_4(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.ReInit(SimpleCharStream,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveStringLiteralDfa0_0()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveNfa_2(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjAddStates(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.SwitchTo(int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfaWithStates_0(int,int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjMoveNfa_3(int,int)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopStringLiteralDfa_4(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.MoreLexicalActions()", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.ReInit(SimpleCharStream)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStartNfa_3(int,long)", "src/java/org/mime4j/field/address/parser/AddressListParserTokenManager.java@org.mime4j.field.address.parser.AddressListParserTokenManager.jjStopStringLiteralDfa_0(int,long)", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.closeNodeScope(Node,boolean)", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.peekNode()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.nodeCreated()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.JJTAddressListParserState()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.nodeArity()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.popNode()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.openNodeScope(Node)", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.pushNode(Node)", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.reset()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.rootNode()", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.clearNodeScope(Node)", "src/java/org/mime4j/field/address/parser/JJTAddressListParserState.java@org.mime4j.field.address.parser.JJTAddressListParserState.closeNodeScope(Node,int)", "src/java/org/mime4j/field/address/parser/ParseException.java@org.mime4j.field.address.parser.ParseException.ParseException()", "src/java/org/mime4j/field/address/parser/ParseException.java@org.mime4j.field.address.parser.ParseException.ParseException(String)", "src/java/org/mime4j/field/address/parser/ParseException.java@org.mime4j.field.address.parser.ParseException.add_escapes(String)", "src/java/org/mime4j/field/address/parser/ParseException.java@org.mime4j.field.address.parser.ParseException.getMessage()", "src/java/org/mime4j/field/address/parser/ParseException.java@org.mime4j.field.address.parser.ParseException.ParseException(Token,int,String)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.ReInit(java,int,int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.Done()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.adjustBeginLineColumn(int,int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.readChar()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.BeginToken()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getColumn()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getEndColumn()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.UpdateLineColumn(char)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.backup(int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.ReInit(java,int,int,int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.SimpleCharStream(java,int,int,int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getLine()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.GetSuffix(int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.GetImage()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.FillBuff()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getBeginColumn()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.ExpandBuff(boolean)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getBeginLine()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.getEndLine()", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.ReInit(java)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.SimpleCharStream(java,int,int)", "src/java/org/mime4j/field/address/parser/SimpleCharStream.java@org.mime4j.field.address.parser.SimpleCharStream.SimpleCharStream(java)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.dump(String)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.jjtAddChild(Node,int)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.childrenAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.jjtGetChild(int)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.SimpleNode(int)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.jjtSetParent(Node)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.SimpleNode(AddressListParser,int)", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.jjtGetNumChildren()", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.toString()", "src/java/org/mime4j/field/address/parser/SimpleNode.java@org.mime4j.field.address.parser.SimpleNode.jjtAccept(AddressListParserVisitor,Object)", "src/java/org/mime4j/field/address/parser/Token.java@org.mime4j.field.address.parser.Token.toString()", "src/java/org/mime4j/field/address/parser/Token.java@org.mime4j.field.address.parser.Token.newToken(int)", "src/java/org/mime4j/field/address/parser/TokenMgrError.java@org.mime4j.field.address.parser.TokenMgrError.LexicalError(boolean,int,int,int,String,char)", "src/java/org/mime4j/field/address/parser/TokenMgrError.java@org.mime4j.field.address.parser.TokenMgrError.TokenMgrError(String,int)", "src/java/org/mime4j/field/address/parser/TokenMgrError.java@org.mime4j.field.address.parser.TokenMgrError.getMessage()", "src/java/org/mime4j/field/address/parser/TokenMgrError.java@org.mime4j.field.address.parser.TokenMgrError.TokenMgrError(boolean,int,int,int,String,char,int)", "src/java/org/mime4j/field/address/parser/TokenMgrError.java@org.mime4j.field.address.parser.TokenMgrError.addEscapes(String)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.parseLine()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.value()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.parse()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.jj_consume_token(int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.getParamNames()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.ContentTypeParser(ContentTypeParserTokenManager)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.generateParseException()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.main(String)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.ReInit(ContentTypeParserTokenManager)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.jj_ntk()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.getNextToken()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.ContentTypeParser(java)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.getSubType()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.getToken(int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.parseAll()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.parameter()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.getType()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.jj_la1_0()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParser.java@org.mime4j.field.contenttype.parser.ContentTypeParser.ReInit(java)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjCheckNAdd(int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStopStringLiteralDfa_3(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjAddStates(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveNfa_2(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStopStringLiteralDfa_0(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveStringLiteralDfa0_2()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveStringLiteralDfa0_0()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfa_2(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStopStringLiteralDfa_2(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.TokenLexicalActions(Token)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveStringLiteralDfa0_3()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveStringLiteralDfa0_1()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStopStringLiteralDfa_1(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.ReInitRounds()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.ContentTypeParserTokenManager(SimpleCharStream,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfaWithStates_1(int,int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfaWithStates_0(int,int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjCheckNAddTwoStates(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStopAtPos(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfa_3(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveNfa_0(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveNfa_3(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfa_0(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjFillToken()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.ContentTypeParserTokenManager(SimpleCharStream)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjCheckNAddStates(int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.ReInit(SimpleCharStream)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.setDebugStream(java)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfa_1(int,long)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfaWithStates_3(int,int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.getNextToken()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjStartNfaWithStates_2(int,int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjCheckNAddStates(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.jjMoveNfa_1(int,int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.MoreLexicalActions()", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.SwitchTo(int)", "src/java/org/mime4j/field/contenttype/parser/ContentTypeParserTokenManager.java@org.mime4j.field.contenttype.parser.ContentTypeParserTokenManager.ReInit(SimpleCharStream,int)", "src/java/org/mime4j/field/contenttype/parser/ParseException.java@org.mime4j.field.contenttype.parser.ParseException.ParseException()", "src/java/org/mime4j/field/contenttype/parser/ParseException.java@org.mime4j.field.contenttype.parser.ParseException.ParseException(String)", "src/java/org/mime4j/field/contenttype/parser/ParseException.java@org.mime4j.field.contenttype.parser.ParseException.add_escapes(String)", "src/java/org/mime4j/field/contenttype/parser/ParseException.java@org.mime4j.field.contenttype.parser.ParseException.getMessage()", "src/java/org/mime4j/field/contenttype/parser/ParseException.java@org.mime4j.field.contenttype.parser.ParseException.ParseException(Token,int,String)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.ReInit(java,int,int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getBeginColumn()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getColumn()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.Done()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getEndLine()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.BeginToken()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getBeginLine()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.GetImage()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getEndColumn()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.ReInit(java,int,int,int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.UpdateLineColumn(char)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.backup(int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.SimpleCharStream(java,int,int,int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.readChar()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.SimpleCharStream(java,int,int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.GetSuffix(int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.adjustBeginLineColumn(int,int)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.getLine()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.ExpandBuff(boolean)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.SimpleCharStream(java)", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.FillBuff()", "src/java/org/mime4j/field/contenttype/parser/SimpleCharStream.java@org.mime4j.field.contenttype.parser.SimpleCharStream.ReInit(java)", "src/java/org/mime4j/field/contenttype/parser/Token.java@org.mime4j.field.contenttype.parser.Token.toString()", "src/java/org/mime4j/field/contenttype/parser/Token.java@org.mime4j.field.contenttype.parser.Token.newToken(int)", "src/java/org/mime4j/field/contenttype/parser/TokenMgrError.java@org.mime4j.field.contenttype.parser.TokenMgrError.TokenMgrError(boolean,int,int,int,String,char,int)", "src/java/org/mime4j/field/contenttype/parser/TokenMgrError.java@org.mime4j.field.contenttype.parser.TokenMgrError.getMessage()", "src/java/org/mime4j/field/contenttype/parser/TokenMgrError.java@org.mime4j.field.contenttype.parser.TokenMgrError.LexicalError(boolean,int,int,int,String,char)", "src/java/org/mime4j/field/contenttype/parser/TokenMgrError.java@org.mime4j.field.contenttype.parser.TokenMgrError.addEscapes(String)", "src/java/org/mime4j/field/contenttype/parser/TokenMgrError.java@org.mime4j.field.contenttype.parser.TokenMgrError.TokenMgrError(String,int)", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getMonth()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getHour()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getYear()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.parse(String)", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.print()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getMinute()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getSecond()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getTimeZone()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getDay()", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.convertToYear(String)", "src/java/org/mime4j/field/datetime/DateTime.java@org.mime4j.field.datetime.DateTime.getDate()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Time.getSecond()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.jj_consume_token(int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.date()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.jj_la1_1()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.Time(int,int,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getSecond()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.jj_la1_0()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getHour()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.parseAll()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.month()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Date.getMonth()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Time.getHour()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.year()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.DateTimeParser(java)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getZone()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Date.getDay()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.day_of_week()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getMilitaryZoneOffset(char)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.parseLine()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.minute()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.date_time()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.ReInit(java)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.main(String)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getToken(int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.obs_zone()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Time.getZone()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getNextToken()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.time()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.DateTimeParser(DateTimeParserTokenManager)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.parseDigits(Token)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.second()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.ReInit(DateTimeParserTokenManager)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getMinute()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getMonth()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.Date(String,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Time.getMinute()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Date.Date(String,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.day()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Date.getYear()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.generateParseException()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.zone()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.hour()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getDay()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.Time.Time(int,int,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.jj_ntk()", "src/java/org/mime4j/field/datetime/parser/DateTimeParser.java@org.mime4j.field.datetime.parser.DateTimeParser.getYear()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveNfa_1(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStopStringLiteralDfa_0(int,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.DateTimeParserTokenManager(SimpleCharStream)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.getNextToken()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.ReInit(SimpleCharStream)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfa_0(int,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfaWithStates_1(int,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.ReInitRounds()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.DateTimeParserTokenManager(SimpleCharStream,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjCheckNAdd(int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjFillToken()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveNfa_0(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjCheckNAddStates(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveStringLiteralDfa1_0(long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveStringLiteralDfa0_1()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStopStringLiteralDfa_1(int,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveStringLiteralDfa2_0(long,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveStringLiteralDfa0_2()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveNfa_2(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.ReInit(SimpleCharStream,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfaWithStates_2(int,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjMoveStringLiteralDfa0_0()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.MoreLexicalActions()", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjCheckNAddTwoStates(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.setDebugStream(java)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfaWithStates_0(int,int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStopAtPos(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStopStringLiteralDfa_2(int,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjCheckNAddStates(int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.SwitchTo(int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjAddStates(int,int)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfa_2(int,long)", "src/java/org/mime4j/field/datetime/parser/DateTimeParserTokenManager.java@org.mime4j.field.datetime.parser.DateTimeParserTokenManager.jjStartNfa_1(int,long)", "src/java/org/mime4j/field/datetime/parser/ParseException.java@org.mime4j.field.datetime.parser.ParseException.add_escapes(String)", "src/java/org/mime4j/field/datetime/parser/ParseException.java@org.mime4j.field.datetime.parser.ParseException.ParseException(Token,int,String)", "src/java/org/mime4j/field/datetime/parser/ParseException.java@org.mime4j.field.datetime.parser.ParseException.ParseException()", "src/java/org/mime4j/field/datetime/parser/ParseException.java@org.mime4j.field.datetime.parser.ParseException.ParseException(String)", "src/java/org/mime4j/field/datetime/parser/ParseException.java@org.mime4j.field.datetime.parser.ParseException.getMessage()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getLine()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getColumn()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.GetSuffix(int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.adjustBeginLineColumn(int,int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.SimpleCharStream(java,int,int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.FillBuff()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.BeginToken()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.GetImage()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.SimpleCharStream(java)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.ReInit(java,int,int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.ReInit(java)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.readChar()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getBeginLine()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.ReInit(java,int,int,int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.UpdateLineColumn(char)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.SimpleCharStream(java,int,int,int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getBeginColumn()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.Done()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.ExpandBuff(boolean)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.backup(int)", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getEndColumn()", "src/java/org/mime4j/field/datetime/parser/SimpleCharStream.java@org.mime4j.field.datetime.parser.SimpleCharStream.getEndLine()", "src/java/org/mime4j/field/datetime/parser/Token.java@org.mime4j.field.datetime.parser.Token.newToken(int)", "src/java/org/mime4j/field/datetime/parser/Token.java@org.mime4j.field.datetime.parser.Token.toString()", "src/java/org/mime4j/field/datetime/parser/TokenMgrError.java@org.mime4j.field.datetime.parser.TokenMgrError.TokenMgrError(boolean,int,int,int,String,char,int)", "src/java/org/mime4j/field/datetime/parser/TokenMgrError.java@org.mime4j.field.datetime.parser.TokenMgrError.TokenMgrError(String,int)", "src/java/org/mime4j/field/datetime/parser/TokenMgrError.java@org.mime4j.field.datetime.parser.TokenMgrError.addEscapes(String)", "src/java/org/mime4j/field/datetime/parser/TokenMgrError.java@org.mime4j.field.datetime.parser.TokenMgrError.getMessage()", "src/java/org/mime4j/field/datetime/parser/TokenMgrError.java@org.mime4j.field.datetime.parser.TokenMgrError.LexicalError(boolean,int,int,int,String,char)", "src/java/org/mime4j/message/AbstractBody.java@org.mime4j.message.AbstractBody.getParent()", "src/java/org/mime4j/message/AbstractBody.java@org.mime4j.message.AbstractBody.setParent(Entity)", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setParent(Entity)", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getHeader()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getBody()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getContentTransferEncoding()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setHeader(Header)", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.isMultipart()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getCharset()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.isMimeType(String)", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getParent()", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.setBody(Body)", "src/java/org/mime4j/message/Entity.java@org.mime4j.message.Entity.getMimeType()", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.endHeader()", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.addField(Field)", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getField(String)", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.field(String)", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getFields(String)", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.getFields()", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.Header(InputStream)", "src/java/org/mime4j/message/Header.java@org.mime4j.message.Header.toString()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startBodyPart()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.field(String)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endHeader()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.preamble(InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startMessage()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endHeader()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.expect(Class)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.getSubject()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startHeader()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endMultipart()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endBodyPart()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.field(String)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.Message(InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startMessage()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.preamble(InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startHeader()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endMultipart()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.endMessage()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.startBodyPart()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endMessage()", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.epilogue(InputStream)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.Message.expect(Class)", "src/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.endBodyPart()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getSubType()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getBodyParts()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getEpilogue()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setSubType(String)", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setParent(Entity)", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getParent()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setBodyParts(List)", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getPreamble()", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setEpilogue(String)", "src/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.setPreamble(String)", "src/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.getInputStream()", "src/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.getParent()", "src/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/java/org/mime4j/message/TempFileBinaryBody.java@org.mime4j.message.TempFileBinaryBody.setParent(Entity)", "src/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/java/org/mime4j/message/TempFileTextBody.java@org.mime4j.message.TempFileTextBody.getReader()", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.isEncodingSupported(String)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.Charset(String,String,String)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.Charset.compareTo(Object)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.compareTo(Object)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.Charset.Charset(String,String,String)", "src/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.isDecodingSupported(String)", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.available()", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read(byte)", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.getBytesLeft()", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.skip(long)", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read(byte,int,int)", "src/java/org/mime4j/util/PartialInputStream.java@org.mime4j.util.PartialInputStream.read()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.skip(long)", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.markSupported()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read(byte)", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.reset()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.read(byte,int,int)", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.close()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.available()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.PositionInputStream(InputStream)", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.getPosition()", "src/java/org/mime4j/util/PositionInputStream.java@org.mime4j.util.PositionInputStream.mark(int)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getAbsolutePath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getInputStream()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempFile(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.length()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getInputStream()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempPath(File)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getRootTempPath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.isInMemory()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempPath(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.getAbsolutePath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile(String,String,boolean)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.isInMemory()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(TempPath,String,String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.SimpleTempFile(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempPath(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempFile(File)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile(String,String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath(TempPath,String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.SimpleTempStorage()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.SimpleTempPath(String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempPath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(String,String)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.SimpleTempPath(File)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.getOutputStream()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.length()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempPath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.createTempFile(String,String,boolean)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getAbsolutePath()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempStorage.getOutputStream()", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempFile.SimpleTempFile(File)", "src/java/org/mime4j/util/SimpleTempStorage.java@org.mime4j.util.SimpleTempPath.createTempFile()", "src/java/org/mime4j/util/TempStorage.java@org.mime4j.util.TempStorage.setInstance(TempStorage)", "src/java/org/mime4j/util/TempStorage.java@org.mime4j.util.TempStorage.getInstance()", "src/test/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testAddField()", "src/test/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testParameters()", "src/test/org/mime4j/BodyDescriptorTest.java@org.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.fromString(String)", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testRead()", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/org/mime4j/EOLConvertingInputStreamTest.java@org.mime4j.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testBigEnoughPushbackBuffer()", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/org/mime4j/MimeBoundaryInputStreamTest.java@org.mime4j.MimeBoundaryInputStreamTest.read(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testStop()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.escape(char)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.escape(String)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmptyStream()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endMessage()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.raw(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParseMultiLineFields()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParseOneLineFields()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.epilogue(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endBodyPart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endMessage()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.field(String)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmptyBody()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testInvalidFields()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.raw(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endBodyPart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMessage()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startMessage()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testEmpyHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.preamble(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.escape(char)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMultipart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.epilogue(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.startBodyPart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startBodyPart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.escape(String)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.endMultipart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.endMultipart()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.field(String)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.preamble(InputStream)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.setUp()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.TestHandler.startHeader()", "src/test/org/mime4j/MimeStreamParserTest.java@org.mime4j.MimeStreamParserTest.testParse()", "src/test/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testReadSingleByte()", "src/test/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testReadManyBytes()", "src/test/org/mime4j/RootInputStreamTest.java@org.mime4j.RootInputStreamTest.testTruncate()", "src/test/org/mime4j/TestUtil.java@org.mime4j.TestUtil.readResourceAsStream(String)", "src/test/org/mime4j/TestUtil.java@org.mime4j.TestUtil.readResource(String,String)", "src/test/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.testDecode()", "src/test/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.toString(byte)", "src/test/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.fromString(String)", "src/test/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.setUp()", "src/test/org/mime4j/decoder/Base64InputStreamTest.java@org.mime4j.decoder.Base64InputStreamTest.read(InputStream)", "src/test/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.setUp()", "src/test/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeBody()", "src/test/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeB()", "src/test/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.setUp()", "src/test/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()", "src/test/org/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.mime4j.decoder.QuotedPrintableInputStreamTest.read(InputStream)", "src/test/org/mime4j/field/ContentTransferEncodingFieldTest.java@org.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/org/mime4j/field/ContentTransferEncodingFieldTest.java@org.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.setUp()", "src/test/org/mime4j/field/ContentTypeFieldTest.java@org.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/org/mime4j/field/FieldTest.java@org.mime4j.field.FieldTest.testGetName()", "src/test/org/mime4j/field/FieldTest.java@org.mime4j.field.FieldTest.testParse()", "src/test/org/mime4j/field/UnstructuredFieldTest.java@org.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testEmptyAddressList()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testTortureTest()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testLexicalError()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testFlatten()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testParse2()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testSimpleForm()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testParse1()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/org/mime4j/field/address/AddressTest.java@org.mime4j.field.address.AddressTest.testEmptyGroup()", "src/test/org/mime4j/field/contenttype/ContentTypeTest.java@org.mime4j.field.contenttype.ContentTypeTest.testContentType()", "src/test/org/mime4j/field/contenttype/ContentTypeTest.java@org.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "src/test/org/mime4j/field/datetime/DateTimeTest.java@org.mime4j.field.datetime.DateTimeTest.testNormalDate()", "src/test/org/mime4j/field/datetime/DateTimeTest.java@org.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.setUp()", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.MessageParserTest(String,String)", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.main(String)", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.suite()", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.escape(String)", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.runTest()", "src/test/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "src/test/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.setUp()", "src/test/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testGetMimeType()", "src/test/org/mime4j/message/MessageTest.java@org.mime4j.message.MessageTest.testIsMultipart()", "src/test/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testGetRootTempPath()", "src/test/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempFile()", "src/test/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempPathString()", "src/test/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempPath()", "src/test/org/mime4j/util/SimpleTempStorageTest.java@org.mime4j.util.SimpleTempStorageTest.testCreateTempFileStringString()"], "9d2b15bd5382cc2590e5de75e048da4021d64df0": ["src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Header.java@org.mime4j.message.Header.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)"], "12fa9f4e5ce921375f8a88cf87c77638bb9fba05": ["core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)", "core/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)"], "1f0cc76322aff64605e6276dffb2c686311ed3f4": ["src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getDispositionType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getFilename()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setFilename(String)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSubject(String)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getReplyTo()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getFrom()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setSender(Mailbox)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getDate()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getBcc()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox[])", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setDate(Date,TimeZone)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setBcc(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSender()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getTo()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Mailbox)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getCc()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setReplyTo(Address)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setTo(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setFrom(Collection)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.setCc(Address[])", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "src/main/java/org/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.getContentType(Multipart)", "src/main/javorg/apache/james/mime4j/message/MessageWriter.java@org.apache.james.mime4j.message.MessageWriter.writeHeader(Header,OutputStream)"], "aa45e1b3e3f5ec3448a99aaec46af455c902e5b4": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.BodyPart(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.endHeader()", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(InputStream,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.HeaderImpl(Header)", "dom/src/main/javorg/apache/james/mime4j/message/HeaderImpl.java@org.apache.james.mime4j.message.HeaderImpl.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor,boolean,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(Message)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.MessageImpl(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.copy(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.endHeader()", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.copy(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.copy(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.copy(Body)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.field(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.copy(Header)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor,boolean,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartImpl.java@org.apache.james.mime4j.message.MultipartImpl.MultipartImpl(Multipart)", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipartMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/CopyConstructorTest.java@org.apache.james.mime4j.dom.CopyConstructorTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartMixed()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentNoPreamble()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachmentPreambleEpilogue()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testSimpleMail()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.testBinaryAttachment()", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)"], "c14019ca08174d36f16ad45d6798ebb4f4f771cf": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.of(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.create()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testOfWithAMessage()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatOfInputStreamReturnNullDateWhenNoDateHeader()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedReadNeverReturnNullDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithNoDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedCreateNeverReturnNullDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCustomBody()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithDefaults()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatOfMesageReturnNullDateWhenNoDateHeader()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSubject()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCreateMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedCreateCopyNeverReturnNullDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testThatDeprecatedConstructorNeverReturnNullDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetFrom()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSender()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetMessageId()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCreateMessageId()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetSubject()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetCc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetDate()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testCopy()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCustomBody()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetSender()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithNoDefaults()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetBcc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testGetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testBuildWithDefaults()"], "162fc322fee94e1b2bae0a5d69658a344ce52d09": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setHeadlessParsing(String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getHeadlessParsing()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.MimeEntityConfig()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.setDefaultContentType(String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.getDefaultContentType()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntityConfig.java@org.apache.james.mime4j.stream.MimeEntityConfig.MimeEntityConfig()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()"], "c83ed25afc1c526e9d9ffc9f1931c898c240cdd2": ["src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getMediaType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.getSubType()", "src/main/java/org/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.DefaultBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/DefaultBodyDescriptor.java@org.apache.james.mime4j.DefaultBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.Multipart(String)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.setUp()", "src/test/javorg/apache/james/mime4j/MimeTokenStreamBodyDescriptorTest.java@org.apache.james.mime4j.MimeTokenStreamBodyDescriptorTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartMixed()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartAlternative()", "src/test/javorg/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartMixed()", "src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()"], "631141a8a03ea4645403f3bcd50c3b852d5e5d98": ["core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()"], "72c882ca0e0f0887b641f0370be380b41e0da237": ["core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.skipAllWhiteSpace(ByteSequence,ParserCursor)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipCommentsWithQuotedPairs()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingIncompleteQuote()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicTokenParsing()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingWithQuotedPairs()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingQuotedValuesWithComments()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithUnquotedBlanks()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingWithQuotedPairs()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseEmptyParam()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEmpty()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingQuotedValuesWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax1()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingObsoleteSyntax()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingNoBlankAfterColon()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseEscaped()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingIncompleteQuote()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax2()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseFolded()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicParsing()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParse()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testSkipCommentsWithQuotedPairs()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithComments()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithUnquotedBlanks()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicTokenParsing()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(ByteSequence,ParserCursor,int)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor,int)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseDomain(ByteSequence,ParserCursor,int)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.LenientAddressBuilder()", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor)", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyQuotedStringBeforeDotAtomInLocalPart()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroupGetEncodedString()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testMessyGroupAndMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testLexicalError()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testSimpleForm()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testFlatten()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testEmptyGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testTortureTest()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidGroup()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseInvalidAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testEmptyGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testMailboxGetEncodedString()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressFormatterTest.java@org.apache.james.mime4j.field.address.DefaultAddressFormatterTest.testGroupSerialization()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingComments()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTruncated()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseRoute()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseNoRoute()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxObsoleteSynatax()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddress()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailboxNonASCII()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressTrailingGarbage()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressQuotedLocalPart()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseMailbox()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseDomain()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParsePartialQuotes()"], "b2533931fd9b7055303bd0e50dbdde447812fb79": ["examples/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.storeImage(StorageProvider,BufferedImage,String)", "examples/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createImagePart(BodyFactory,BufferedImage)", "examples/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.createTextPart(BodyFactory,String)", "examples/examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.renderSampleImage()", "examples/examples/src/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.main(String)", "examples/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTemplate()", "examples/examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "examples/examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()"], "a95852a4ef9a7023f5797a9bf426cbe78175b56d": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.toString()", "src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.getDisplayString()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/javorg/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(List,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getDisplayString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddress()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getName()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDisplayString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString()", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.toString()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(List,boolean)", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()"], "8478babde01ac7adb0668d3e13d4ddbddd5ef319": ["src/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/javorg/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/test/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()"], "93739383f3ed5e6471897e4c5b29e9fd7b0b25e8": ["src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(List)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(List)"], "1afcd74635f4e72101de323e6eb68aafa7d1f031": ["src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()"], "cc9cd928419fc69e3629125cb89a805291345bdc": ["src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()"], "602def139d88c814bc03a92de79609fedc26a898": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMalformedHeaderStartsBody(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.MimeConfig(boolean,int,int,int,long,boolean,String,boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxLineLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.build()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setHeadlessParsing(String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setHeadlessParsing(String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxContentLen(long)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.custom()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.copy(MimeConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setCountLineNumbers(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.toString()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setStrictParsing(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.build()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setMaxContentLen(long)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setMalformedHeaderStartsBody(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setMaxLineLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.Builder()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setMaxHeaderLen(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.Builder()", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setStrictParsing(boolean)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.Builder.setMaxHeaderCount(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setCountLineNumbers(boolean)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMalformedHeaderStartsBody(boolean)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderLen(int)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxLineLen(int)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxHeaderCount(int)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setHeadlessParsing(String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.MimeConfig()", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setCountLineNumbers(boolean)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.toString()", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setMaxContentLen(long)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.setStrictParsing(boolean)", "core/src/main/javorg/apache/james/mime4j/stream/MimeConfig.java@org.apache.james.mime4j.stream.MimeConfig.clone()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/test/java/org/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getConfig()", "core/src/test/javorg/apache/james/mime4j/ExampleMessageTestCase.java@org.apache.james.mime4j.ExampleMessageTestCase.getConfig()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.setUp()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()"], "127ebac7c9c7607d2a1b00d5d1961af3b5a3b182": ["src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.parse(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.endHeader()", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.startHeader()", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(String)", "src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)"], "c33617db27d2c31825946706c91843f3cfbadce5": ["dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.MultipartBuilder()", "dom/src/test/java/org/apache/james/mime4j/message/MultipartBuilderTest.java@org.apache.james.mime4j.message.MultipartBuilderTest.testDefaults()"], "d1aaa00e44c76234ccc9f9c7c6bf44038bc74533": ["core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.append(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.append(ByteArrayBuffer)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BasicBodyFactory(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BasicBodyFactory()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCharsetLenientTest.java@org.apache.james.mime4j.dom.MessageCharsetLenientTest.testLenientCharsetHandling()"], "3ebdaba293b326d0eb913fe1e4bb2db960f661c4": ["src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)"], "2ae2cb54a1cfa1ca17e70487eb91c65752a7c962": ["core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextField()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BasicBodyFactory(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BasicBodyFactory(Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.getDefaultCharset()", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.BasicBodyFactory(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parse(InputStream)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCharsetLenientTest.java@org.apache.james.mime4j.dom.MessageCharsetLenientTest.testLenientCharsetHandling()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCharsetLenientTest.java@org.apache.james.mime4j.dom.MessageCharsetLenientTest.testLenientCharsetHandling()"], "df990766b8726b4e937adef45886ea55d0e4fd93": ["src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()"], "c844424ba1f80c4dacf892c497d8323af01ec4f3": ["src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.truncate()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.LineNumberInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read()", "src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/LineNumberInputStream.java@org.apache.james.mime4j.io.LineNumberInputStream.getLineNumber()", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.message(Event)", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.message(Event)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(LineNumberSource,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(LineNumberSource,BufferedLineReaderInputStream,BodyDescriptor,int,int,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLineNumber()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLineNumber()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMessage()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.nextMimeEntity()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.MimeEntity(RootInputStream,BufferedLineReaderInputStream,BodyDescriptor,int,int,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isCountLineNumbers()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setCountLineNumbers(boolean)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.stop()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.doParse(InputStream,String)", "src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderCount()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxContentLimitCheck()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheckFoldedLines()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testSimpleEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxContentLimitCheck()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxHeaderCount()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testRawEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMultipartEntity()", "src/test/javorg/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxLineLimitCheck()"], "06852dd8b3f6b55f41aba12a02a7aa0c0c0e8aea": ["dom/src/test/java/org/apache/james/mime4j/dom/LargeMessageParsingTest.java@org.apache.james.mime4j.dom.LargeMessageParsingTest.parsingALargeMessageWithPermissiveConfigShouldSucceed()", "dom/src/test/java/org/apache/james/mime4j/dom/LargeMessageParsingTest.java@org.apache.james.mime4j.dom.LargeMessageParsingTest.parsingAMessageWithLongLinesWithPermissiveConfigShouldSucceed()"], "2740c9de37b62d012b86259f59870237f0b07b77": ["core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxHeaderCount()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isCountLineNumbers()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxContentLen()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isStrictParsing()", "core/src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxLineLen()", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxHeaderCount()", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isStrictParsing()", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.isCountLineNumbers()", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxLineLen()", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setCountLineNumbers(boolean)", "core/src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxContentLen()"], "21a4a8ae8adfc6395091af742dcb61009dda2554": ["src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/javorg/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.parseField()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()"], "155f5b4c2c58d5182e508e5292af4bcbb569cb7c": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.MimeBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testWriteTo()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageWriteToTest.java@org.apache.james.mime4j.dom.MessageWriteToTest.createMessage(byte)", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyEmptyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMultipartMessage()", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)"], "c0513d9c83966fa68d3101a85cfa4e7db43ccc1b": ["dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentTypeFieldImpl.java@org.apache.james.mime4j.field.ContentTypeFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldImpl.java@org.apache.james.mime4j.field.DateTimeFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body,DecodeMonitor)"], "b9c695442b104e5050b06720f271aae7ea22ea90": ["core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.append(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.build()", "core/src/main/javorg/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.append(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.toString()", "core/src/main/javorg/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.toString()", "core/src/main/javorg/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.NameValuePair(String,String,boolean)", "core/src/main/javorg/apache/james/mime4j/stream/NameValuePair.java@org.apache.james.mime4j.stream.NameValuePair.isQuoted()", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameters(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyQuotedContent(ByteSequence,ParserCursor,StringBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseField(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseToken(ByteSequence,ParserCursor,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyContent(ByteSequence,ParserCursor,int,StringBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameter(ByteSequence,ParserCursor)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.skipWhiteSpace(ByteSequence,ParserCursor)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseField(ByteSequence)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(RawField)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameter(ByteSequence,ParserCursor,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameters(ByteSequence,ParserCursor)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseRawBody(ByteSequence,ParserCursor)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyEscaped(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.isWhitespace(int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyTrimmed(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copy(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.indexOf(ByteSequence,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseParameter(ByteSequence,ParserCursor)", "core/src/test/java/org/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testBasics()", "core/src/test/javorg/apache/james/mime4j/stream/LenientFieldBuilderTest.java@org.apache.james.mime4j.stream.LenientFieldBuilderTest.testBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingWithQuotedPairs()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicTokenParsing()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingNoBlankAfterColon()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingTokensWithUnquotedBlanks()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingIncompleteQuote()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueParseBasics()", "core/src/test/javorg/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testNameValueListParseBasics()"], "8961e4c319ccfe9df4896e4d580e01339d54ec60": ["src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(Storage)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "src/main/java/org/apache/james/mime4j/message/storage/AbstractStorageProvider.java@org.apache.james.mime4j.message.storage.AbstractStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.close()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.write0(byte,int,int)", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageOutputStream.write0(byte,int,int)", "src/main/javorg/apache/james/mime4j/message/storage/MemoryStorageProvider.java@org.apache.james.mime4j.message.storage.MemoryStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/StorageOutputStream.java@org.apache.james.mime4j.message.storage.StorageOutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/StorageOutputStream.java@org.apache.james.mime4j.message.storage.StorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/message/storage/StorageOutputStream.java@org.apache.james.mime4j.message.storage.StorageOutputStream.write(byte)", "src/main/java/org/apache/james/mime4j/message/storage/StorageOutputStream.java@org.apache.james.mime4j.message.storage.StorageOutputStream.toStorage()", "src/main/java/org/apache/james/mime4j/message/storage/StorageOutputStream.java@org.apache.james.mime4j.message.storage.StorageOutputStream.write(int)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.close()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.createStorageOutputStream()", "src/main/javorg/apache/james/mime4j/message/storage/TempFileStorageProvider.java@org.apache.james.mime4j.message.storage.TempFileStorageProvider.store(InputStream)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.close()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageOutputStream.close()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.write0(byte,int,int)", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.createStorageOutputStream()", "src/main/javorg/apache/james/mime4j/message/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.message.storage.ThresholdStorageProvider.store(InputStream)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testThresholdStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testMemoryStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testTempFileStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testCipherStorageProvider()", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testStore(StorageProvider,int)", "src/test/java/org/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.verifyData(byte,byte)", "src/test/javorg/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "src/test/javorg/apache/james/mime4j/message/storage/StorageProviderTest.java@org.apache.james.mime4j.message.storage.StorageProviderTest.testThresholdStorageProvider()"], "72d33e6c4e18d7b6c4e945f61acd8811767d0f30": ["core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(String)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.AbstractField(String,String,ByteSequence)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.getParser()", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,String)", "core/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "core/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "core/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "core/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.field(Field)", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testDispositionTypeWithSemiColonNoParams()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testIsDispositionType()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetDispositionType()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetSize()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetReadDate()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetParameter()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetFilename()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetModificationDate()", "core/src/test/javorg/apache/james/mime4j/field/ContentDispositionFieldTest.java@org.apache.james.mime4j.field.ContentDispositionFieldTest.testGetCreationDate()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "core/src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "core/src/test/javorg/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "core/src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "core/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "core/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "core/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "core/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "core/src/test/javorg/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "core/src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "core/src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "core/src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "core/src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "core/src/test/javorg/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "core/src/test/java/org/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "core/src/test/javorg/apache/james/mime4j/message/CopyConstructorTest.java@org.apache.james.mime4j.message.CopyConstructorTest.testCopyHeader()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "core/src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetDispositionType()", "core/src/test/javorg/apache/james/mime4j/message/EntityTest.java@org.apache.james.mime4j.message.EntityTest.testGetFilename()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteSpecialCharacters()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "core/src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetField()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveNonExistantField()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteSpecialCharacters()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testSetNonExistantField()", "core/src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testRemoveFields()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "core/src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetFrom()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSubject()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetBcc()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetDate()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetCc()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMessageId()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetSender()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetReplyTo()", "core/src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetTo()", "core/src/test/java/org/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()", "core/src/test/javorg/apache/james/mime4j/message/MultipartFormTest.java@org.apache.james.mime4j.message.MultipartFormTest.testMultipartFormContent()"], "649c21e783e102a90fa9bc201cee32c1ac7ac5a5": ["dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "dom/src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newAddressList(String,Collection)"], "098ada220ea7aba33359bc644b23065900650d13": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.monitor(DecodeMonitor,String,String,String,String,String[])", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.monitor(DecodeMonitor,String,String,String,String,String[])", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.buf()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readAllowed()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.skip(int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.unread(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.bufferLen()", "core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.skip(int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int,int)", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.buf()", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.bufferLen()", "core/src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readAllowed()", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isLastPart()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String,boolean)", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.unread(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isLastPart()", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "core/src/main/javorg/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String,boolean)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "core/src/main/javorg/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.append(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/javorg/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.append(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.reset()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.parseContentType(Field)", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.newChild()", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.parseContentType(Field)", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.build()", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.reset()", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.newChild()", "core/src/main/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.append(ByteArrayBuffer)", "core/src/main/javorg/apache/james/mime4j/stream/LenientFieldBuilder.java@org.apache.james.mime4j.stream.LenientFieldBuilder.append(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,BodyDescriptorBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,BodyDescriptorBuilder)", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence,int,String,String)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence,int,String,String)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isEmpty()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isFull()", "core/src/main/java/org/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toByteArray()", "core/src/main/javorg/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isFull()", "core/src/main/javorg/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.isEmpty()", "core/src/main/javorg/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.toByteArray()", "core/src/main/javorg/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.ByteArrayBuffer(int)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testFunnyInputDoesNotRaiseOutOfMemoryError()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeJapaneseEncodedWords()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testDecodeSomeEncodedWords()", "core/src/test/javorg/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testFunnyInputDoesNotRaiseOutOfMemoryError()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.testLetterEncoding()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.addTests(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.addTests(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testCRWithoutLFInHeader()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testPrematureEOFAfterFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyStream()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testInvalidFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseMultiLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testParseOneLineFields()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserTest.java@org.apache.james.mime4j.parser.MimeStreamParserTest.testEmptyBody()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testAddField()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetContentLength()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetMimeType()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetContentLength()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testGetMimeType()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testAddField()", "core/src/test/javorg/apache/james/mime4j/stream/FallbackBodyDescriptorBuilderTest.java@org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilderTest.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.stream.MimeTokenEmbeddedMessageTest.testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenNoRecurseInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testSetNoRecurseSoInputStreamShouldContainInnerMail()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenStreamTest.java@org.apache.james.mime4j.stream.MimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/java/org/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.checkNextIs(EntityState)", "core/src/test/javorg/apache/james/mime4j/stream/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.stream.StrictMimeTokenStreamTest.testMissingBoundary()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testConstructor()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSimpleAppend()", "core/src/test/java/org/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testExpandAppend()", "core/src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testExpandAppend()", "core/src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendOneByte()", "core/src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testConstructor()", "core/src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testSimpleAppend()", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoader.java@org.apache.james.mime4j.dom.ServiceLoader.load(Class)", "dom/src/main/javorg/apache/james/mime4j/dom/ServiceLoader.java@org.apache.james.mime4j.dom.ServiceLoader.load(Class)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldImpl.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.parseDate(String)", "dom/src/main/javorg/apache/james/mime4j/field/ContentDispositionFieldLenientImpl.java@org.apache.james.mime4j.field.ContentDispositionFieldLenientImpl.parseDate(String)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLengthFieldImpl.java@org.apache.james.mime4j.field.ContentLengthFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLocationFieldImpl.java@org.apache.james.mime4j.field.ContentLocationFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getMimeType()", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntity.java@org.apache.james.mime4j.message.AbstractEntity.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newUniqueBoundary()", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.newUniqueBoundary()", "dom/src/main/javorg/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.calcCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Entity)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.copy(Entity)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseHeader(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentTypeParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(String,String,String,String,String,Map)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getTransferEncoding()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDescription()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(String,String,String,String,String,Map)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMinorVersion()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLanguage()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionCreationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getMimeMajorVersion()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionReadDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionModificationDate()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentTypeParameters()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionSize()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionType()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentLocation()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionFilename()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.getContentDispositionParameters()", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcCharset(ContentTypeField)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.calcCharset(ContentTypeField)", "dom/src/main/java/org/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(FieldParser,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/SimpleContentHandler.java@org.apache.james.mime4j.message.SimpleContentHandler.SimpleContentHandler(FieldParser,DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageCompleteMailTest.java@org.apache.james.mime4j.dom.MessageCompleteMailTest.testMultipartAlternative()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testSimpleNonMimeTextHeadless()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMalformedHeaderShouldEndHeader()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageHeadlessParserTest.java@org.apache.james.mime4j.dom.MessageHeadlessParserTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.addTests(String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.addTests(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageTest.java@org.apache.james.mime4j.dom.MessageTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testAddField()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoDefaultToUsAsciiWhenUntyped()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetContentLength()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testParameters()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetContentLength()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testAddField()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.describe(byte)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoNotDefaultToUsAsciiForNonTextTypes()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testGetMimeType()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testParameters()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.testDoDefaultToUsAsciiWhenUntyped()", "examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory(StorageProvider,DecodeMonitor)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory(StorageProvider,DecodeMonitor)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)"], "1faa9f86d3a0890740f2204f5683adac6024f88b": ["examples/src/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)"], "f38bfece85d6a6633468b5238f099045c1288d4e": ["core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()"], "f9b599ff4eb449029644b1a75a368a290338a177": ["src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.getParent()", "src/main/java/org/apache/james/mime4j/message/SingleBody.java@org.apache.james.mime4j.message.SingleBody.copy()", "src/main/java/org/apache/james/mime4j/message/StorageBinaryBody.java@org.apache.james.mime4j.message.StorageBinaryBody.copy()", "src/main/java/org/apache/james/mime4j/message/StorageTextBody.java@org.apache.james.mime4j.message.StorageTextBody.copy()", "src/main/java/org/apache/james/mime4j/message/StringTextBody.java@org.apache.james.mime4j.message.StringTextBody.copy()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.addReference()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/MultiReferenceStorage.java@org.apache.james.mime4j.message.storage.MultiReferenceStorage.delete()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageBinaryBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.storageIsReadable(Storage)", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.copyTest(SingleBody)", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.DummyStorage.delete()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.delete()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.testSingleReference()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.getInputStream()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.DummyStorage.getInputStream()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.testMultiReference()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "src/test/java/org/apache/james/mime4j/message/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.message.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()"], "b3f8b0f17186413b1daef3e250d010a02fea0ca9": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getReader()", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.setResult(byte,int,byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toBase64(byte)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.checkLineLength(byte,int)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.main(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.join(byte,byte)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.ascii(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.breakLines(String)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64Latin1Body()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.checkBody(String)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMime8859Body()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.checkSimpleMail(byte,String,int)", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadSimpleBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadPartBodies()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeBase64ASCIIBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeQuotedPrintable()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.testShouldReadOnePartMimeASCIIBody()", "src/test/java/org/apache/james/mime4j/MimeTokenStreamReaderTest.java@org.apache.james.mime4j.MimeTokenStreamReaderTest.setUp()"], "73218b2b64914ff3563400dccd614165a688f5ac": ["src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.parse(String)", "src/main/javorg/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.parse(String)", "src/main/javorg/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.parse(String)", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseGroup()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseAddress()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParseMailbox()"], "0f68a8f9ab6638ac5b71466eb59e27e473125b67": ["core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,BitSet)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyUnquotedContent(ByteSequence,ParserCursor,BitSet,StringBuilder)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseValue(ByteSequence,ParserCursor,BitSet)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testTokenParsingMixedValuesAndQuotedValues2()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testEmbeddedQuotes()"], "1fae7aff5221a6a58d2a0c960d5bca25578a01ec": ["src/main/java/org/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/javorg/mime4j/decoder/DecoderUtil.java@org.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/test/java/org/mime4j/decoder/DecoderUtilTest.java@org.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()"], "a26b15d3ffe714b8399fd79d1a80280fce62bdd0": ["core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getReader()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getReader()"], "d07958db2a265b96bf883c3cbc82a9c37e3c5ea5": ["dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.version(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.generateMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Iterable)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,Charset)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseAddresses(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.generateMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSubject()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSubject(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getBcc()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReadDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCharset()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFilename()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date,TimeZone)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setDate(Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMessageId()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setSender(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFrom()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentTransferEncoding(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getDispositionType()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.obtainField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseMailboxes(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getContentTransferEncoding()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getReplyTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setFrom(Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentType(String,NameValuePair[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setCc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Collection)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,Mailbox)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setReplyTo(Address[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getTo()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getAddressList(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getModificationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getCreationDate()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBcc(Address)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSender()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setTo(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.containsField(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String,long,Date,Date,Date)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMailboxList(String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getMimeType()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.getSize()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,Mailbox[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setContentDisposition(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.addField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageImpl.java@org.apache.james.mime4j.message.MessageImpl.newMessageId(String)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildText()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.SingleBodyBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.readFrom(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.copy()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.build()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.copy()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.StringBody2(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.setByteArray(byte)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.BinaryBody2(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.setText(String)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.readFrom(Reader)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.buildBinary()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody2.copy()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody1.StringBody1(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.BinaryBody1.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.create()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.setCharset(Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.StringBody2(byte,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.StringBody2.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.BinaryBody1(byte)", "dom/src/main/java/org/apache/james/mime4j/message/SingleBodyBuilder.java@org.apache.james.mime4j.message.SingleBodyBuilder.StringBody1(String,Charset)", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testContentTypeStringNullParameters()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)"], "3e8d760fad98ae7e91dc7c48c16f60c0574fea17": ["src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/javorg/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stateToString(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getRecursionMode()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.isRaw()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRaw(boolean)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRaw(boolean)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.isRaw()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenRecurseShouldTreatInnerMailAsAnyOtherPart()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.tearDown()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.testWhenRecurseShouldRecurseInnerMail()", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.MimeTokenNoRecurseTest.nextShouldBeStandardPart(boolean)"], "d6f8125dbf667bee229d7184a1db52c5a12e14ca": ["storage/src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.createStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider,String)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.close()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorageProvider(StorageProvider)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.getSecretKeySpec()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorage.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.close()", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "storage/src/main/java/org/apache/james/mime4j/storage/CipherStorageProvider.java@org.apache.james.mime4j.storage.CipherStorageProvider.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.reset()", "storage/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.initialize()", "storage/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.getInstance()", "storage/src/main/java/org/apache/james/mime4j/storage/DefaultStorageProvider.java@org.apache.james.mime4j.storage.DefaultStorageProvider.setInstance(StorageProvider)", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.MemoryStorage(byte,int)", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.createStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageOutputStream.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.MemoryStorage(byte,int)", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorage.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/MemoryStorageProvider.java@org.apache.james.mime4j.storage.MemoryStorageProvider.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.decrementCounter()", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.MultiReferenceStorage(Storage)", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.addReference()", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.incrementCounter()", "storage/src/main/java/org/apache/james/mime4j/storage/MultiReferenceStorage.java@org.apache.james.mime4j.storage.MultiReferenceStorage.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.writeTo(OutputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.copy()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.StorageBinaryBody(MultiReferenceStorage)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.dispose()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.getStorageProvider()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage,String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String,String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.binaryBody(Storage)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory(StorageProvider,DecodeMonitor)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.binaryBody(InputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream,String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.toStorage()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(int)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.close()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageOutputStream.java@org.apache.james.mime4j.storage.StorageOutputStream.write(byte)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getReader()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.copy()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.dispose()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getMimeCharset()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.writeTo(OutputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.copy()", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getMimeCharset()", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getReader()", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.StringTextBody(String,Charset)", "storage/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.close()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.TempFileStorage(File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageOutputStream(File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.close()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorage(File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.createStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageOutputStream.TempFileStorageOutputStream(File)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.ThresholdStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorage(byte,int,Storage)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.toStorage0()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.ThresholdStorage(byte,int,Storage)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.createStorageOutputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.ThresholdStorageProvider(StorageProvider,int)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorage.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageOutputStream.close()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.write0(byte,int,int)", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.getInputStream()", "storage/src/main/java/org/apache/james/mime4j/storage/ThresholdStorageProvider.java@org.apache.james.mime4j.storage.ThresholdStorageProvider.close()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetter()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.tearDown()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testSetDefaultProperty()", "storage/src/test/java/org/apache/james/mime4j/storage/DefaultStorageProviderTest.java@org.apache.james.mime4j.storage.DefaultStorageProviderTest.testDefaultInstance()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testSingleReference()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testGetInputStreamOnDeleted()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testAddReferenceOnDeleted()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.delete()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.DummyStorage.getInputStream()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testMultiReference()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.testForwardsGetInputStream()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.delete()", "storage/src/test/java/org/apache/james/mime4j/storage/MultiReferenceStorageTest.java@org.apache.james.mime4j.storage.MultiReferenceStorageTest.getInputStream()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageTextBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStringTextBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.storageIsReadable(Storage)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageBinaryBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageTextBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.copyTest(SingleBody)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testReadWrite(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.verifyData(byte,byte)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testThresholdStorageProvider()", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testDelete(StorageProvider)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.createData(int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCipherStorageProvider()", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testMemoryStorageProvider()", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testTempFileStorageProvider()"], "c62e73f84bc761cb99757bdf25dcd1bd284d7cc8": ["src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)", "src/main/javorg/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)"], "8a109f0ccdffebe6f15b3e29483a5e22b401e6dc": ["core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.createAscii(CharSequence)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(CharSequence,Charset)", "core/src/main/javorg/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.createAscii(String)", "core/src/main/javorg/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldImpl.java@org.apache.james.mime4j.field.AddressListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/AddressListFieldLenientImpl.java@org.apache.james.mime4j.field.AddressListFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldImpl.java@org.apache.james.mime4j.field.MailboxFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldImpl.java@org.apache.james.mime4j.field.MailboxListFieldImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/MailboxListFieldLenientImpl.java@org.apache.james.mime4j.field.MailboxListFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseGroup(CharSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseAddressList(CharSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.DefaultAddressParser()", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseAddress(CharSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseAddressList(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseMailbox(CharSequence,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseMailbox(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseGroup(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/DefaultAddressParser.java@org.apache.james.mime4j.field.address.DefaultAddressParser.parseAddress(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseGroup(ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseAddressList(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.LenientAddressParser(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.createMailbox(String)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseMailbox(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseMailboxes(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseDomain(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseAddress(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseMailbox(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseGroup(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseAddressList(ByteSequence,ParserCursor)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseRoute(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.parseAddress(CharSequence)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressParser.java@org.apache.james.mime4j.field.address.LenientAddressParser.createMailbox(String,DomainList,String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseAddresses(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseMailboxes(String[])", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailboxList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setMailbox(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseMailboxes(String[])", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setAddressList(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.parseAddresses(String[])", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailbox()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testReplyTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testTo()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testCc()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testAddressList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testFrom()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testSender()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMailboxList()", "dom/src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testBcc()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetBcc()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetFrom()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetReplyTo()", "dom/src/test/javorg/apache/james/mime4j/message/MessageBuilderTest.java@org.apache.james.mime4j.message.MessageBuilderTest.testSetCc()"], "ef1b288d9592d55b1e4a77148e814f88b02daf69": ["core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.monitor(Event)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.stateToString(EntityState)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.readRawField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getDataStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.message(Event)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.toString()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getState()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.getBodyDescriptor()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.stateToString(EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.stateToString(EntityState)"], "721d7e078eda7870dea68b8f5ff89bed1b52d954": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.readRawField()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.fillFieldBuffer()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.parseField()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.getRaw()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.append(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.DefaultFieldBuilder(int)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.reset()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor,EntityState,EntityState,MimeEntityConfig,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.advance()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxContentLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLimitCheckFoldedLines()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderLengthMayExceedMaxLineLength()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxLineLimitCheck()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testMaxHeaderCount()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,DecodeMonitor,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory)"], "f4f8b2510958f6c5c1b9617ea7a81b194e2809a4": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionModificationDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionReadDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionCreationDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseDate(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionType()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseContentDisposition(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionParameters()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionReadDateParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionFilename()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionCreationDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionModificationDate()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionSizeParseException()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentDispositionSize()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.hashCode()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.equals(Object)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.print()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.toString()", "src/main/javorg/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.print()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.describe(byte,int)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionStandardParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionParameters()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionTypeCaseConversion()", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentDispositionType()"], "7c25b6eaeb8ee43123e7eb33706c3fedd5c33151": ["benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.body(BodyDescriptor,InputStream)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.body(BodyDescriptor,InputStream)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.body(BodyDescriptor,InputStream)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.body(BodyDescriptor,InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getInputStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.stateToString(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getField()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.newBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getDecodedInputStream()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.next()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.stop()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.setRecursionMode(int)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getState()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getConfig()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getBodyDescriptor()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.isRaw()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getReader()", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getRecursionMode()"], "6d3830f65052c438adb28aa08cd81aea5ec3f615": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeHeaderParameter(String,String)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeContentTypeParameterValue(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeHeaderParameter()", "src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeContentTypeParameterValue()"], "7c5051689b93357334de0397198e568e2fcef07b": ["src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.iterator()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.hasNext()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.remove()", "src/main/javorg/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.next()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyMailboxList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testInteractiveMain()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyDomainList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.run()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testDomainList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testNullConstructorAndBadUsage()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testAddressList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()"], "7645704be2a7cd447c0191bc80a1d285591c1726": ["src/java/org/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)", "src/javorg/mime4j/field/Field.java@org.mime4j.field.Field.parse(String)"], "d2b77debec4a5d83a223307853a76b351aa2665f": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.resolveCharset(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getMimeCharset()", "dom/src/main/javorg/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()"], "cfb6ea4f40caaed547c91da9f7650e1ced0335e8": ["dom/src/main/java/org/apache/james/mime4j/message/BasicBinaryBody.java@org.apache.james.mime4j.message.BasicBinaryBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBinaryBody.java@org.apache.james.mime4j.message.BasicBinaryBody.copy()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBinaryBody.java@org.apache.james.mime4j.message.BasicBinaryBody.BasicBinaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.bufferContent(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(byte)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.binaryBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.BasicTextBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.copy()", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.getStorageProvider()", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory()", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(Storage)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.binaryBody(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.BodyFactory(StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,BodyFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream,ParseParams,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setBodyFactory(BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setStorageProvider(StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream,ParseParams,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.newMessageBuilder()", "dom/src/main/javorg/apache/james/mime4j/message/MessageServiceFactoryImpl.java@org.apache.james.mime4j.message.MessageServiceFactoryImpl.setAttribute(String,Object)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,ParseParams,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,StorageProvider,MutableBodyDescriptorFactory,ParseParams,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.StorageBinaryBody(MultiReferenceStorage)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.dispose()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.copy()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.getStorageProvider()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory(StorageProvider,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String,String)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream,String)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.toJavaCharset(String,boolean,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage,String)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.binaryBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.binaryBody(Storage)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.StorageBodyFactory()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.StorageTextBody(MultiReferenceStorage,Charset)", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.copy()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/storage/StorageTextBody.java@org.apache.james.mime4j.storage.StorageTextBody.dispose()", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getInputStream()", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.writeTo(OutputStream)", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getMimeCharset()", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.copy()", "dom/src/main/java/org/apache/james/mime4j/storage/StringTextBody.java@org.apache.james.mime4j.storage.StringTextBody.StringTextBody(String,Charset)", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "dom/src/test/java/org/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testRemoveBody()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBody()", "dom/src/test/javorg/apache/james/mime4j/dom/EntityTest.java@org.apache.james.mime4j.dom.EntityTest.testSetBodyTwice()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyBodyPart()", "dom/src/test/javorg/apache/james/mime4j/dom/MimeBuilderCopyTest.java@org.apache.james.mime4j.dom.MimeBuilderCopyTest.testCopyMessage()", "dom/src/test/java/org/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/javorg/apache/james/mime4j/dom/MultipartFormTest.java@org.apache.james.mime4j.dom.MultipartFormTest.testMultipartFormContent()", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageTextBody()", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.sameContentTest(SingleBody,SingleBody)", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.storageIsReadable(Storage)", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.disposeTest(SingleBody,Storage)", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.copyTest(SingleBody)", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageTextBody()", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStringTextBody()", "examples/src/main/java/org/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/MultipartMessage.java@org.apache.james.mime4j.samples.dom.MultipartMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/javorg/apache/james/mime4j/samples/dom/TextPlainMessage.java@org.apache.james.mime4j.samples.dom.TextPlainMessage.main(String)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/main/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createRandomBinaryPart(int)", "examples/src/main/javorg/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.createTextPart(String)"], "7c83bdfc64510b126a0d815f4b76d6cf830c2241": ["core/src/main/java/org/apache/james/mime4j/util/LangUtils.java@org.apache.james.mime4j.util.LangUtils.hashCode(int,int)", "core/src/main/java/org/apache/james/mime4j/util/LangUtils.java@org.apache.james.mime4j.util.LangUtils.hashCode(int,Object)", "core/src/main/java/org/apache/james/mime4j/util/LangUtils.java@org.apache.james.mime4j.util.LangUtils.equals(Object,Object)", "core/src/main/java/org/apache/james/mime4j/util/LangUtils.java@org.apache.james.mime4j.util.LangUtils.hashCode(int,boolean)", "core/src/main/java/org/apache/james/mime4j/util/LangUtils.java@org.apache.james.mime4j.util.LangUtils.equalsIgnoreCase(String,String)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.doAddMailboxesTo(List)", "dom/src/main/java/org/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.toString()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.hashCode()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.equals(Object)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.getCanonicalizedAddress()", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.doAddMailboxesTo(List)", "dom/src/main/javorg/apache/james/mime4j/dom/address/Mailbox.java@org.apache.james.mime4j.dom.address.Mailbox.toString()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxHashCode()", "dom/src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMailboxEquals()"], "e32e83fbc6980e278e268007187d5a6be69bf2d2": ["dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.DateTimeFieldLenientImpl(Field,Collection,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DateTimeFieldLenientImpl.java@org.apache.james.mime4j.field.DateTimeFieldLenientImpl.createParser(Collection)", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.parseShouldSupportPartialYears()", "dom/src/test/java/org/apache/james/mime4j/field/LenientDateTimeFieldTest.java@org.apache.james.mime4j.field.LenientDateTimeFieldTest.parseShouldSupportPartialYearsFromLastCentury()"], "92f5b486b238db438c8a8b87a90f265520e5ba6f": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.ObjectWrapper(String,Object)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Header)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Entity)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.toString()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.run()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.main(String)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createAndShowGUI(Message)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.ObjectWrapper(String,Object)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.getObject()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.ObjectWrapper.getObject()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.toString()", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.MessageTree(Message)", "examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.createNode(Multipart)", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.toString()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.BodyDescriptor()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getParameters()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMultipart()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getCharset()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getTransferEncoding()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isQuotedPrintableEncoded()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.addField(String,String)", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMessage()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getBoundary()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isMimeType(String)", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.BodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.isBase64Encoded()", "src/main/java/org/apache/james/mime4j/BodyDescriptor.java@org.apache.james.mime4j.BodyDescriptor.getMimeType()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.available()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.reset()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.close()", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/CloseShieldInputStream.java@org.apache.james.mime4j.CloseShieldInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.read()", "src/main/java/org/apache/james/mime4j/EOLConvertingInputStream.java@org.apache.james.mime4j.EOLConvertingInputStream.close()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.parentEOF()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.matchBoundary()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.MimeBoundaryInputStream(InputStream,String)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.read()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.close()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasMoreParts()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.consume()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setContentHandler(ContentHandler)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseBodyPart(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.isRaw()", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseHeader(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseEntity(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parseMessage(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.setRaw(boolean)", "src/main/java/org/apache/james/mime4j/MimeStreamParser.java@org.apache.james.mime4j.MimeStreamParser.stop()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.truncate()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.getLineNumber()", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.startHeader()", "src/main/java/org/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.endHeader()", "src/main/java/org/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.field(String)", "src/main/java/org/apache/james/mime4j/SimpleContentHandler.java@org.apache.james.mime4j.SimpleContentHandler.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.Base64InputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.decodeAndEnqueue(byte,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64InputStream.java@org.apache.james.mime4j.decoder.Base64InputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.dequeue()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.enqueue(byte)", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.ByteQueue(int)", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.clear()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.count()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.iterator()", "src/main/java/org/apache/james/mime4j/decoder/ByteQueue.java@org.apache.james.mime4j.decoder.ByteQueue.ByteQueue()", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeEncodedWords(String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeBaseQuotedPrintable(String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeQ(String,String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeB(String,String)", "src/main/java/org/apache/james/mime4j/decoder/DecoderUtil.java@org.apache.james.mime4j.decoder.DecoderUtil.decodeBase64(String)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.QuotedPrintableInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.asciiCharToNumericValue(byte)", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.populatePushbackQueue()", "src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.read()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.increment(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.size()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.remove()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.next()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.iterator()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.hasNext()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.decrement(int)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.add(byte)", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.get()", "src/main/java/org/apache/james/mime4j/decoder/UnboundedFifoByteBuffer.java@org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer.UnboundedFifoByteBuffer()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getParseException()", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.AddressListField(String,String,String,AddressList,ParseException)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.getAddressList()", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.ContentTransferEncodingField(String,String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding(ContentTransferEncodingField)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.getEncoding()", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameters()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getParameter(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset(ContentTypeField)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getCharset()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getBoundary()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMultipart()", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.isMimeType(String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.ContentTypeField(String,String,String,String,Map,ParseException)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.getMimeType(ContentTypeField,ContentTypeField)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getParseException()", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.DateTimeField(String,String,String,Date,ParseException)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.getDate()", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.setFieldParser(String,FieldParser)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isTo()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isSubject()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isContentType()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.Field(String,String,String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getParser()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getBody()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.isFrom()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getRaw()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.getName()", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.toString()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getParseException()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.getMailbox()", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.MailboxField(String,String,String,Mailbox,ParseException)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.MailboxListField(String,String,String,MailboxList,ParseException)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getParseException()", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.getMailboxList()", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.UnstructuredField(String,String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.getValue()", "src/main/java/org/apache/james/mime4j/field/address/Address.java@org.apache.james.mime4j.field.address.Address.addMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.size()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.AddressList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.remove()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.flatten()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.iterator()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.next()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.print()", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.parse(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.main(String)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.addSpecials(StringBuffer,Token)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddress(ASTaddress)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.getInstance()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildGroupBody(ASTgroup_body)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildMailbox(ASTmailbox)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAngleAddr(ASTangle_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.remove()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildNameAddr(ASTname_addr)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.hasNext()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.nextNode()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildString(SimpleNode,boolean)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.remove()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(DomainList,ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildRoute(ASTroute)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.nextNode()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.next()", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.ChildNodeIterator.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.ChildNodeIterator(SimpleNode)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddressList(ASTaddress_list)", "src/main/java/org/apache/james/mime4j/field/address/Builder.java@org.apache.james.mime4j.field.address.Builder.buildAddrSpec(ASTaddr_spec)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.toRouteString()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.size()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.DomainList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getMailboxes()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.Group(String,MailboxList)", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.toString()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getName()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.doAddMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.toString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getLocalPart()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getRoute()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(String,String)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getDomain()", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.doAddMailboxesTo(ArrayList)", "src/main/java/org/apache/james/mime4j/field/address/Mailbox.java@org.apache.james.mime4j.field.address.Mailbox.Mailbox(DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.size()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.print()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,String,String)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getAddressString(boolean)", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.getName()", "src/main/java/org/apache/james/mime4j/field/address/NamedMailbox.java@org.apache.james.mime4j.field.address.NamedMailbox.NamedMailbox(String,DomainList,String,String)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.DateTime(String,int,int,int,int,int,int)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getSecond()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.parse(String)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDay()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMinute()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.print()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getDate()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getMonth()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getTimeZone()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToYear(String)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getYear()", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.convertToDate(int,int,int,int,int,int,int)", "src/main/java/org/apache/james/mime4j/field/datetime/DateTime.java@org.apache.james.mime4j.field.datetime.DateTime.getHour()", "src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.getParent()", "src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/BodyPart.java@org.apache.james.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getParent()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMimeType(String)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getContentTransferEncoding()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getCharset()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setHeader(Header)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getBody()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.isMultipart()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getMimeType()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.getHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.field(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.addField(Field)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getFields()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.getField(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.field(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getSubject()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMultipart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.expect(Class)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.field(String)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.raw(InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getPreamble()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getBoundary()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getCharset()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getParent()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getBodyParts()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setSubType(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getEpilogue()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.getSubType()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getInputStream()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getParent()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.TempFileBinaryBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.getReader()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isDecodingSupported(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toMimeCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.compareTo(Object)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.Charset.Charset(String,String,String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.getCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isEncodingSupported(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.toJavaCharset(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.compareTo(Object)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.Charset(String,String,String)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.getBytesLeft()", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.available()", "src/main/java/org/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.close()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.available()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.reset()", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.getPosition()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getRootTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getInputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.isInMemory()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempStorage()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempFile(TempPath,String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.length()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempFile()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.getOutputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempPath(String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath(TempPath,String)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.getOutputStream()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.isInMemory()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempStorage.createTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.length()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempPath.createTempPath()", "src/main/java/org/apache/james/mime4j/util/SimpleTempStorage.java@org.apache.james.mime4j.util.SimpleTempFile.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/util/TempStorage.java@org.apache.james.mime4j.util.TempStorage.getInstance()", "src/main/java/org/apache/james/mime4j/util/TempStorage.java@org.apache.james.mime4j.util.TempStorage.setInstance(TempStorage)", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testRead()", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBigEnoughPushbackBuffer()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.raw(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMultipart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParseMultiLineFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(char)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testPrematureEOFAfterFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.field(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(char)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testStop()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testInvalidFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.escape(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endMultipart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.preamble(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyStream()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.body(BodyDescriptor,InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMultipart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.escape(String)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testCRWithoutLFInHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmptyBody()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testEmpyHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMessage()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParseOneLineFields()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.raw(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.startBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testBoundaryInEpilogue()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.endHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startMultipart(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.startBodyPart()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.endHeader()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParse()", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.epilogue(InputStream)", "src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.TestHandler.field(String)", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testReadSingleByte()", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testTruncate()", "src/test/java/org/apache/james/mime4j/RootInputStreamTest.java@org.apache.james.mime4j.RootInputStreamTest.testReadManyBytes()", "src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResource(String,String)", "src/test/java/org/apache/james/mime4j/TestUtil.java@org.apache.james.mime4j.TestUtil.readResourceAsStream(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.toString(byte)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/decoder/Base64InputStreamTest.java@org.apache.james.mime4j.decoder.Base64InputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeEncodedWords()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeQ()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.setUp()", "src/test/java/org/apache/james/mime4j/decoder/DecoderUtilTest.java@org.apache.james.mime4j.decoder.DecoderUtilTest.testDecodeB()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.read(InputStream)", "src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.setUp()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncodingStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTransferEncodingFieldTest.java@org.apache.james.mime4j.field.ContentTransferEncodingFieldTest.testGetEncoding()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeTypeStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetCharsetStatic()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testMimeTypeWithSemiColonNoParams()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.setUp()", "src/test/java/org/apache/james/mime4j/field/ContentTypeFieldTest.java@org.apache.james.mime4j.field.ContentTypeFieldTest.testGetParameter()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testParse()", "src/test/java/org/apache/james/mime4j/field/UnstructuredFieldTest.java@org.apache.james.mime4j.field.UnstructuredFieldTest.testGetBody()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testMessyGroupAndMailbox()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyAddressList()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testSimpleForm()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse1()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testEmptyGroup()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testTortureTest()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testFlatten()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testParse2()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testLexicalError()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testContentType()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.test(String,String,String)", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.ensureAllEqual(String)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testHeader()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.MessageParserTest(String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.suite()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(Body,File)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.assertEqualsBinary(String,InputStream,InputStream)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.main(String)", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.runTest()", "src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.escape(String)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testIsMultipart()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testWriteTo()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.getRawMessageAsByteArray()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.setUp()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testAddHeaderWriteTo()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempFile()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempFileStringString()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testGetRootTempPath()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempPathString()", "src/test/java/org/apache/james/mime4j/util/SimpleTempStorageTest.java@org.apache.james.mime4j.util.SimpleTempStorageTest.testCreateTempPath()"], "19c5ebad38939d82d419b885d4b8053f4d6405fc": ["examples/src/main/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/main/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)"], "de62b85f802747dcc8d42339a536bd103e8a23ad": ["src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.get(int)", "src/main/java/org/apache/james/mime4j/field/address/AddressList.java@org.apache.james.mime4j.field.address.AddressList.iterator()", "src/main/java/org/apache/james/mime4j/field/address/DomainList.java@org.apache.james.mime4j.field.address.DomainList.iterator()", "src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.iterator()"], "1b887260b1904a003ec716ddd52b3a7874681390": ["core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)"], "c1bbb244b614156651deb94662dca492d861a7b8": ["src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.getSecretKeySpec()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorage.CipherStorage(Storage,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.toStorage0()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.createStorageOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorage(Storage,String,SecretKeySpec)", "src/main/java/org/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream,String,SecretKeySpec)", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.toStorage0()", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.createStorageOutputStream()", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.CipherStorageOutputStream(StorageOutputStream)", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageOutputStream.toStorage0()", "src/main/javorg/apache/james/mime4j/message/storage/CipherStorageProvider.java@org.apache.james.mime4j.message.storage.CipherStorageProvider.CipherStorageOutputStream(StorageOutputStream)"], "a8d90d9c4fdf4426485a5cafce987001b4953090": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Message(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.BodyPart.BodyPart(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.Entity(Cursor,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.BodyPart(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Entity(Cursor,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.Message(Cursor,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Entity(InputStream,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.BodyPart(InputStream,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(InputStream,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.BodyPart.BodyPart(InputStream,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Message(InputStream,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.Entity(InputStream,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.Message(InputStream,BodyDescriptor)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advance()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.isEnded()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(RootInputStream,InputStream)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextMimePartCursor()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor,InputStream)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.stop()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.getLineNumber()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeBase64()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeQuotedPrintable()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.getStream()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.moreMimeParts()", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.boundary(String)", "src/main/java/org/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(InputStream)"], "23da1fd3e51ba958a95d56190f95a2039b8da91e": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String,String)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.TempFileTextBody(InputStream,String)"], "11bd131d71fd09c74a3bb11b621296ab9a098b1f": ["core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,URL)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String,File)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTestSuite()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTestSuite.getFile(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.MimeStreamParserExampleMessagesTest(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.getFile(String)", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,URL)", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String,File)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.ExampleMessagesRoundtripTest(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.ExampleMessagesRountripTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRountripTestSuite.getFile(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.getFile(String)", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String,URL)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.getFile(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String,File)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTest(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(Body,File)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.writeToFile(String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getFile(String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.MessageParserTestSuite()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTestSuite.MessageParserTestSuite()"], "6e8d1e3ab39682928c532dd549b1b72f951e3ac0": ["src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.tearDown()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.createMessage(byte)", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.testMultipartMixed()", "src/test/java/org/apache/james/mime4j/message/MessageCompleteMailTest.java@org.apache.james.mime4j.message.MessageCompleteMailTest.setUp()"], "559ab15a58d7c68824ea780f937cef6e569e0502": ["src/main/java/org/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.AddressListField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/AddressListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentDispositionField.java@org.apache.james.mime4j.field.ContentDispositionField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.ContentTransferEncodingField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTransferEncodingField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.DateTimeField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/DateTimeField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox0(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.checkValidFieldName(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList0(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList0(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(FieldParser,String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date0(String,Date,TimeZone)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailbox(String,Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.mailboxList(String,Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.sender(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentDisposition(String,Map)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.to(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(Date)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.messageId(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date,TimeZone)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.replyTo(Address[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.cc(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.addressList(String,Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.bcc(Address)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox[])", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Mailbox)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.from(Iterable)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,Date)", "src/main/java/org/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxField.java@org.apache.james.mime4j.field.MailboxField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/MailboxListField.java@org.apache.james.mime4j.field.MailboxListField.parse(String,String,String)", "src/main/java/org/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.UnstructuredField.parse(String,String,String)", "src/main/javorg/apache/james/mime4j/field/UnstructuredField.java@org.apache.james.mime4j.field.Parser.parse(String,String,String)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testInvalidFieldName()"], "10e4c98ef4a8099226845065563d8c9f38241143": ["src/main/java/org/mime4j/message/BodyPart.java@org.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/BodyPart.java@org.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Header.java@org.mime4j.message.Header.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.getCharset()", "src/main/java/org/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Multipart.java@org.mime4j.message.Multipart.writeTo(OutputStream)", "src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)"], "9a3deb93ccf6460a4d087fdf83d009d1aec2b212": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.tryDecodeEncodedWord(String,String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.recombine(String,String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWord(String,int,int)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeEncodedWords(String)", "core/src/test/java/org/apache/james/mime4j/codec/DecoderUtilTest.java@org.apache.james.mime4j.codec.DecoderUtilTest.testEncodedTextMayStartWithAnEqualsSign()"], "2ea38c1c5c324b79b18e6a530317b0162b5e4c51": ["dom/src/test/java/org/apache/james/mime4j/message/EntityImplTest.java@org.apache.james.mime4j.message.EntityImplTest.testSetBodyTwice()", "dom/src/test/java/org/apache/james/mime4j/message/EntityImplTest.java@org.apache.james.mime4j.message.EntityImplTest.testSetBody()", "dom/src/test/java/org/apache/james/mime4j/message/EntityImplTest.java@org.apache.james.mime4j.message.EntityImplTest.testRemoveBody()", "dom/src/test/java/org/apache/james/mime4j/message/EntityImplTest.java@org.apache.james.mime4j.message.EntityImplTest.testGetDispositionType()", "dom/src/test/java/org/apache/james/mime4j/message/EntityImplTest.java@org.apache.james.mime4j.message.EntityImplTest.testGetFilename()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testWriteSpecialCharacters()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testSetNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testRemoveFields()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testRemoveNonExistantField()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testSetField()", "dom/src/test/java/org/apache/james/mime4j/message/HeaderImplTest.java@org.apache.james.mime4j.message.HeaderImplTest.testHeader()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetDate()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.DummyBody.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testIsMultipart()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetSender()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testWriteTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetFrom()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetReplyTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.getRawMessageAsByteArray()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetMessageId()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.dispose()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetMimeType()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetCc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testDisposeGetsPropagatedToBody()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetSubject()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.DummyBody.dispose()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetBcc()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testMimeVersion()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testGetTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.testAddHeaderWriteTo()", "dom/src/test/java/org/apache/james/mime4j/message/MessageImplTest.java@org.apache.james.mime4j.message.MessageImplTest.getInputStream()"], "34a7bf8b55b75c530ad5780b026ff1e6d65d3aea": ["src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.skip(int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.clear()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.ensureCapacity(int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.limit()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.capacity()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.BufferedLineReaderInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.expand(int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.buf()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.length()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.hasBufferedData()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.pos()", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.charAt(int)", "src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.indexOf(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.getUnderlyingStream()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.read()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.checkIfClosed()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.read(byte)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.reset()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.CloseShieldInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.close()", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/CloseShieldInputStream.java@org.apache.james.mime4j.io.CloseShieldInputStream.available()", "src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.close()", "src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.EOLConvertingInputStream(InputStream,int)", "src/main/java/org/apache/james/mime4j/io/EOLConvertingInputStream.java@org.apache.james.mime4j.io.EOLConvertingInputStream.read()", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStream.java@org.apache.james.mime4j.io.LineReaderInputStream.LineReaderInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.isUsed()", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.read()", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.eof()", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.toString()", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.LineReaderInputStreamAdaptor(InputStream)", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.toString()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.isLastPart()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.MimeBoundaryInputStream(BufferedLineReaderInputStream,String)", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.calculateBoundaryLen()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.endOfStream()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.eof()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.hasData()", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/MimeBoundaryInputStream.java@org.apache.james.mime4j.io.MimeBoundaryInputStream.read()", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.getBytesLeft()", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.PartialInputStream(InputStream,long,long)", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.read()", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.available()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.getPosition()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.mark(int)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.close()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.available()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.PositionInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.reset()", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read()", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.truncate()", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.RootInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.getLineNumber()", "src/main/java/org/apache/james/mime4j/io/RootInputStream.java@org.apache.james.mime4j.io.RootInputStream.read(byte,int,int)"], "daf5a5002163f4cd660ed6599c1c05ea67dd7eb9": ["src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testRead()", "src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.readByOneByte(InputStream)", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testboundaryLongerThanBuffer()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.read(InputStream,int)", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "src/test/java/org/apache/james/mime4j/io/RootInputStreamTest.java@org.apache.james.mime4j.io.RootInputStreamTest.testReadManyBytes()", "src/test/java/org/apache/james/mime4j/io/RootInputStreamTest.java@org.apache.james.mime4j.io.RootInputStreamTest.testTruncate()", "src/test/java/org/apache/james/mime4j/io/RootInputStreamTest.java@org.apache.james.mime4j.io.RootInputStreamTest.testReadSingleByte()"], "390ef3448d8bc3f6e6f068523f1811ac76ac44c1": ["src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.writeToFile(String,String)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.writeToFile(Body,File)", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.suite()", "src/test/java/org/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.runTest()", "src/test/javorg/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.runTest()", "src/test/javorg/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.getStructure(Entity,String,String)", "src/test/javorg/mime4j/message/MessageParserTest.java@org.mime4j.message.MessageParserTest.suite()"], "edf9d0c30df285b7305c305df87ca0c373fe520a": ["src/main/javorg/apache/james/mime4j/RootInputStream.java@org.apache.james.mime4j.RootInputStream.read(byte)", "src/main/javorg/apache/james/mime4j/util/PartialInputStream.java@org.apache.james.mime4j.util.PartialInputStream.read(byte)", "src/main/javorg/apache/james/mime4j/util/PositionInputStream.java@org.apache.james.mime4j.util.PositionInputStream.read(byte)"], "c0d17139e1b14b5bad050d146ee26f7d465ba378": ["core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/java/org/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.parse(ByteSequence,String)", "core/src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.getParser()"], "fa6ce4d8ecece8219a7830bb7365e2e4f3466cda": ["src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.BinaryQuotedPrintableEncoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.BinaryQuotedPrintableEncoder(int)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.read()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.encode(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.write(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.read()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.plain(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.softBreak()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.write(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encodeQuotedPrintableBinary(InputStream,OutputStream)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.escape(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.flushOutput()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.encode(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.BinaryQuotedPrintableEncoder.plain(byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testLetterEncoding()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.check(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.assertEquals(byte,byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testEscapedSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(String,Charset)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.tearDown()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.setUp()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testPlainASCII()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testEncodeSpace()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.testPlainAsciiSoftBreak()", "src/test/java/org/apache/james/mime4j/util/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.util.QuotedPrintableEncodeTest.checkRoundtrip(String)"], "0e4a41e7248d054113e41bb5993bb6a2e17db0f7": ["examples/src/java/org/apache/james/mime4j/samples/transform/TransformMessage.java@org.apache.james.mime4j.samples.transform.TransformMessage.transform(Message)"], "b1dd73f2e03c602c3380f4bbdd74eab9922a9fca": ["src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.dispose()", "src/main/java/org/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setHeader(Header)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setSubType(String)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.getParent()", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.setParent(Entity)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.delete()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.delete()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.dispose()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.dispose()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testDisposeGetsPropagatedToBody()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testDisposedMessageThrowsException()", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.DummyBody.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testDeleteTempFile()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempFileStringString()", "src/test/javorg/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempFileStringString()"], "14052507d24ccd294eaeeac33bc2032408779593": ["src/main/java/org/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)", "src/main/javorg/apache/james/mime4j/field/address/MailboxList.java@org.apache.james.mime4j.field.address.MailboxList.MailboxList(ArrayList,boolean)"], "585502a2a3ece2962b2124c468a10ef9212657e8": ["dom/src/main/java/org/apache/james/mime4j/dom/MessageBuilderFactory.java@org.apache.james.mime4j.dom.MessageBuilderFactory.newInstance()", "dom/src/main/java/org/apache/james/mime4j/dom/ServiceLoader.java@org.apache.james.mime4j.dom.ServiceLoader.load(Class)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderFactoryImpl.java@org.apache.james.mime4j.message.MessageBuilderFactoryImpl.newMessageBuilder()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage()", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.newMessage(Message)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageBuilderFactoryTest.java@org.apache.james.mime4j.dom.MessageBuilderFactoryTest.testNewMessageBuilder()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageBuilderFactoryTest.java@org.apache.james.mime4j.dom.MessageBuilderFactoryTest.testNewInstance()"], "6c5738180e3ba944864e1cd1dcd927159f4cf23f": ["src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.message(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.AbstractEntity(BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.fillFieldBuffer()", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.parseField()", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.message(Event)", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.AbstractEntity(RootInputStream,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.BasicBufferingInputStream(InputBuffer)", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.markSupported()", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.read()", "src/main/java/org/apache/james/mime4j/BasicBufferingInputStream.java@org.apache.james.mime4j.BasicBufferingInputStream.close()", "src/main/javorg/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.read()", "src/main/javorg/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.BufferingInputStream(InputBuffer)", "src/main/javorg/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.markSupported()", "src/main/javorg/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/BufferingInputStream.java@org.apache.james.mime4j.BufferingInputStream.close()", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.eof()", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.read()", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.isUsed()", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.BufferingInputStreamAdaptor(InputStream)", "src/main/java/org/apache/james/mime4j/BufferingInputStreamAdaptor.java@org.apache.james.mime4j.BufferingInputStreamAdaptor.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.toByteArray()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.append(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.byteAt(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.ByteArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/ByteArrayBuffer.java@org.apache.james.mime4j.ByteArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(Object)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.isEmpty()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.indexOf(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.indexOf(int,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.toString()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.clear()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.ensureCapacity(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(char)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.substringTrimmed(int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.CharArrayBuffer(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.isFull()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(String)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.substring(int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(byte,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(CharArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.capacity()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.setLength(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(char,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(CharArrayBuffer)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.buffer()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.append(ByteArrayBuffer,int,int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.toCharArray()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.length()", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.expand(int)", "src/main/java/org/apache/james/mime4j/CharArrayBuffer.java@org.apache.james.mime4j.CharArrayBuffer.charAt(int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.toString()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.limit()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.charAt(int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.length()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.pos()", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.indexOf(byte,int,int)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.indexOf(byte)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.buf()", "src/main/javorg/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.length()", "src/main/javorg/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.toString()", "src/main/javorg/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.indexOf(byte)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipLineDelimiter()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasData()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.skipBoundary()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.hasData()", "src/main/javorg/apache/james/mime4j/MimeBoundaryInputStream.java@org.apache.james.mime4j.MimeBoundaryInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,InputStream,InputBuffer,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getLineNumber()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.clearMimeStream()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.clearMimeStream()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advance()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,InputStream,InputBuffer,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.doParse(InputStream,String)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.doParse(InputStream,String)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isWhitespace(char)", "src/test/java/org/apache/james/mime4j/BasicBufferingInputStreamTest.java@org.apache.james.mime4j.BasicBufferingInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/BasicBufferingInputStreamTest.java@org.apache.james.mime4j.BasicBufferingInputStreamTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/BasicBufferingInputStreamTest.java@org.apache.james.mime4j.BasicBufferingInputStreamTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/BufferingInputStreamAdaptorTest.java@org.apache.james.mime4j.BufferingInputStreamAdaptorTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/BufferingInputStreamAdaptorTest.java@org.apache.james.mime4j.BufferingInputStreamAdaptorTest.testBasicReadLine()", "src/test/java/org/apache/james/mime4j/BufferingInputStreamAdaptorTest.java@org.apache.james.mime4j.BufferingInputStreamAdaptorTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testInvalidInput()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testCharOutOfBound()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testBasicOperations()", "src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testPatternOutOfBound()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testReadEmptyLine()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReading()", "src/test/java/org/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testBasicReadLine()", "src/test/javorg/apache/james/mime4j/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testMultipartEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testRawEntity()", "src/test/javorg/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testMultipartEntity()", "src/test/javorg/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testSimpleEntity()", "src/test/javorg/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSimpleAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testInvalidAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendCharArrayAsAscii()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testInvalidAppend()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendEmptyCharArray()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendOneByte()", "src/test/java/org/apache/james/mime4j/TestByteArrayBuffer.java@org.apache.james.mime4j.TestByteArrayBuffer.testAppendNullCharArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.suite()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullByteArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testInvalidCharArrayAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSetInvalidLength()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testInvalidAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendSingleChar()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendString()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.TestCharArrayBuffer(String)", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendAsciiByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSetLength()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendCharArrayBuffer()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testExpandAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendISOByteArray()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testAppendNullString()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.main(String)", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testConstructor()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testIndexOf()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSubstringIndexOfOutBound()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSimpleAppend()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testEnsureCapacity()", "src/test/java/org/apache/james/mime4j/TestCharArrayBuffer.java@org.apache.james.mime4j.TestCharArrayBuffer.testSubstring()"], "110021c6a749b3473ccb11bcd5c75b9ca65b55fc": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)"], "316528d2b46815338c65049ddfb8bf33df670f64": ["src/main/javorg/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.setParent(Entity)", "src/main/javorg/apache/james/mime4j/message/AbstractBody.java@org.apache.james.mime4j.message.AbstractBody.dispose()", "src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setBody(Body)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setHeader(Header)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.addBodyPart(BodyPart)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setBodyParts(List)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setEpilogue(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.dispose()", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setPreamble(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setSubType(String)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.setParent(Entity)", "src/main/java/org/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileBinaryBody.java@org.apache.james.mime4j.message.TempFileBinaryBody.dispose()", "src/main/java/org/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.writeTo(OutputStream,int)", "src/main/javorg/apache/james/mime4j/message/TempFileTextBody.java@org.apache.james.mime4j.message.TempFileTextBody.dispose()", "src/test/javorg/apache/james/mime4j/message/MessageTest.java@org.apache.james.mime4j.message.MessageTest.testDisposedMessageThrowsException()"], "103a6912cc7cad2177db3e50006ec3d54bc4ab3b": ["src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getState()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getField()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.initHeaderParsing()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.parseField()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.monitor(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.message(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.stateToString(int)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.newBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.toString()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.AbstractEntity(RootInputStream,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.warn(Event)", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/AbstractEntity.java@org.apache.james.mime4j.AbstractEntity.debug(Event)", "src/main/java/org/apache/james/mime4j/EOFSensitiveInputStream.java@org.apache.james.mime4j.EOFSensitiveInputStream.EOFSensitiveInputStream(InputStream)", "src/main/java/org/apache/james/mime4j/EOFSensitiveInputStream.java@org.apache.james.mime4j.EOFSensitiveInputStream.read()", "src/main/java/org/apache/james/mime4j/EOFSensitiveInputStream.java@org.apache.james.mime4j.EOFSensitiveInputStream.isUsed()", "src/main/java/org/apache/james/mime4j/EOFSensitiveInputStream.java@org.apache.james.mime4j.EOFSensitiveInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/EOFSensitiveInputStream.java@org.apache.james.mime4j.EOFSensitiveInputStream.eof()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.equals(Object)", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.toString()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.hashCode()", "src/main/java/org/apache/james/mime4j/Event.java@org.apache.james.mime4j.Event.Event(String)", "src/main/java/org/apache/james/mime4j/InputBuffer.java@org.apache.james.mime4j.InputBuffer.clear()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMimeEntity()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.nextMessage()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,InputStream,InputBuffer,BodyDescriptor,int,int)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.MimeEntity(RootInputStream,InputStream,InputBuffer,BodyDescriptor,int,int,boolean,boolean)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.createMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advance()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.skipHeader(String)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getDataStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.getRecursionMode()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.clearMimeStream()", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.doParse(InputStream,String)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldName()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.next()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stateToString(int)", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseHeadless(InputStream,String)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldValue()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.read()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldName()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRecursionMode(int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.newBodyDescriptor(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.RawEntity(InputStream)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.hashCode()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.parseField()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.setParsingFieldState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.debug(Event)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Entity(Cursor,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Message(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseField()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.Event(String)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stateToString(int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParseBodyPartState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setParsingFieldState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.equals(Object)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.Message(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.equals(Object)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.toString()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.stop()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.Event(String)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getInputStream()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.initHeaderParsing()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.BodyPart.BodyPart(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.message(Event)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.read()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseMessage(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.BodyPart(Cursor,BodyDescriptor)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parse(InputStream)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getState()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getField()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.read()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.toString()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Message.read()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.warn(Event)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Event.hashCode()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.setRaw(boolean)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.monitor(Event)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.isRaw()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.next()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getBodyDescriptor()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.Entity(Cursor,BodyDescriptor,int,int)", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.RawEntity.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getFieldValue()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getBodyDescriptor()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getContentStream()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getFieldName()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getState()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.getField()", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.RawEntity(InputStream)", "src/main/java/org/apache/james/mime4j/RawEntity.java@org.apache.james.mime4j.RawEntity.advance()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.boundary(String)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advanceToBoundary()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(InputStream)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.stop()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.isEnded()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.root()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextMimePartCursor()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.moreMimeParts()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.advance()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.nextSection()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeQuotedPrintable()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.StreamCursor(StreamCursor,InputStream)", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.getLineNumber()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.rest()", "src/main/javorg/apache/james/mime4j/StreamCursor.java@org.apache.james.mime4j.StreamCursor.decodeBase64()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testSimpleEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testMultipartEntity()", "src/test/java/org/apache/james/mime4j/MimeEntityTest.java@org.apache.james.mime4j.MimeEntityTest.testRawEntity()", "src/test/java/org/apache/james/mime4j/MultipartTokensTest.java@org.apache.james.mime4j.MultipartTokensTest.testMultipartMessageWithoutHeader()", "src/test/java/org/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()", "src/test/javorg/apache/james/mime4j/StrictMimeTokenStreamTest.java@org.apache.james.mime4j.StrictMimeTokenStreamTest.testUnexpectedEndOfHeaders()"], "4cab2a8dd607acad024020b883707fdb4b684530": ["src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "src/test/javorg/apache/james/mime4j/field/contenttype/ContentTypeTest.java@org.apache.james.mime4j.field.contenttype.ContentTypeTest.testExceptionTree()", "src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()", "src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testExceptionTree()"], "4a9e578d7651bd2b829613b2a9e5af2fa0591140": ["src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)"], "4ab780bfb7cbd7b06be45c1a7b66bbddbd437997": ["dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setFlatMode(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setDecodeMonitor(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.setContentDecoding(boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilderImpl.java@org.apache.james.mime4j.message.MessageBuilderImpl.parse(InputStream,ParseParams,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,boolean,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MimeBuilder.java@org.apache.james.mime4j.message.MimeBuilder.parse(InputStream,MimeEntityConfig,BodyFactory,MutableBodyDescriptorFactory,ParseParams,DecodeMonitor)"], "37e7ad9614c90b334f1a42410960254f77160bc3": ["src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.newBodyDescriptor()", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetMimeType()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testAddField()"], "31420b00e7d20c5d3be737ee944fc186d80417e6": ["src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.getBytesLeft()", "src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read()", "src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.LimitedInputStream(InputStream,long)", "src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.enforceLimit()", "src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.skip(long)", "src/main/javorg/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.skip(long)", "src/main/javorg/apache/james/mime4j/io/PartialInputStream.java@org.apache.james.mime4j.io.PartialInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "src/main/java/org/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "src/main/javorg/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.read(byte,int,int)", "src/main/javorg/apache/james/mime4j/io/PositionInputStream.java@org.apache.james.mime4j.io.PositionInputStream.skip(long)", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getLimitedContentStream()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getContentStream()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.getContentStream()", "src/main/javorg/apache/james/mime4j/parser/MimeEntity.java@org.apache.james.mime4j.parser.MimeEntity.advanceToBoundary()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.setMaxContentLen(long)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.MimeEntityConfig()", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.getMaxContentLen()", "src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "src/test/java/org/apache/james/mime4j/parser/MimeEntityTest.java@org.apache.james.mime4j.parser.MimeEntityTest.testMaxContentLimitCheck()"], "8415f921fc92246301831e7284094c547dda771c": ["benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmark/src/main/javorg/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmark/src/main/javorg/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmark/src/main/javorg/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmark/src/main/java/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "benchmark/src/main/javorg/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.main(String)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.encode(byte)", "benchmark/src/main/java/org/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.testDecode(byte,byte)", "benchmark/src/main/javorg/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.encode(byte)", "benchmark/src/main/javorg/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.testDecode(byte,byte)", "benchmark/src/main/javorg/apache/james/mime4j/QuotedPrintableInputStreamBench.java@org.apache.james.mime4j.QuotedPrintableInputStreamBench.main(String)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQBinary(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeB(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeQ(InputStream,OutputStream)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.copy(InputStream,OutputStream)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testBase64Encoder()", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testBase64OutputStream()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.encodeStream(OutputStream,String,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageWriter.java@org.apache.james.mime4j.message.DefaultMessageWriter.encodeStream(OutputStream,String,boolean)", "storage/src/main/java/org/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "storage/src/main/javorg/apache/james/mime4j/storage/AbstractStorageProvider.java@org.apache.james.mime4j.storage.AbstractStorageProvider.store(InputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.writeTo(OutputStream)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBinaryBody.java@org.apache.james.mime4j.storage.StorageBinaryBody.writeTo(OutputStream)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)", "storage/src/test/java/org/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testStore(StorageProvider,int)", "storage/src/test/javorg/apache/james/mime4j/storage/StorageProviderTest.java@org.apache.james.mime4j.storage.StorageProviderTest.testCreateStorageOutputStream(StorageProvider,int)"], "2c8ac522b6c59e9099a9b4edd7c3b5c0b0375c81": ["core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/java/org/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.parse(InputStream)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,boolean,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser()", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/parser/MimeStreamParser.java@org.apache.james.mime4j.parser.MimeStreamParser.MimeStreamParser(MimeEntityConfig,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.AbstractEntity(MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/DefaultBodyDescriptor.java@org.apache.james.mime4j.stream.DefaultBodyDescriptor.addField(RawField)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.nextMimeEntity(EntityState,EntityState,InputStream)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,MutableBodyDescriptor)", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.MimeEntity(LineNumberSource,InputStream,MimeEntityConfig,EntityState,EntityState,MutableBodyDescriptor)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,MutableBodyDescriptorFactory)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.parseHeadless(InputStream,String)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldParser,MutableBodyDescriptorFactory)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.doParse(InputStream,MutableBodyDescriptor,EntityState)", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.MimeTokenStream(MimeEntityConfig,DecodeMonitor,FieldBuilder,FieldParser,MutableBodyDescriptorFactory)", "core/src/test/java/org/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "core/src/test/javorg/apache/james/mime4j/stream/MimeEntityTest.java@org.apache.james.mime4j.stream.MimeEntityTest.testSkipFields()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/javorg/apache/james/mime4j/message/DefaultMessageBuilder.java@org.apache.james.mime4j.message.DefaultMessageBuilder.parseMessage(InputStream)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.EntityBuilder(Entity,DecodeMonitor,FieldParser,BodyFactory)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,FieldParser,boolean,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.newChild()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMD5(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLanguage(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDescription(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentDisposition(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.MaximalBodyDescriptor()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseLocation(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseContentId(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptor.java@org.apache.james.mime4j.message.MaximalBodyDescriptor.parseMimeVersion(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory(FieldParser,boolean)", "dom/src/main/java/org/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.MaximalBodyDescriptorFactory()", "dom/src/main/javorg/apache/james/mime4j/message/MaximalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MaximalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getParseAllFields()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.getFieldParser()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.newChild()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor()", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(RawField)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor(BodyDescriptor,FieldParser,boolean,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentLength(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.newChild()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.MinimalBodyDescriptor()", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentType(Field)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptor.java@org.apache.james.mime4j.message.MinimalBodyDescriptor.parseContentTransferEncoding(Field)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.MinimalBodyDescriptorFactory(FieldParser,boolean)", "dom/src/main/javorg/apache/james/mime4j/message/MinimalBodyDescriptorFactory.java@org.apache.james.mime4j.message.MinimalBodyDescriptorFactory.newInstance(DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/java/org/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.setUp()", "dom/src/test/javorg/apache/james/mime4j/message/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.message.MaximalBodyDescriptorTest.newBodyDescriptor(BodyDescriptor)"], "63f5d5b457ee3ffc8e701c9e122ed84180ad9b78": ["core/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)", "core/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.parse(String,String,ByteSequence)"], "733c5a703ab43c22f56369cb454348cfb6fa81f4": ["src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream)"], "898a22de36e33d77fbdefe55da1487f3d81e73d8": ["src/main/javorg/apache/james/mime4j/util/ByteArrayBuffer.java@org.apache.james.mime4j.util.ByteArrayBuffer.append(char,int,int)", "src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testInvalidAppendCharArrayAsAscii()", "src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendEmptyCharArray()", "src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendNullCharArray()", "src/test/javorg/apache/james/mime4j/util/TestByteArrayBuffer.java@org.apache.james.mime4j.util.TestByteArrayBuffer.testAppendCharArrayAsAscii()"], "fce7d163c91d89342a2a60e0a5c425ac47a3140e": ["core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testRawBodyParseEmptyParam()"], "5acd2cf3c221b88e6e14cc4d18b2f4553d430f60": ["dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()"], "d3f16da0148caa8d8b626b92d0c0b52d0d5e80f4": ["src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.fold(String,int)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.fold(String,int)", "src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()", "src/test/javorg/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testFold()"], "4097b06566751662e5a3d661768e886a558d6eeb": ["src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/javorg/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.readLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptor.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptor.doReadLine(ByteArrayBuffer)", "src/main/java/org/apache/james/mime4j/io/MaxLineLimitException.java@org.apache.james.mime4j.io.MaxLineLimitException.MaxLineLimitException(String)", "src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "src/test/javorg/apache/james/mime4j/stream/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "src/test/java/org/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "src/test/javorg/apache/james/mime4j/stream/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.stream.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()"], "8e6c18914b7e303535899095b203830afca92162": ["src/test/java/org/apache/james/mime4j/stream/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.stream.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()"], "7daa939a8e4991e021d98098a1d3ebb710c4e669": ["src/main/java/org/mime4j/message/BodyPart.java@org.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/javorg/mime4j/message/BodyPart.java@org.mime4j.message.BodyPart.writeTo(OutputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.MessageBuilder.raw(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.raw(InputStream)", "src/main/java/org/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)", "src/main/javorg/mime4j/message/Message.java@org.mime4j.message.Message.writeTo(OutputStream)"], "ded6feba4849300d1634f2956b3bcab624391019": ["src/main/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/main/javorg/apache/james/mime4j/decoder/QuotedPrintableInputStream.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStream.fillBuffer()", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.toInt(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.Base64Encoder.toInt(byte)", "src/main/javorg/apache/james/mime4j/util/CodecUtil.java@org.apache.james.mime4j.util.CodecUtil.toInt(byte)", "src/main/java/org/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(char)", "src/main/javorg/apache/james/mime4j/util/MessageUtils.java@org.apache.james.mime4j.util.MessageUtils.isASCII(char)", "src/test/java/org/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)", "src/test/javorg/apache/james/mime4j/EncodeUtils.java@org.apache.james.mime4j.EncodeUtils.toInt(byte)"], "f7f9a0ba4f48f80bcd181eb9c5e435368eb8d66f": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isBase64Encoding(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.isQuotedPrintableEncoded(String)"], "6e85f015b997e563f2367fae92d30e65b0603811": ["src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.parse(Class,String,String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.date(String,String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentTransferEncoding(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.subject(String)", "src/main/javorg/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)"], "9e438a0458c30b573b81ddf0c11dafdfb81969a8": ["core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copy(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyTrimmed(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyEscaped(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyEscaped(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copyTrimmed(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.copy(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(Charset,ByteSequence,int,int)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(Charset,String)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence,int,int)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.decode(ByteSequence)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(String)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.encode(Charset,String)", "dom/src/test/java/org/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()", "dom/src/test/javorg/apache/james/mime4j/dom/HeaderTest.java@org.apache.james.mime4j.dom.HeaderTest.testWriteSpecialCharacters()"], "b26da87a91434425eacc11942a17f929422f5f1c": ["src/test/java/org/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()", "src/test/javorg/apache/james/mime4j/decoder/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.decoder.QuotedPrintableInputStreamTest.testDecode()"], "7dc58eb8ab952be26c85f6e806ba44b362430a23": ["core/src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "core/src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(String,Charset)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.createAscii(String)", "core/src/main/javorg/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.createAscii(String)", "core/src/main/javorg/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(String,Charset)", "core/src/main/java/org/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getReader()", "core/src/main/javorg/apache/james/mime4j/stream/MimeTokenStream.java@org.apache.james.mime4j.stream.MimeTokenStream.getReader()", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiByteArray(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(ByteArrayBuffer,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,int,int,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toByteArray(String,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,Charset)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiByteArray(String)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,Charset)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(byte,int,int,Charset)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toByteArray(String,Charset)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toString(ByteArrayBuffer,Charset)", "core/src/main/javorg/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(ByteArrayBuffer)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(byte)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(byte)", "core/src/test/javorg/apache/james/mime4j/ExampleMail.java@org.apache.james.mime4j.ExampleMail.latin1(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.readText(InputStream)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.readText(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "core/src/test/java/org/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/javorg/apache/james/mime4j/parser/MimeStreamParserExampleMessagesTest.java@org.apache.james.mime4j.parser.MimeStreamParserExampleMessagesTest.runTest()", "core/src/test/java/org/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.setUp()", "core/src/test/javorg/apache/james/mime4j/stream/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.stream.MimeTokenNoRecurseTest.setUp()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testShouldSupplyInputStreamForSimpleBody()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartStreamTest.java@org.apache.james.mime4j.stream.MultipartStreamTest.testInputStreamShouldReadOnlyMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/java/org/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessageWithEmbeddedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMessagesWithEmbeddedQuotedPrintableEncodedMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseMoreComplexMessage()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testMultipartMessageWithoutHeader()", "core/src/test/javorg/apache/james/mime4j/stream/MultipartTokensTest.java@org.apache.james.mime4j.stream.MultipartTokensTest.testShouldParseSimpleMessage()", "core/src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookup()", "core/src/test/javorg/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testCharsetLookup()", "dom/src/main/java/org/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String)", "dom/src/main/javorg/apache/james/mime4j/message/BasicBodyFactory.java@org.apache.james.mime4j.message.BasicBodyFactory.textBody(String)", "dom/src/main/java/org/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getReader()", "dom/src/main/javorg/apache/james/mime4j/message/BasicTextBody.java@org.apache.james.mime4j.message.BasicTextBody.getReader()", "dom/src/main/java/org/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()", "dom/src/main/javorg/apache/james/mime4j/message/StringBody.java@org.apache.james.mime4j.message.StringBody.getInputStream()", "dom/src/test/java/org/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/ExampleMessagesRoundtripTest.java@org.apache.james.mime4j.dom.ExampleMessagesRoundtripTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/java/org/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.getStructure(Entity,String,String)", "dom/src/test/javorg/apache/james/mime4j/dom/MessageParserTest.java@org.apache.james.mime4j.dom.MessageParserTest.runTest()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.bufferedReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/java/org/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testReadZero()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testMarkReset()", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.singleByteReadTest(String)", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.bufferedReadTest(String)", "dom/src/test/javorg/apache/james/mime4j/message/StringInputStreamTest.java@org.apache.james.mime4j.message.StringInputStreamTest.testSkip()", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream)", "storage/src/main/java/org/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(InputStream)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(Storage)", "storage/src/main/javorg/apache/james/mime4j/storage/StorageBodyFactory.java@org.apache.james.mime4j.storage.StorageBodyFactory.textBody(String)", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageTextBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStringTextBody()", "storage/src/test/java/org/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageTextBody()", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStorageTextBody()", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testCopyStringTextBody()", "storage/src/test/javorg/apache/james/mime4j/storage/SingleBodyCopyTest.java@org.apache.james.mime4j.storage.SingleBodyCopyTest.testDisposeStorageTextBody()"], "4891aa4f5d4ca8211dbd061034c7f3ffc2c6cacc": ["src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/javorg/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.Header(InputStream)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.endHeader()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startBodyPart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.field(String)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endBodyPart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startHeader()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMessage()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.expect(Class)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.raw(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.epilogue(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endMultipart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.field(String)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.endHeader()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMessage()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.startMultipart(BodyDescriptor)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.MessageBuilder(Entity)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.raw(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.body(BodyDescriptor,InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMultipart()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startHeader()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startBodyPart()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMultipart(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endHeader()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(String)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.startMessage()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.expect(Class)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endBodyPart()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.endMessage()", "src/test/java/org/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()", "src/test/javorg/apache/james/mime4j/field/FieldTest.java@org.apache.james.mime4j.field.FieldTest.testGetName()"], "9e764429c88e77a226c4629b5c77045a429f3cf7": ["core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.read(byte,int,int)", "core/src/main/javorg/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.read(byte,int,int)", "core/src/test/java/org/apache/james/mime4j/io/TextInputStreamTest.java@org.apache.james.mime4j.io.TextInputStreamTest.testReadZero2()"], "3a0f3b4383219119d1127e382d7486bf0e9d932c": ["core/src/main/java/org/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseBody()", "core/src/main/javorg/apache/james/mime4j/parser/RawField.java@org.apache.james.mime4j.parser.RawField.parseBody()", "core/src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)"], "87b7e75839a628b9121ccc8b443d72d29fcdbbdb": ["benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.initData(int)", "benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.compare(byte,byte)", "benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.main(String)", "benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.initData(int)"], "2c24c9c9feb9d2b5fc71f7570c0a540a8def4937": ["core/src/main/java/org/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/javorg/apache/james/mime4j/stream/AbstractEntity.java@org.apache.james.mime4j.stream.AbstractEntity.nextField()", "core/src/main/java/org/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/javorg/apache/james/mime4j/stream/DefaultFieldBuilder.java@org.apache.james.mime4j.stream.DefaultFieldBuilder.build()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.toString()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getBody()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getRaw()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(String,String)", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.isUsedObsoleteSyntax()", "core/src/main/java/org/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence,int,boolean,String,String)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.parseBody()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(String,String)", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.isObsoleteSyntax()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getName()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getRaw()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.getBody()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.toString()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.parseName()", "core/src/main/javorg/apache/james/mime4j/stream/RawField.java@org.apache.james.mime4j.stream.RawField.RawField(ByteSequence)", "core/src/main/java/org/apache/james/mime4j/stream/RawFieldParser.java@org.apache.james.mime4j.stream.RawFieldParser.parseField(ByteSequence)", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testAddField()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetContentLength()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetParameters()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/java/org/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetMimeType()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetParameters()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testAddField()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetMimeType()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.TestField.TestField(String,String)", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testGetContentLength()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testParameters()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoDefaultToUsAsciiWhenUntyped()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.testDoNotDefaultToUsAsciiForNonTextTypes()", "core/src/test/javorg/apache/james/mime4j/stream/BaseTestForBodyDescriptors.java@org.apache.james.mime4j.stream.BaseTestForBodyDescriptors.TestField(String,String)", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax1()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingInvalidSyntax2()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testBasicParsing()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldParserTest.java@org.apache.james.mime4j.stream.RawFieldParserTest.testParsingObsoleteSyntax()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldTest.java@org.apache.james.mime4j.stream.RawFieldTest.testPublicConstructor()", "core/src/test/java/org/apache/james/mime4j/stream/RawFieldTest.java@org.apache.james.mime4j.stream.RawFieldTest.testPrivateConstructor()", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(RawField,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(ByteSequence,DecodeMonitor)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String)", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.parse(String,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(RawField)", "dom/src/main/javorg/apache/james/mime4j/message/EntityBuilder.java@org.apache.james.mime4j.message.EntityBuilder.field(RawField)"], "f6835ab6d05e284b2ee42ce7ba3543ac81d98946": ["src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isTo()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isSubject()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isFrom()", "src/main/javorg/apache/james/mime4j/field/AbstractField.java@org.apache.james.mime4j.field.AbstractField.isContentType()"], "e0428ebec3f9d2c60434f2268e752a0a607e882a": ["src/main/java/org/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "src/main/javorg/apache/james/mime4j/descriptor/MaximalBodyDescriptor.java@org.apache.james.mime4j.descriptor.MaximalBodyDescriptor.parseLanguage(String)", "src/main/javorg/apache/james/mime4j/field/ContentTypeField.java@org.apache.james.mime4j.field.ContentTypeField.parse()"], "b54ac4242ded24afbb20262f97c13efde32f8de2": ["core/src/main/java/org/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()", "core/src/main/javorg/apache/james/mime4j/stream/MimeEntity.java@org.apache.james.mime4j.stream.MimeEntity.createMimePartStream()"], "8fc586ba646f6f630c7560433ee87a88736755f1": ["src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.formatDate(Date,TimeZone)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.formatDate(Date,TimeZone)"], "c8e2d6b0cfdaa6b647715ea6e2d997d7ae115a1c": ["src/main/java/org/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.dispose()"], "5f88fb8f7f23427cc4021e26029b6ea6824e891f": ["src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getEncodedString()", "src/main/java/org/apache/james/mime4j/field/address/Group.java@org.apache.james.mime4j.field.address.Group.getDisplayString(boolean)", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()", "src/test/java/org/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupSerialization()", "src/test/javorg/apache/james/mime4j/field/address/AddressTest.java@org.apache.james.mime4j.field.address.AddressTest.testGroupGetEncodedString()"], "a6da12c425491ec5a86da2ad5ef0ef53343e6350": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.replaceUnderscores(String)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeB(String,String)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)"], "3a78b0720d12a25fd2a328b169f136fcd66c24df": ["src/test/java/org/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(Body,File)", "src/test/javorg/apache/james/mime4j/message/MessageParserTest.java@org.apache.james.mime4j.message.MessageParserTest.writeToFile(Body,File)"], "0136b250632a2d63f1935c9987daf1142dd280d2": ["dom/src/main/java/org/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.getBoundary(ContentTypeField)", "dom/src/main/javorg/apache/james/mime4j/message/MimeWriter.java@org.apache.james.mime4j.message.MimeWriter.getBoundary(ContentTypeField)"], "6f48e58c586b47c26afce06d34b5d6b368d7b532": ["src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String,String)", "src/main/javorg/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String,String)", "src/main/javorg/apache/james/mime4j/field/Field.java@org.apache.james.mime4j.field.Field.parse(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold0(String,int)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.unfold(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/test/java/org/apache/james/mime4j/util/MimeUtilTest.java@org.apache.james.mime4j.util.MimeUtilTest.testUnfold()"], "966a27cae8fe4c493744bf3090858ad5d3b720e5": ["src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldName()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.parseField()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.getFieldValue()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseField()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.Entity.parseField()", "src/main/javorg/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.parseField()"], "b2fa65e335f00e274d25b83e2e279bd3c2b07895": ["src/main/java/org/mime4j/util/CharsetUtil.java@org.mime4j.util.CharsetUtil.getCharset(String)"], "e72bbd9058b317e5d765b6ad97fe90e86ad073e7": ["src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.getOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.createTempFile()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempPath(String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.SimpleTempStorage()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.getAbsolutePath()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempFile()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.SimpleTempFile(File)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempFile(String,String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.createTempPath(String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.getOutputStream()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.SimpleTempPath(String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.length()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.length()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempPath()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.isInMemory()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempFile(String,String,boolean)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.isInMemory()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempFile.getInputStream()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempPath(TempPath,String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.createTempPath()", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.createTempFile(TempPath,String,String)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempPath.SimpleTempPath(File)", "src/main/java/org/apache/james/mime4j/message/storage/SimpleTempStorage.java@org.apache.james.mime4j.message.storage.SimpleTempStorage.getRootTempPath()", "src/main/java/org/apache/james/mime4j/message/storage/TempStorage.java@org.apache.james.mime4j.message.storage.TempStorage.setInstance(TempStorage)", "src/main/java/org/apache/james/mime4j/message/storage/TempStorage.java@org.apache.james.mime4j.message.storage.TempStorage.getInstance()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempFile()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempPath()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempPathString()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testCreateTempFileStringString()", "src/test/java/org/apache/james/mime4j/message/storage/SimpleTempStorageTest.java@org.apache.james.mime4j.message.storage.SimpleTempStorageTest.testGetRootTempPath()"], "ec79f41b3667e63fdc085081e8f15b120a54ecd3": ["core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeBase64(String,DecodeMonitor)", "core/src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQuotedPrintable(String,DecodeMonitor)", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.available()", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.BinaryInputStream(ByteBuffer)", "core/src/main/java/org/apache/james/mime4j/io/BinaryInputStream.java@org.apache.james.mime4j.io.BinaryInputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(String,Charset)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(ByteBuffer)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.createAscii(String)", "core/src/main/java/org/apache/james/mime4j/io/InputStreams.java@org.apache.james.mime4j.io.InputStreams.create(byte)", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.read(byte,int,int)", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.skip(long)", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.read()", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.fillBuffer()", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.TextInputStream(CharSequence,Charset,int)", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.available()", "core/src/main/java/org/apache/james/mime4j/io/TextInputStream.java@org.apache.james.mime4j.io.TextInputStream.read(byte)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiByteArray(String)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(ByteArrayBuffer)", "core/src/main/java/org/apache/james/mime4j/util/ContentUtil.java@org.apache.james.mime4j.util.ContentUtil.toAsciiString(byte,int,int)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.create(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.create(byte)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.createStrict(String)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.readBin(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.readText(InputStream)", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedPad()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.toString(byte)", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.read(InputStream)", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecodePrematureClose()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testDecode()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadOffset()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.fromString(String)", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testReadInt()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testLenientUnexpectedEof()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testRoundtripWithVariousBufferSizes()", "core/src/test/javorg/apache/james/mime4j/codec/Base64InputStreamTest.java@org.apache.james.mime4j.codec.Base64InputStreamTest.testStrictUnexpectedPad()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/java/org/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingOutputStream(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testCopy()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.roundtripUsingEncoder(String)", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableLargeInput()", "core/src/test/javorg/apache/james/mime4j/codec/CodecUtilTest.java@org.apache.james.mime4j.codec.CodecUtilTest.testEncodeQuotedPrintableNonAsciiChars()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.check(byte,byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpacesBeforeEOL()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream6()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.readText(InputStream)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testCanonicalSoftBreakDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream5()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidCR()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakLoneLFDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeTrailingBlanks()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream6()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSoftBreakTrailingBalnksDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeBufferWrapping()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBasicDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream2()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenEscapedEQDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream1()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testEscapedEQDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream3()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodeEndOfStream4()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.read(InputStream)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testInvalidValueDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testSpacesBeforeEOL()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testBrokenSoftBreakDecode()", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableInputStreamTest.java@org.apache.james.mime4j.codec.QuotedPrintableInputStreamTest.testDecodePrematureClose()", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(byte,byte)", "core/src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(byte)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.create(String)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.create(byte)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching2()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching3()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching1()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternMatching4()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testInvalidInput()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testPatternOutOfBound()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.test0xFFInBinaryStream()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamBufferTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamBufferTest.testCharOutOfBound()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.create(byte,int)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.create(String,int)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.create(byte,int,int)", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicOperations()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/BufferedLineReaderInputStreamTest.java@org.apache.james.mime4j.io.BufferedLineReaderInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/java/org/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertCR(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertLF(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.testConvertBoth(String,String)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.toString(byte,int)", "core/src/test/javorg/apache/james/mime4j/io/EOLConvertingInputStreamTest.java@org.apache.james.mime4j.io.EOLConvertingInputStreamTest.fromString(String)", "core/src/test/java/org/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/javorg/apache/james/mime4j/io/LimitedInputStreamTest.java@org.apache.james.mime4j.io.LimitedInputStreamTest.testUpToLimitRead()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/javorg/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadManyBytes()", "core/src/test/javorg/apache/james/mime4j/io/LineNumberInputStreamTest.java@org.apache.james.mime4j.io.LineNumberInputStreamTest.testReadSingleByte()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.create(String)", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.create(byte,int)", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.create(byte)", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testReadEmptyLineMaxLimit()", "core/src/test/javorg/apache/james/mime4j/io/LineReaderInputStreamAdaptorTest.java@org.apache.james.mime4j.io.LineReaderInputStreamAdaptorTest.testBasicOperations()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.create(String,int)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.create(byte,int)", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/java/org/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testPrefixIsBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testHasMoreParts()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer2()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testCRLFPrecedingBoundary()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testReadEmptyLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingSmallBuffer1()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadingByOneByte()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testBasicReadLine()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testLenientLineDelimiterReading()", "core/src/test/javorg/apache/james/mime4j/io/MimeBoundaryInputStreamTest.java@org.apache.james.mime4j.io.MimeBoundaryInputStreamTest.testImmediateBoundary()", "core/src/test/java/org/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()", "core/src/test/javorg/apache/james/mime4j/io/PositionInputStreamTest.java@org.apache.james.mime4j.io.PositionInputStreamTest.testPositionCounting()"], "58f05c63cd48120f56c5a84cc9573e6be1399043": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getField(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getField(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getFields(String,Class)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getField(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.setField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.removeFields(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractHeader.java@org.apache.james.mime4j.message.AbstractHeader.getFields(String)", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testFieldOperations()", "dom/src/test/javorg/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testFieldOperations()", "dom/src/test/java/org/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetTextBody()", "dom/src/test/javorg/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetTextBody()", "dom/src/test/javorg/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetBinaryBody()"], "942fc3eba9c3cd6643b39b2002fe33b4a4e93d85": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.determineCharset(String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(Storage)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(String)", "src/main/javorg/apache/james/mime4j/message/BodyFactory.java@org.apache.james.mime4j.message.BodyFactory.textBody(InputStream)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/main/javorg/apache/james/mime4j/message/Multipart.java@org.apache.james.mime4j.message.Multipart.writeTo(OutputStream,Mode)", "src/main/java/org/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/javorg/apache/james/mime4j/parser/AbstractEntity.java@org.apache.james.mime4j.parser.AbstractEntity.fillFieldBuffer()", "src/main/java/org/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getReader()", "src/main/javorg/apache/james/mime4j/parser/MimeTokenStream.java@org.apache.james.mime4j.parser.MimeTokenStream.getReader()", "src/main/java/org/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.substringTrimmed(int,int)", "src/main/javorg/apache/james/mime4j/util/CharArrayBuffer.java@org.apache.james.mime4j.util.CharArrayBuffer.substringTrimmed(int,int)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(char)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isASCII(String)", "src/main/java/org/apache/james/mime4j/util/CharsetUtil.java@org.apache.james.mime4j.util.CharsetUtil.isWhitespace(char)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeEncodedWordForceCharset()", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "src/test/javorg/apache/james/mime4j/codec/QuotedPrintableEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "src/test/java/org/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.checkRoundtrip(String)", "src/test/javorg/apache/james/mime4j/codec/QuotedPrintableTextEncodeTest.java@org.apache.james.mime4j.codec.QuotedPrintableTextEncodeTest.check(String,String)", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInStrictMode()", "src/test/javorg/apache/james/mime4j/message/HeaderTest.java@org.apache.james.mime4j.message.HeaderTest.testWriteInLenientMode()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "src/test/java/org/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "src/test/javorg/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStorageTextBody()", "src/test/javorg/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testDisposeStorageTextBody()", "src/test/javorg/apache/james/mime4j/message/SingleBodyCopyTest.java@org.apache.james.mime4j.message.SingleBodyCopyTest.testCopyStringTextBody()", "src/test/java/org/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.setUp()", "src/test/javorg/apache/james/mime4j/parser/MimeTokenNoRecurseTest.java@org.apache.james.mime4j.parser.MimeTokenNoRecurseTest.setUp()", "src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testAllASCII()", "src/test/java/org/apache/james/mime4j/util/CharsetUtilTest.java@org.apache.james.mime4j.util.CharsetUtilTest.testNonASCII()"], "c0c7c23367d4c232ea1eb3391cd734e0d2c55a28": ["dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddressWithUnquotedEmailAddressInName()", "dom/src/test/java/org/apache/james/mime4j/field/address/DefaultAddressBuilderTest.java@org.apache.james.mime4j.field.address.DefaultAddressBuilderTest.testParseAddressWithQuotedEmailAddressInName()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressWithUnquotedEmailAddressInName()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressWithQuotedEmailAddressInName()"], "94f24e262d2f4b8dcdcb740571337dd35bd2313b": ["src/main/java/org/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advance()", "src/main/javorg/apache/james/mime4j/MimeEntity.java@org.apache.james.mime4j.MimeEntity.advance()", "src/main/java/org/apache/james/mime4j/MimeTokenStream.java@org.apache.james.mime4j.MimeTokenStream.doParse(InputStream,String)"], "f5e5db7f5aa9b6b341dfa3f3ab226e4cef635791": ["storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "storage/src/main/java/org/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "storage/src/main/javorg/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorage.delete()", "storage/src/main/javorg/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.delete()", "storage/src/main/javorg/apache/james/mime4j/storage/TempFileStorageProvider.java@org.apache.james.mime4j.storage.TempFileStorageProvider.TempFileStorageProvider(String,String,File)"], "3caff3d91781cd681dba79027bc63a00debadcfe": ["core/src/main/java/org/apache/james/mime4j/io/BufferedLineReaderInputStream.java@org.apache.james.mime4j.io.BufferedLineReaderInputStream.toString()"], "f3d79446a396bc3218024d63e5f846b40e32c127": ["src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isToken(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isAtomPhrase(String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.encodeHeaderParameter(String,String)", "src/main/java/org/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isDotAtomText(String)", "src/main/javorg/apache/james/mime4j/codec/EncoderUtil.java@org.apache.james.mime4j.codec.EncoderUtil.isAtomPhrase(String)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.contentType(String,Map)", "src/main/java/org/apache/james/mime4j/field/Fields.java@org.apache.james.mime4j.field.Fields.isValidMimeType(String)", "src/test/java/org/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()", "src/test/javorg/apache/james/mime4j/codec/EncoderUtilTest.java@org.apache.james.mime4j.codec.EncoderUtilTest.testEncodeAddressDisplayName()"], "a40bd691714838f141b12f3152b9195bbe4a0509": ["src/test/java/org/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParse()", "src/test/javorg/apache/james/mime4j/MimeStreamParserTest.java@org.apache.james.mime4j.MimeStreamParserTest.testParse()"], "188dbdcb15c5d23b5b9f99b427fb91d4de13a1a5": ["benchmark/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.testDecode(byte,byte)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.main(String)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.initData(int)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.compare(byte,byte)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64InputStreamBench.java@org.apache.james.mime4j.Base64InputStreamBench.encode(byte)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.main(String)", "benchmark/benchmarks/src/org/apache/james/mime4j/Base64OutputStreamBench.java@org.apache.james.mime4j.Base64OutputStreamBench.initData(int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MessageTest.run(byte,int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.loadMessage(String)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.MimeTokenStreamTest.run(byte,int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.AbstractContentHandlerTest.run(byte,int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.run(byte,int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.createTest(int)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.LongMultipartReadBench.main(String)", "benchmark/benchmarks/src/org/apache/james/mime4j/LongMultipartReadBench.java@org.apache.james.mime4j.SimpleContentHandlerTest.run(byte,int)"], "48959f0c1e7643f702eb14b0df4d032c76447133": ["src/test/java/org/apache/james/mime4j/InputBufferTest.java@org.apache.james.mime4j.InputBufferTest.testPatternMatching4()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.checkInputStream(String)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.nextIs(int)", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenFlatShouldIgnoreInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.setUp()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.testWhenFlatAtStartShouldIgnoreMultipartStructure()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest._testWhenRecurseShouldVisitInnerMailsAndInnerMultiparts()", "src/test/java/org/apache/james/mime4j/MimeTokenEmbeddedMessageTest.java@org.apache.james.mime4j.MimeTokenEmbeddedMessageTest.tearDown()"], "42c59dd36d7179601ede6eb05b9a7aa4d0a19551": ["src/main/java/org/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "src/main/javorg/apache/james/mime4j/codec/DecoderUtil.java@org.apache.james.mime4j.codec.DecoderUtil.decodeQ(String,String)", "src/main/java/org/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/javorg/apache/james/mime4j/message/Header.java@org.apache.james.mime4j.message.Header.toString()", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.preamble(InputStream)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.epilogue(InputStream)", "src/main/java/org/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "src/main/javorg/apache/james/mime4j/parser/MimeEntityConfig.java@org.apache.james.mime4j.parser.MimeEntityConfig.toString()", "src/main/java/org/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)", "src/main/javorg/apache/james/mime4j/util/MimeUtil.java@org.apache.james.mime4j.util.MimeUtil.getHeaderParams(String)"], "7a54eebe73a582ee9ead995a4e783d3e190fcf47": ["dom/src/test/java/org/apache/james/mime4j/field/DateTimeFieldImplTest.java@org.apache.james.mime4j.field.DateTimeFieldImplTest.parseShouldAddPreviousCenturyWhen2DigitsAndMoreThan70s()", "dom/src/test/java/org/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()", "dom/src/test/javorg/apache/james/mime4j/field/datetime/DateTimeTest.java@org.apache.james.mime4j.field.datetime.DateTimeTest.testNormalDate()"], "422526fc0a799e7a0af72831bd4802f79aaf9df6": ["src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.parseMD5(String)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.MaximalBodyDescriptor(BodyDescriptor)", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.getContentMD5Raw()", "src/main/java/org/apache/james/mime4j/MaximalBodyDescriptor.java@org.apache.james.mime4j.MaximalBodyDescriptor.addField(String,String)", "src/test/java/org/apache/james/mime4j/MaximalBodyDescriptorTest.java@org.apache.james.mime4j.MaximalBodyDescriptorTest.testContentMD5Url()"], "365bd5ae2fed0c41ba74d773b63d770256df0b38": ["src/test/java/org/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()", "src/test/javorg/apache/james/mime4j/BodyDescriptorTest.java@org.apache.james.mime4j.BodyDescriptorTest.testGetParameters()"], "95bbdeba22f8d35793dd0d9e6733efa0b3c17e6d": ["dom/src/main/java/org/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse()", "dom/src/main/javorg/apache/james/mime4j/field/ContentLanguageFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLanguageFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.getLocation()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.ContentLocationFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/ContentLocationFieldLenientImpl.java@org.apache.james.mime4j.field.ContentLocationFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/DefaultFieldParser.java@org.apache.james.mime4j.field.DefaultFieldParser.DefaultFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.DelegatingFieldParser(FieldParser)", "dom/src/main/java/org/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "dom/src/main/javorg/apache/james/mime4j/field/DelegatingFieldParser.java@org.apache.james.mime4j.field.DelegatingFieldParser.getParser(String)", "dom/src/main/java/org/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/javorg/apache/james/mime4j/field/LenientFieldParser.java@org.apache.james.mime4j.field.LenientFieldParser.LenientFieldParser()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.getMinorVersion()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.MimeVersionFieldLenientImpl(Field,DecodeMonitor)", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.getMajorVersion()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse()", "dom/src/main/java/org/apache/james/mime4j/field/MimeVersionFieldLenientImpl.java@org.apache.james.mime4j.field.MimeVersionFieldLenientImpl.parse(Field,DecodeMonitor)", "dom/src/test/java/org/apache/james/mime4j/field/ContentLocationFieldTest.java@org.apache.james.mime4j.field.ContentLocationFieldTest.testGetLocationWithCommens()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLocationFieldTest.java@org.apache.james.mime4j.field.ContentLocationFieldTest.testGetLocationWithBlanks()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLocationFieldTest.java@org.apache.james.mime4j.field.ContentLocationFieldTest.testGetQuotedLocation()", "dom/src/test/java/org/apache/james/mime4j/field/ContentLocationFieldTest.java@org.apache.james.mime4j.field.ContentLocationFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/ContentLocationFieldTest.java@org.apache.james.mime4j.field.ContentLocationFieldTest.testGetSimpleLocation()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithBlanks()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetQuotedLocation()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetLocationWithCommens()", "dom/src/test/java/org/apache/james/mime4j/field/LenientContentLocationFieldTest.java@org.apache.james.mime4j.field.LenientContentLocationFieldTest.testGetSimpleLocation()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testLineWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testPlainLine()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed1()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed3()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testLineWithNestedComments()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.check(String,int,int)", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed2()", "dom/src/test/java/org/apache/james/mime4j/field/LenientMimeVersionParserTest.java@org.apache.james.mime4j.field.LenientMimeVersionParserTest.testMalformed4()", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testLineWithComments()", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testEmptyLine()", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.parse(String)", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testLineWithNestedComments()", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.check(String,int,int)", "dom/src/test/java/org/apache/james/mime4j/field/MimeVersionParserTest.java@org.apache.james.mime4j.field.MimeVersionParserTest.testPlainLine()"], "ecf5be54d9066357580a7f38a22028f5056d2551": ["dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.containsField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.removeFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(BinaryBody)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getField(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setField(Field)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields(String)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getField(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.containsField(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.addField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.removeFields(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.getFields(String)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setField(Field)", "dom/src/main/javorg/apache/james/mime4j/message/AbstractEntityBuilder.java@org.apache.james.mime4j.message.AbstractEntityBuilder.setBody(Body)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(byte,String)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(BinaryBody)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/BodyPartBuilder.java@org.apache.james.mime4j.message.BodyPartBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(BinaryBody)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Multipart)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(Message)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(TextBody)", "dom/src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.setBody(String,String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addTextPart(String,Charset)", "dom/src/main/java/org/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addBinaryPart(byte,String)", "dom/src/main/javorg/apache/james/mime4j/message/MultipartBuilder.java@org.apache.james.mime4j.message.MultipartBuilder.addTextPart(String,Charset)", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetMultipartBody()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetTextBody()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testSetMessageBody()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testContentDisposition()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testFieldOperations()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testContentType()", "dom/src/test/java/org/apache/james/mime4j/message/AbstractEntityBuilderTest.java@org.apache.james.mime4j.message.AbstractEntityBuilderTest.testContentTransferEncoding()", "dom/src/test/java/org/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetBody()", "dom/src/test/java/org/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetBinaryBody()", "dom/src/test/java/org/apache/james/mime4j/message/BodyPartBuilderTest.java@org.apache.james.mime4j.message.BodyPartBuilderTest.testSetTextBody()"], "d6c477cdf10327ab09352b1a39c7cddf13021ea5": ["core/src/main/java/org/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.enforceLimit()", "core/src/main/javorg/apache/james/mime4j/io/LimitedInputStream.java@org.apache.james.mime4j.io.LimitedInputStream.enforceLimit()"], "4aa54cafaf77642197aa6be77f6196780cf8f72e": ["src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)"], "fc207b7b1c3a238b44acc98611434a689c10f7bd": ["examples/src/java/org/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "examples/src/javorg/apache/james/mime4j/samples/tree/MessageTree.java@org.apache.james.mime4j.samples.tree.MessageTree.valueChanged(TreeSelectionEvent)", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/java/org/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.getMessageId()", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig,StorageProvider)", "src/main/javorg/apache/james/mime4j/message/Message.java@org.apache.james.mime4j.message.Message.Message(InputStream,MimeEntityConfig)", "src/main/java/org/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "src/main/javorg/apache/james/mime4j/message/MessageBuilder.java@org.apache.james.mime4j.message.MessageBuilder.field(Field)", "src/test/java/org/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()", "src/test/javorg/apache/james/mime4j/field/FieldsTest.java@org.apache.james.mime4j.field.FieldsTest.testMessageId()"], "677da8d87385be83e10b9bf8e0a479a20e9284e7": ["src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.resizeBuf()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream,int,byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flushBuffer()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(OutputStream)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.isBase64(byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.containsBase64Byte(byte)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush()", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/java/org/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._processArray(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.close()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._encode(int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.flush()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.Base64OutputStream(Writer)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.write(byte,int,int)", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream.finish()", "src/main/javorg/apache/james/mime4j/decoder/Base64OutputStream.java@org.apache.james.mime4j.decoder.Base64OutputStream._writeBase64(byte,byte,byte)", "src/main/java/org/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.wrapBase64(OutputStream)", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.close()", "src/main/javorg/apache/james/mime4j/decoder/CodecUtil.java@org.apache.james.mime4j.decoder.CodecUtil.wrapBase64(OutputStream)", "src/main/javorg/apache/james/mime4j/message/Entity.java@org.apache.james.mime4j.message.Entity.writeTo(OutputStream,int)", "src/test/java/org/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.roundtripUsingOutputStream(String)", "src/test/javorg/apache/james/mime4j/decoder/CodecUtilTest.java@org.apache.james.mime4j.decoder.CodecUtilTest.roundtripUsingOutputStream(String)"], "493f480cab525c5ad8cb7d1b6a1b64baf3ad2897": ["dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor,BitSet)", "dom/src/main/java/org/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseRoute(ByteSequence,ParserCursor)", "dom/src/main/javorg/apache/james/mime4j/field/address/LenientAddressBuilder.java@org.apache.james.mime4j.field.address.LenientAddressBuilder.parseMailboxAddress(String,ByteSequence,ParserCursor)", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseRoute()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseAddressStartingWithAt()", "dom/src/test/java/org/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseNoRoute()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseRoute()", "dom/src/test/javorg/apache/james/mime4j/field/address/LenientAddressBuilderTest.java@org.apache.james.mime4j.field.address.LenientAddressBuilderTest.testParseNoRoute()"], "323ecf3fb2ea11a17657732e8c45e47258eeb9f5": ["src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Throwable)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.add_escapes(String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.getMessage()", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(String)", "src/main/javacc/org/apache/james/mime4j/field/structured/ParseException.java@org.apache.james.mime4j.field.structured.ParseException.ParseException(Token,int,String)", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testSimpleField()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.parse(String)", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.setUp()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedInComments()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testFolding()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testQuotedString()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testTrim()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.testComments()", "src/test/java/org/apache/james/mime4j/field/structured/StructuredFieldParserTest.java@org.apache.james.mime4j.field.structured.StructuredFieldParserTest.tearDown()"]}