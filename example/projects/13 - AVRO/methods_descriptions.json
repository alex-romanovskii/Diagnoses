{"org.apache.avro.tool.ToTextTool.getShortDescription()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.BalancesRecord.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.isSplitable(FileSystem,Path)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.getRemoteName()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.UnaryMethodHandler.getServiceImpl()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.ProtobufData.isRecord(Object)": "AVRO-805.  Fix to work with either protobuf 2.3 or 2.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1170003 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.except(String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.getRecordState(Object,Schema)": "AVRO-907. Java: Optimize access to protobuf message fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(ResponderServlet,String,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.BaseFieldTypeBuilder.booleanBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.localTimestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ArraySchema.ArraySchema(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.getJsonProp(String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderTest(String)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.smallArraySize(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testDecodeFromSources()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.hasFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Promote.isValid(Schema,Schema)": "Applied splotless for reformatting sources\n", "org.apache.avro.TimeMicros.TimeMicros()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceableTypeFactory.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.test.basic.StringTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.DoubleDefault.DoubleDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Schema(Type)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.checkReaderEnumContainsAllWriterEnumSymbols(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.createDataModel(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMicrosConversion()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.compiler.idl.SymbolTable.apply(String)": "[add] resolution code using new reusable visitor.", "org.apache.avro.RecordBuilder.namespace(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CatTool.writeRecords(long,double)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.SequenceFileReader.SequenceFileReader(SequenceFile,Configuration)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Rec.Rec(Random)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldDefault.usingDefault(Object)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNamesFailAbsent()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.writeAndClose(ByteBuffer,OutputStream)": "AVRO-2262 Java compression codec fixes. (#352)\n\nAVRO-2262 Java compression codec improvements", "org.apache.avro.Schema.Field(Schema,JsonNode,Order)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.jsonToBinary(String,String)": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRuntimeException.AvroRuntimeException(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.isConnected()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.Array.equals(Object)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setUint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.performanceTest()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.tool.SinkResponder.run()": "AVRO-321.  Restore java RPC interop tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@906635 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.hasTypeEnum()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setBinaryField(byte)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.basic.DoubleTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.Array.next()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.name(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.data.TestJodaTimeConversions.createSchemas()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.hadoop.io.AvroKeyDeserializer.AvroKeyDeserializer(Schema,Schema,DatumReader)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setFloat(float)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.mkFieldAction(int,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyValue.getKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.getFieldValue(_Fields)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.record.RecordWithOutOfOrderTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroRecordReader.createKey()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit8()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.getAliases()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Test.setI64FieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMillisConversion.getRecommendedSchema()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestFingerprintInternationalization.cases()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.doubleWrittenWithUnionSchemaIsConvertedToDoubleSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.ipc.NettyClientAvroHandler.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.Option.createInstance()": "AVRO-798. Add checksum to Snappy compressed blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095208 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestUtf8.testArrayReusedWhenLargerThanRequestedSize()": "AVRO-1041. Java: Fix Utf8 to reuse array in more cases.  Contributed by Dave Irving.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1296486 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Skip.Skip(Schema,GenericData)": "Applied splotless for reformatting sources\n", "org.apache.avro.SchemaBuilder.requiredBoolean(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.RandomData.RandomData(Schema,int,boolean)": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.io.GenericTest.writeInternal(Encoder)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificCompiler.javaType(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.asByteBuffer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.skip(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LockableArrayList.ensureUnlocked()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.newInstanceFromString(Class,String)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.read(byte,int,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.reflect.ReflectionBasedAccessor.set(Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroOutputFormatBase.getSyncInterval(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyServerAvroHandler.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeIndex(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.record.RecordWithDefaultTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.avro.TestShredder.checkWrite(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setI32(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.trace.SpanAggregationResults.SpanAggregationResults()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testHandshake()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.longValue(Object)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.getLabel(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcReceiveTool.getShortDescription()": "AVRO-707. Java: Promote SASL-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044144 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCollector(String,Reporter,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testIsUnionOnUnionWithOneElement()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.reflect.ReflectRequestor.getClient(Class,Transceiver,ReflectData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.append(List)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.test.basic.IntTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.ResolvingTable.bestBranch(Schema,Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.BinaryFragmentToJsonTool.getShortDescription()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.collect(Object,Object)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.enumRecordWithExtendedSchemaCanNotBeReadIfNewValuesAreUsed()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.SampleRecord.AnotherSampleRecord(Integer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.SpecificCompiler.setStringType(StringType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_args.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.build()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.basic.UnchangedUnionTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.file.codec.CustomCodec.hashCode()": "AVRO-970. Java: Make Codec API public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.advance(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.TestIdl.loadTests()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readField(Object,Field,Object,ResolvingDecoder,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setSint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FieldBuilderBase.optionalMap(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CompressionChannelFactory.newChannel(ChannelPipeline)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testTimestampMillisConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.clientStartConnect(RPCContext)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getConversionByDescriptor(Descriptor)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.SchemaBuilder.bytesDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlToSchemataTool.getOutputDirectory(List)": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicState.getRandom()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getReplicationFactor()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.toString()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Props(Set)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapSchema.toString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.getResponse()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcSendTool.dumpJson(PrintStream,Schema,Object)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "example.MapReduceColorCount.reduce(Text,Iterable,Context)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearLastName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalFixed(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.BlockCompressWriter(Writer)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectFloatArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.put(int,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ToTrevniTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getClassName(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testEnumCompare()": "AVRO-1327. Java: Make GenericEnumSymbol implement Comparable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480769 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.getNumCalls()": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.equalNames(NamedSchema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testRepeatedRequests()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.WritableData.getSchema(java)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.mergeFrom(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getSymsList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.SequenceFileReader.SequenceFileReader(File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.main(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.WeakIdentityHashMap.size()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.floatBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.setStringBytes(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestUtil.randomString(Random)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestImpl.hello(Utf8)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_argsTupleScheme.read(org,zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.close()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.NullBuilder.endNull()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.parse(InputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.thrift.ThriftDatumWriter.writeBytes(Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.hasI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.netty.NettyDataPack.NettyDataPack(int,List)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.Pair.makePairSchema(Schema,Schema)": "AVRO-2629: Use Java Collections and Arrays Utilities\n", "org.apache.avro.ipc.jetty.TestProtocolHttp.getExpectedHandshakeCount()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.GenericDatumWriter.writeMap(Schema,Object,Encoder)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(Schema,ReflectData)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.enumAdjustAction(int,Object)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TimestampMicrosConversion.toLong(Timestamp,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ReaderWriterCompatiblityChecker.calculateCompatibility(Schema,Schema)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.getFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.grpc.AvroGrpcClient.invokeUnaryMethod(Method,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestBasicTracing.SleepyResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.generic.TestStateDecode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Test.writeTo(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.PrintingVisitor.visitTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.file.DataFileReader12.tell()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.setDoubleFieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.stats.StatsServlet.writeStats(Writer)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.Incompatibility.getLocation()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Foo.getBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.ByteBufferInputStream.getBuffer()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readFloat()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.initFields()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getDefaultingStep(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.TestCreateRandomFileTool.testSimple()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNestedFake.reset()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleResult(Integer)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericConcreteEnum.testGenericWriteSpecificRead()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FooBarSpecificRecord.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.bytesType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.newRecord(Object,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BasicTest.newEncoder(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.prepend(List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimeConversion.getConvertedType()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testSimpleMap()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.TestColumnFile.testInts()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BytesTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.GenericReaderWithDefaultTest.GenericReaderWithDefaultTest()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeIndex(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NamedSchema.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Jsr310TimeConversions.getConvertedType()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.tool.RpcProtocolTool.getName()": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.clearT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.trevni.avro.AvroColumnator.p(String,Schema,String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.executeCompiler(SpecificCompiler,String,StringType,boolean,File,File)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.reflect.FieldAccessReflect.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setIntArray(int,int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeFloatField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.tell()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,Void)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderOneTimeUseTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.compareTo(GenericArray)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.test_identical(Encoding,int,String,String,String,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.getDefaultValue(Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.jsonToBinary(String,String,String[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.getRecordSchema(Object)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalRecord(String,Schema,GenericRecord)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadInt.ReadInt(String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.newRecord(Object,Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.getD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.Client.ping()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.skipSourceBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SimpleImpl.error()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.initializeConnections()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.internal.TestJacksonUtils.testToObject()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.mergeFoo(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.createNonStringMapSchema(Type,Type,Map)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.parsing.Symbol.fieldOrderAction(Schema)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toEnumSymbol(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestEncoder.writeArrayStart()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList3()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestResponder.respond(Message,Object)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileGetMetaTool.getShortDescription()": "AVRO-881. Java: Add a 'getmeta' tool that lists a file's metadata.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.props()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.append(K,V)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestBinaryDecoder.testEOF_fixed()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingAction.flatten(Map,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.TwoWayMessage(String,String,Map,Schema,Schema,Schema)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.isErrorAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.decompressUsing(Codec)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.decompress(InputStream,Decoder)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.getNamespace()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getProcessTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.close(boolean)": "AVRO-1297. NettyTransceiver: Provide overloaded close(boolean awaitCompletion)\n\nSubmitted by:jbaldassari\t\nReviewed by:cutting\t\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1503095 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.MapBuilder(Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addAllFooArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolParsing.oneWayResponse()": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.aliases()": "AVRO-1016. Java: Add Field#getAliases() method to better permit copying of schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241665 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.InduceMojo.induceClasses(File)": "AVRO-2365 Enhancements to maven-plugin induce goal\n", "org.apache.avro.FieldBuilderBase.optionalFixed(String,Schema,byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestInduceMojo.testInduceSchema()": "AVRO-2365 Enhancements to maven-plugin induce goal\n", "org.apache.avro.specific.SpecificData.createFixed(Object,Schema)": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.setCodec(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.getDeflater()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherJob.getExecutable(JobConf)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.getMap(Schema,Schema)": "AVRO-11.  Re-implement specific and reflect datum readers and writers to leverage AVRO-6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764989 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooArrayOrBuilderList()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSerialization.newDataModelInstance(Class,Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericResponder.readRequest(Schema,Decoder)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedDefault.fixedDefault(byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.flush()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BazRecord.hashCode()": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperDeserializer.open(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.getClient(Class,Transceiver,SpecificData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNames()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.LocalTimestampMillisConversion.fromLong(Long,Schema,LogicalType)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.io.BinaryDecoder.BinaryDecoder(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.type(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.messageReceived(ChannelHandlerContext,MessageEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.AnonymousServer.isComplete()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServerWithCallbacks.tearDownConnections()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimal.equals(Object)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.thrift.test.Test.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.namespace(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopCombiner.getCollector(OutputCollector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToUnionLongFloatSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(AvroWrapper)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.randomString(Random,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.ColumnFileReader.readMagic(InputBuffer)": "AVRO-1259. Java: Improve Trevni's encoding of sparse columns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461896 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.Names(Names)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadWithReaderSchema()": "AVRO-2689:  add reader-schema to DataFileReadTool (#785)\n\n* AVRO-2689: add reader schema to DataFileReadTool\r\n\r\nThis PR adds --reader-schema and --reader-schema-file flags\r\nto the tojson tool.\r\n\r\n* AVRO-2689: Unit test for reader schema on tojson tool.\r\n\r\nCo-authored-by: RyanSkraba <ryan@skraba.com>\r\n", "org.apache.avro.ipc.netty.TestNettyServer.testConnectionsCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyDataPack.setDatas(List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getColumnMetaData()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.LogicalTypes.addToSchema(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.EnumAdjustAction.EnumAdjustAction(int,Object)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.Builder()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.finishOverflow()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFooArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestWordCount.testAvroUsingTextFileOutput()": "AVRO-1232. Java: Add a toString() method to AvroWrapper so that it works with TextOutputFormat.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435355 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.JsonDecoder(Schema,String)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolParsing.testMessageFieldAliases()": "AVRO-1819, AVRO-1820: Java: Add aliases, custom properties to Protocol. Contributed by Konstantin Usachev.\n", "org.apache.avro.specific.Builder.hasD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.generic.GenericNestedTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.tool.Util.compressionCodecOption(OptionParser)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsUnionOnEnum()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.io.ValidatingDecoder.skipFullMap(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRecodecTool.testRecodec()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestProtocolGeneric.testEcho()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.AbstractAvroMojoTest.tearDown()": "AVRO-1207. Java: Add tests for Maven plugins.  Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1411406 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getField(Object,String,int)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroTextOutputFormat.toByteBuffer(Object,byte,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Player.clearNumber()": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileWriteTool.readSchemaFromFile(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setDec(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.trevni.TestUtil.getRandomSeed()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.write(GenericData,Schema,D[])": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping.getEmptyArgsInstance()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ClassUtils.forName(Class,String)": "AVRO-987. Java: Make Avro OSGI-ready. Contributed by Ioannis Canellos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556891 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.populateRecordArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Decimal.hasProperty(Schema,String)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferValueWriter.writeBuffer(ByteBuffer)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testMultipleAnnotations()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.toByteBuffer()": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.io.DecoderFactory.defaultFactory()": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList2()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.aDatum(Type,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BufferAccessor.setLimit(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroTextOutputFormat.asString(ByteBuffer)": "AVRO-2308: Use Java StandardCharsets\n", "org.apache.avro.mapred.AvroTextRecordWriter.toByteBuffer(Object)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.specific.Builder.setDec(BigDecimal)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.io.parsing.Symbol.EnumLabelsAction(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.DefaultStartAction(Symbol,byte)": "AVRO-383. Optimizing ResolvingDecoder for default values (\"skipping default values\", which was't handled correctly in the previous commit)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905516 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.cleanUpAfter()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.parsing.Symbol.fieldAdjustAction(int,String)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.toJson(Input,PrintStream,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.LongTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(byte,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.TimeMillisConversion.getConvertedType()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.data.Jsr310TimeConversions.toInt(LocalTime,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.SchemaBuilder.longType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.requiredBytes(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.length()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.cancelPendingRequestsAfterChannelCloseByServerShutdown()": "[merge] marge with latest changes", "org.apache.avro.compiler.specific.SpecificCompiler.getStringType(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumReader.readArray(Object,Schema,Decoder)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.line(StringBuilder,int,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.RecordWithDefault()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ErrorAction.ErrorAction(Schema,Schema,ErrorType)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.Builder.clearName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.getReaderSchema()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newDecoder()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.newNullAllowingInstance()": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.validate(Schema,Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.Test(String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.AvroKeyValueRecordWriter(AvroDatumConverter,AvroDatumConverter,GenericData,CodecFactory,OutputStream,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.tool.GenAvroTool.getName()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolHttp.getExpectedHandshakeCount()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.toString()": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.specific.SpecificRequestor.getClient(Class,Transceiver)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.specific.SpecificResponder.getDatumReader(Schema)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.maybeForceBuilderInitialization()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPrimitiveSchemaGeneratesNothing()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(Class,Object)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.aliases(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NameContext.put(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.defaultValue()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteSource.detach()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.getBoolean(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setDec(java)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.thrift.test.add_args.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleOutputs.checkTokenName(String)": "AVRO-1210. Java: Fix mistakes in AvroMultipleOutputs error messages.  Contributed by Dave Beech.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1414974 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_argsStandardScheme.read(org,zip_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.N(int,int)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificRecordBase.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.reusingReader(ReusingFieldReader)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.releaseRunPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getDoubleField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetheredProcess.startSubprocess(JobConf)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.BlockingValueWriter.writeArrayStart()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TetherTool.getName()": "AVRO-663 Java build: Change build to create an avro-tools.jar that conforms to maven standards and contains dependencies within\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1059139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.unionAdjustAction(int,Symbol)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalArray(String,Schema,Collection)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.hello(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaCompatibility.readSchemaFromResources(String)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.setSyms(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteUUID()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.trace.TestTraceSingletons.testNormalConfiguration()": "AVRO-1152. Java: Fix TestTraceSingletons for Java 7.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertText()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.intBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaValidatorBuilder.validateAll()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.awaitMessages()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.skipArray()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isFloat(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificErrorBuilder.testSpecificErrorBuilder()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherReducer.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.getAlgorithm()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LongDefault.LongDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.newBuilder(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testMakePath()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.mkSchema(String)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.data.TestTimeConversions.testDynamicSchemaWithDateConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.generic.GenericRequestor.readError(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroRecordReader.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileConcat.codecs()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readBoolean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.ReuseByteWriter(ByteBufferOutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getString()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit11()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.reflect.UnsafeBooleanField.UnsafeBooleanField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionBuilder.UnionBuilder(Completion,NameContext,List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.FieldBuilder(FieldAssembler,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getTextOffset()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.Params(Input)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.parse(InputStream)": "AVRO-246 Java schema parser should take schema from InputStream in addition to file\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@888720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeId.getId()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.write(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestWordCount.reduce(Utf8,Iterable,AvroCollector,Reporter)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.trevni.OutputBuffer.ensure(int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.FloatTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Error.setFieldValue(_Fields,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.close(TaskAttemptContext)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.TestStateDecode.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Schema.LockableArrayList(int)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcProtocolTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.skipBytes()": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.read(org,Nested)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocol.testPropEquals()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.optionalBytes(String,byte)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testMapObjectProp()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.testTraceAndCollection(TracePluginConfiguration)": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroWrapper.testToString()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Builder.getRelatedids()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.EnumSchema(Name,List)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testInvalidParameterCounts()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.protobuf.Test.addFooArrayBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.DataFileRepairTool.recoverAfter(String,String,PrintStream,PrintStream)": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.RecordWriterWithCounter.close(Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.Accessor.resolvingGrammarGeneratorAccessor()": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.ipc.generic.GenericRequestor.readResponse(Schema,Decoder)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Builder.hasPosition()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.ack()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.Writer.withCompressionType(CompressionType)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SmallLongTest.SmallLongTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificRecordBuilder.testUnions()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.Builder.hasSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.remove(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.bytesBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.StringTest.StringTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setFixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.TestAvroProtocolGrpc.testMultipleArgsConcatenate()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.netty.TestNettyServer.testBadRequest()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.ResolvingDecoder.advance(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.stringType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionRecord(String,Schema,GenericRecord,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooOrBuilder()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.getReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.seek(long)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.SchemaBuilder.stringBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.getOutputBuffer(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.testSkip_2(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.M.getDefaultInstanceForType()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getResult(I,ping_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testManglingForEnums()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.ReflectData.createAccessorsFor(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.DecimalConversion.validate(LogicalTypes,BigDecimal)": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.parsing.Fixup.Fixup(Symbol,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TwoWayMessage.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileStream.hasNextBlock()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.incompatible(SchemaIncompatibilityType,Schema,Schema,String,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.nextBlock(DataBlock)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TwoWayMessage.getErrors()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.GenTest.slurp(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestDescriptor.add(List)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalBytes(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.mergeFrom(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.addAllIntArray(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.build()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.printResult(long,Test,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.compare(byte,int,byte,int,Schema)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Reference.addToSchema(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.createMessage()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.intDefault(int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.deserialize(TetherData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.setAdditionalVelocityTools(List)": "AVRO-1762: Velocity custom objects (#524)\n\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nIt provides more flexibility when generating code with custom Velocity\r\ntemplates.\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nRebased on master\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nImproved unit tests\r\n\r\n* AVRO-1762: Velocity custom objects\r\n\r\nvelocityTools is now of type List<Object>\r\n", "org.apache.avro.protobuf.Builder.hasDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.NestedStandardScheme.read(org,Nested)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.SameMapSignature.getMap2()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.ipc.BlockingSimpleImpl.error()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.addToSetField(int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.specific.SpecificRequestor.invoke(Object,Method,Object)": "AVRO-1591. Java: Fix specific RPC so that proxies implement hashCode(), equals() and toString(). Contributed by Mark Spadoni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parseFrom(byte,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaValidation.testReadOnePrior()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.getDataModelClass(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOFDouble()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniMetadataTool.dump(Input,PrintStream,boolean)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.PositionFilter.PositionFilter(SeekableInput)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FloatTest.FloatTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderBuffer.buffer()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestAllCodecs.testCodec()": "[AVRO-2245] Improve java tests for compression codecs\n\n", "org.apache.avro.protobuf.Test.setUint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.addFooArray(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.createRecord(LinkedHashMap)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.write(GenericData,Schema,D[])": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.netty.TestNettyServer.send(Message)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingBinaryEncoder.length()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Action.Action(Schema,Schema,Type)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Test.mergeFrom(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalTypes.validate(Schema)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslParticipant.getNegotiatedProperty(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Builder.clearFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceableTracker.toRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.utf8BytesWrittenWithUnionSchemaIsConvertedToStringSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.TestStateEncode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Foo.getIntArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryData.set(byte,int,int)": "AVRO-1175. Java: Clear thread local reference in BinaryData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1414980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.AvroMultipleOutputs.checkTokenName(String)": "AVRO-1210. Java: Fix mistakes in AvroMultipleOutputs error messages.  Contributed by Dave Beech.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1414974 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getTotalTime()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testIdentical()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalEnum(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.skipString()": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.FloatTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Test.hasSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.AvroColumnReader.nextValue(Schema,int)": "Java: Fix Trevni to correctly read unions and specific enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480374 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.loadTests()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.M.isInitialized()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.generate()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.toString()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputFormat.setDeflateLevel(JobConf,int)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.GenTest.GenTest(File,File)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.TestStateDecode.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.specific.SpecificRequestor.getClient(Class,SpecificRequestor)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromCharSequence(CharSequence,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSerialization.setValueReaderSchema(Configuration,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroJob.setInputSchema(JobConf,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroAsTextInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryData.longSize(long)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.doSkipBytes(long)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.InputStreamByteSource(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.schemaWithoutExplicitNullDefault()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.ThriftData.getField(Object,String,int,Object)": "AVRO-948. Java: Fix to more correctly handle Thrift optional and nullable fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190627 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.ReflectData.getSchema(java)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R10.R10(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.stats.StatsPlugin.StatsPlugin()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.repeat(Symbol,Symbol[])": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessReflect.set(Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherData.buffer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.hasUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.RecordWithTimestamps.equals(Object)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.protobuf.Builder.clearDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,Double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJodaTimeConversions.dropMicros(long)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.reflect.PojoWithArray.getId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalEnum(String,Schema,CharSequence)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.SmallLongTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.Perf.GenericReaderWithDefaultTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setTs(long)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.ipc.TestNettyServerWithCompression.initializeTransceiver(int)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.equals(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.TestAvroProtocolGrpc.testNullableResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LongBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.BlockDescriptor.BlockDescriptor(int,int,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.createTransceiver()": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.setDatas(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.writeReplace()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.GenTest.GenTest(File,File)": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayCompletion.ArrayCompletion(ArrayBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.SymbolTest.validateNonNull(Symbol,Set)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.thrift.test.ping_args.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.stringDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SchemaFingerprintTool.printHelp(PrintStream,OptionParser)": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.message.BinaryMessageDecoder.decode(InputStream,D)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.generic.GenericData.writeEscapedString(String,StringBuilder)": "AVRO-713. Java: Fix GenericData.Record#toString() to produce valid JSON for enum symbols.  Contributed by Jay Kreps.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1050184 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.Message(String,String,JsonProperties,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSerialization.getKeyReaderSchema(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SocketServer.SocketServer(Responder,SocketAddress)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.mergeFrom(com,com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroAsTextRecordReader.AvroAsTextRecordReader(FileReader,FileSplit)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFileOutputFormat.setOutputCompressionType(Job,CompressionType)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeBytes(ByteBuffer)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.blockingBinaryEncoder(OutputStream,BinaryEncoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificCompiler.testSimpleEnumSchema()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.Count(long)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.setLastName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.hadoop.io.AvroKeyValue.getSchema(Schema,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.SleepyResponder.SleepyResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getValueClass()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.getT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.AvroMultipleOutputs.checkNamedOutputName(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.GenericStatsReducer.reduce(Text,Iterable,Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.thrift.test.Foo.ping(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.readDouble()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.removeFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.getSerializedSize()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.RecordReferenceBuilder(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaNormalization.fingerprint64(byte)": "AVRO-1055. Race condition in Java fingerprinting code\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325207 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parseMessage(String,JsonNode)": "Update Jackson to 2.9.7.  This changes a LOT of API's due to Jackson's package rename, but for the most part it's search/replace type changes\n", "org.apache.avro.io.TestEncoders.testMappedByteBuffer()": "spotless:apply\n", "org.apache.avro.io.ByteSource.skip(long)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.parsing.Sequence.flattenedSize()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.getSchema()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslParticipant.wrap(byte)": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.thrift.test.add_result.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.ErrorAction(Schema,Schema,ErrorType)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.ipc.trace.TestFileSpanStorage.testBasicStorage()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.write(org,add_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.EmployeeId2.EmployeeId2(Integer)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsUnionOnUnionWithMultipleElements()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.generic.TestGenericLogicalTypes.checkCopy(Object,Object,boolean)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.thrift.test.Test.setMapField(Map)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.generate(Schema,Schema,Map)": "AVRO-1442. Java: Fix ResolvingGrammarGenerator to work with fixed type.  Contributed by Jim Pivarski.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598161 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.ReusableByteBufferInputStream.markSupported()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.TestDecimalConversion.testToFixedPrecisionError()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.reflect.UnsafeDoubleField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.allocEnumAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(long,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.jsonToGenericDatum(Schema,String)": "AVRO-267.  Add two new avroj commands: rpcsend and rpcreceive.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCachedField.UnsafeCachedField(long)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.hasProps()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.io.ByteArrayByteSource.tryReadRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalString(String,CharSequence)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setSfixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordWriterBase.close(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateGetMethod(Schema,Field)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.start(I,zip_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Field.Field(String,Schema,String,JsonNode,boolean,Order)": "AVRO-2035. Java: enable default validation for schemas created by constructors.\n", "org.apache.avro.grpc.AvroGrpcUtils.getProtocol(Class)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.TestBlockingIO.skipMap(JsonParser,ValueReader,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getSymsCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyDataPack.setDatas(List)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "avro.examples.baseball.FieldVisibilityTest.hasFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.ValueWriter.writeFixed(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.resolveUnion(Schema,Schema,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.getSchema(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.DatagramTransceiver.getRemoteName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.getProtocol(Class)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testBoolean()": "AVRO-206.  Improved checks for schema parsing.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898971 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.RecordWriterWithCounter.write(Object,Object)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.DeflateCodec.getOutputBuffer(int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.start()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.segment(T)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo2.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.startRow()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.ReflectDatumWriter.getArraySize(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Tests.skip(int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestBinaryDecoder.testDoubleTooShort()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasedAccessor.getField()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.write(OutputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getSchemaName(Object)": "AVRO-1153. Java: Fix reflect to be able to write unions that contain stringable schemas.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384163 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Slf4jLogChute.isLevelEnabled(int)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeBytes(ByteBuffer)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parseJsonToObject(String)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.file.DataFileReader.close()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferOutputStream.prepend(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryEncoderFidelity.generateData(Encoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.newRecord(Object,Schema)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.testIOFormat()": "AVRO-1254. Fix Trevni mapreduce tests to not depend on order, which is no longer guaranteed under Java 7.  Committed to the right place this time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1448804 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.generateSetMethod()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.EnumBuilder.EnumBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.IDLProtocolMojo.getIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestCustomSchemaStore.CustomSchemaStore()": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.RandomData.RandomData(Schema,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setUint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Reference.Reference(String)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setIntArray(int,int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.withFileSystem(FileSystem)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.populateDoubleArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.TestEncoder.writeBytes(ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ArrayCompletion.outerSchema(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.Protocol(String,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.getIncompatibilities()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.ProtobufDatumWriter.ProtobufDatumWriter(ProtobufData)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.readClass(DataInput)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingDecoder.skipTopSymbol()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.BasicArrayState.getBatchSize()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.RecordReader.read(Object,Decoder)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.Builder.setDouble(double)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordAdjust.RecordAdjust(Schema,Schema,GenericData,Action,Field,int,Object)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.thrift.test.add_resultStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.get(Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeByteArray(byte,int,int)": "AVRO-82.  Add checkstyle to Java compilation.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798646 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkUnionError(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaEscape(String)": "AVRO-2790: Necessity of using Object as parameter of javaEscape method\n\n", "org.apache.avro.io.ValueReader.readString(Utf8)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getDefaultInstance()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.Builder.getF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.generic.GenericTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Test.parseFrom(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.NamedSchema(Type,Name,String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.specific.Slf4jLogChute.log(int,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificExceptionBase.equals(Object)": "AVRO-182.  Fix Java's generic and specfic implementations of equals() and hashCode() to be consistent with compareTo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835070 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Utf8LineRecordReader.createKey()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.jetty.TestBulkData.main(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.ValueWriter.writeMapEnd()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.writeIfBlockFull()": "AVRO-820. Java: Permit applications to catch exceptions thrown while writing data to a file and then continue writing to that file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1124971 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.generateRepeatData(Encoder,Random,int)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Avro14SpecificCompiler.makePath(String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setTs(org)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.ipc.netty.NettyTransceiver.getPipeline()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.ColumnOutputBuffer.writeTo(OutputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.iterator()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredString(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.util.Utf8.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.writeToAvroFile(String,String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ValidateLatest.ValidateLatest(SchemaValidationStrategy)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.createBinaryDecoder(byte,BinaryDecoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.zstandardCodec(int)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.mapred.Pair.Pair(Double,Void)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getColumnMetaData(int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Long,Double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingValueWriter.endBlockedValue()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaValidatorBuilder.strategy(SchemaValidationStrategy)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.addAllFooArray(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.AnonymousClient.getNegotiatedProperty(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.DoNothing(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.mapred.TestWordCountSpecific.reduce(WordCount)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestFsInput.testRead()": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.file.DataFileReader.getMeta(String)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.withCodec(CodecFactory)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.clearFooArray()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectLongArrayTest.ReflectLongArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.makeRequest(Transceiver)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "avro.examples.baseball.Player.hasNumber()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.put(K,V)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.doSkipFixed(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueWriter.setItemCount(long)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.largeArraySize(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readArrayStart()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UUIDConversion.toCharSequence(UUID,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(BooleanWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.getLogicalTypeName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.doAction(Symbol,Symbol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.RPCMetaTestPlugin(String)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getFixedSchema(Object)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedBuilder.addAliasesTo(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.IntCheckAction.IntCheckAction(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.pushSymbol(Symbol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TimeMicros.validate(Schema)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getNumberType()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.get(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Factory.getClient(org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.Crc32Checksum.size()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.SocketTransceiver.SocketTransceiver(SocketAddress)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithBZip2Code()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testRecordGetFieldDoesntExist()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.numRowsInFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.BinaryFragmentToJsonTool.getName()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setMapOutputGeneric(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseFrom(byte,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.hasNumber()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.FloatTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.SeekableInputStream.tell()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.javaEscape(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.usingDefault(Object)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testConcat()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.DecodingTestCase.getWriterSchema()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Error.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.detach()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.run()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.TestEncoders.testArrayBackedByteBuffer()": "AVRO-1857: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state\n\nThis closes #198\n", "org.apache.avro.protobuf.Builder.clearFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.LongTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.floatBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.writeInternal(Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.TestNettyServerWithSSL.verifyResponse(String)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.respond(Message,Object)": "AVRO-573.  Java: Fix various bugs with undeclared RPC exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980187 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.TestGenericData.testToStringEscapesControlCharsInMap()": "AVRO-2276: Escape Map keys in GenericData.toString to generate valid JSON\n", "org.apache.avro.JsonProperties.JsonProperties(Set)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CountingOutputStream.flush()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setF64(double)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectData.setListClass(Schema,Class)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestWordCount.testReflectInput()": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.protobuf.Builder.getSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.mkString(String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooBuilder()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.AvroSerialization.close()": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.arrayNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getFields(Class)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testSchemaWithFields()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.hadoop.io.Writer.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.grpc.TestServiceImplBase.add(int,int,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.test.basic.BytesTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.add_args.getNum1()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.RecordSchema(String,String,boolean)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Client.zip()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ResolvingRecordTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Test.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseTypeBuilder.booleanBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.DecimalRecordFixed.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readNull()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.add(int,T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.StatsPlugin.createNewHistogram()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.XZCodec.Option(int)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.AccessorTestClass.validField(FieldAccess,String,Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.Accessor.createField(String,Schema,String,JsonNode,boolean,Order)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestAvroMultipleInputs.reduce(KeyRecord,Iterable,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.Requestor.getTransceiver()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.RecordWithPromotion.RecordWithPromotion()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.setCustomCoders(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaValidation.testValidatorFails(SchemaValidator,Schema,Schema[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.TestGenericLogicalTypes.testCopyDecimal()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificData.testPrimitiveParamError()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setOutputSpecific(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SSLChannelFactory.SSLChannelFactory()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.RecordAdjust.RecordAdjust(Schema,Schema,Action,Field,int)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.grpc.AvroGrpcClient.invoke(Object,Method,Object)": "Remove use of guava by utilizing java8 lambdas and collections\n", "org.apache.avro.ipc.trace.Util.idValue(long)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipBoolean()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.isEnum(Object)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.createMessage(String,String,Schema,Schema,Schema)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.getRowCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.getFooArrayOrBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.InputBuffer.readFully(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ResolvingTable.mkEnumAction(String,Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.Builder()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.convertToRawType(Object,Schema,LogicalType,Conversion)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.TestSchema.testDouble()": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeFloat(float)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectDoubleArrayTest.ReflectDoubleArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.getNegotiatedProperty(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.generic.TestGenericDatumWriter.testMapConcurrentModification()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.FooBarSpecificRecord.clearNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.getPosition()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.cleanUpAfter()": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.StringTest.randomString()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.tool.TestDataFileRepairTool.tearDown()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.BlockingSimpleImpl.hello(CharSequence)": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BooleanDefault.BooleanDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.handleError(Throwable)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.next()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.mapred.tether.TetherOutputService.status(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(Integer,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.setCombinerClass(JobConf,Class)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getTimestampBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "avro.examples.baseball.FieldTest.fromByteBuffer(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.mapred.Pair.Pair(Long,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.equals(Object)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.setIntArray(int,int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SocketTransceiver.writeLength(int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getConversionSupplier(Object)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.RPCContext.setHandshakeResponse(HandshakeResponse)": "AVRO-761. Java: Fix Requestor to not send client's protocol redundantly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1079060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.set(Utf8)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.SimpleImpl(AtomicBoolean)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R9.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.SequenceFileReader.sync(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testDouble()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.ipc.SocketServer.getTransceiver(SocketChannel)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DoubleTest.readInternal(Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.mergeFrom(com,com)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Test.getUnknownFields()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testOnce(String,String,String,String,Encoding,int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ValidatingGrammarGenerator.generate(Schema,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroWrapperSerializer.close()": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.fSync()": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountGeneric.newWordCount(String,int)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.SkipAction.flatten(Map,Map)": "AVRO-328. Performance improvements Validating encoder/decoder for nested records\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.readObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.TestReflect.testBytes()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.buildParsed()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.testRead_PojoWithList()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.EnumSchema.EnumSchema(String,String,List)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.getReader()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.JodaTimeConversions.getRecommendedSchema()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.reflect.AccessorTestClass.accessor(FieldAccess,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_result._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestProtocolHttps.createServer(Responder)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaBuilder.get(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Writer.write(JsonNode,Encoder)": "AVRO-924. Java: Support reading & writing arbitrary JSON data using an efficient Avro binary representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1185364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAnnotationAvroStringableFields()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaBuilder.toJsonNode(Object)": "AVRO-2338: Remove Deprecated Use of JsonStringEncoder (#471)\n\n", "org.apache.avro.thrift.test.ping_argsTupleScheme.write(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setFixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Parser.parse(File)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.grpc.TestAvroMarshaller.readPratialAndDrain(int,InputStream,OutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaTypeWithDecimalLogicalTypeEnabled()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.trace.TraceTiming.getTotalTime()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setFixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificRecordBase.get(String)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.Builder.addAllIntArray(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.GenTest.testName()": "AVRO-866. Java: Add support in IDL for documentation in protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173278 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.LocalTimestampMillisConversion.getConvertedType()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.testFieldDefaultNotAppliedForUnknownSymbol()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestValidatingIO.extractInt(char,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestDeepCopy.testDeepCopy()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertDoubleWritable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.hadoop.io.AvroKeyValue.setKey(K)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.MapTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestDataFileReflect.assertEquals(Object,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DefaultEncoderFactory.configureBlockSize(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.NameContext(HashMap,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.add_resultTupleScheme.read(org,add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceHandler.getLogicalTypeName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRecordCountTool.testMultipleFiles()": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.trevni.avro.AvroTrevniInputFormat.getProgress()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestByteBuffer.getmd5(ByteBuffer)": "AVRO-1227. Java: Large ByteBuffers can corrupt output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1438219 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithPromotionTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Foo.getEmptyArgsInstance()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.nameString(Names)": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readString()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ClassAccessorData.createAccessorsFor(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.ServiceDescriptor.ServiceDescriptor(Class,String)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.M.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.FooBarSpecificRecordTest()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.setSuccess(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.orderDescending()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getReplicationFactor()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.EmployeeInfo.getName()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.testJob()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.WriterUnion.WriterUnion(Schema,Schema,boolean,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.ipc.RPCContext.responseCallMeta()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.ping_args.read(org,ping_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Transceiver.transceive(List,Callback)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.validateIncompatibleSchemas(Schema,Schema,SchemaIncompatibilityType,String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Writer.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyDataPack.setSerial(int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaBuilder.FixedBuilder(String,int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWeather.reduce(Weather,Iterable,AvroCollector,Reporter)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.RecordAdjust.resolve(Schema,Schema,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.RecordReader.getInitializationStage()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.Requestor.request(String,Object)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputScanner.isDone()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericNested()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createEnum(String,String,String,List)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsPluginOverhead.createServer(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.XZCodec.compress(ByteBuffer)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SchemaFingerprintTool.run(InputStream,PrintStream,PrintStream,List)": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.Schema.Field(String,Schema,String,Object)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordWriter.AvroTrevniKeyValueRecordWriter(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.FloatTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.ping_resultTupleScheme.read(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.DataFileStream(InputStream,DatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificCompiler.unbox(Schema,String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestVisitor.get()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.thrift.test.Test.isSetStructField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.getConfigurationWithAvroSerialization()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.Pair.Pair(Double,ByteBuffer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileGetSchemaTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.SimpleCases.SimpleCases(String,String,Object)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInNestedRecord()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.protobuf.Builder.addSyms(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.hasDefaultValue()": "[AVRO-2368] Provide a Field.hasDefaultValue() method to determine if a default value it set or not\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.BinaryData.Decoders()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.startItem()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestTextFileTools.writeRandomFile()": "AVRO-901 Java tools unit tests fail in Windows due to line termination and filenaming conventions\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179387 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeBytes(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.Codec.computeOffset(ByteBuffer)": "AVRO-2262 Java compression codec fixes. (#352)\n\nAVRO-2262 Java compression codec improvements", "org.apache.avro.io.Perf.BasicTest(String,String,int)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableBufferedInput.read(byte,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Company.getEmployees()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.name()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_long()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.start(I,zip_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.nextRawBlock(DataBlock)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.getDoubleValue()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.withDataModel(GenericData)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.hasNumber()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.Schema.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.add_args.isSetNum2()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileReader.getMetaString(String)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.FloatTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.stats.Histogram.Entry(B,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_boolean()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingRecord.ResolvingRecord()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.onError(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.EmployeeInfo.setName(String)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.hasNext()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testGetRecordWriter(Configuration,CodecFactory)": "AVRO-1170. Java: Avro's new mapreduce APIs don't work with Hadoop 2.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1391001 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testMapWithNonStringKeyToStringIsJson()": "Fix map with no string keys toString method\n", "org.apache.avro.io.InputStreamByteSource.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.newMap(int)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteSource.attach(int,BinaryDecoder)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.BaseFieldTypeBuilder.intType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readBytes(Object,Decoder)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeMapEnd()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.GenericDefault.withDefault(Object)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.FieldOrderAction.FieldOrderAction(Schema)": "AVRO-2274 Improve resolving performance when schemas don't change. (#393)\n\n* AVRO-2274 Improve resolving performance when schemas don't change.\r\n\r\n* AVRO-2274 Break out of field-no-reorder loop as early as possible.\r\n", "org.apache.avro.io.BufferedBinaryEncoder.innerWrite(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.writeFixed(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FloatBuilder.FloatBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericNestedTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.SaslSocketTransceiver.SaslParticipant(SaslClient)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.setup(Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.NameContext()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.compareTo(add_result)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.genavro.GenTest.write()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryEncoderFidelity.testDirectBinaryEncoder()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ConcatTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.IntBuilder.create(Completion,NameContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit10()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteUUIDArray()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.main(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.isEnum(Object)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.testToBytesPrecisionError()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.protobuf.M.newBuilder(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificDatumReader.testStringables()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.encodeDouble(double,OutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcServer.getMethod()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.idl.GenTest.generate()": "AVRO-495. IDL: Add support for file includes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986950 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getBufferSizeBytes()": "AVRO-2055: Remove Magic Value From org.apache.avro.hadoop.io.AvroSequenceFile\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.cleanup(Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.hadoop.io.Reader.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServer.tearDownConnections()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.intern(Schema,Map)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.SchemaNormalization.build(Map,Schema,Appendable)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.clearF32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.tool.RpcSendTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.skipSymbol(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.SmallLongTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testJobNoreducer()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.file.BZip2Codec.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Client.send_add(int,int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.Collector.collect(T)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.compiler.specific.SpecificCompiler.publicFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.writeIndex(int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getNamedOutputFormatClass(JobContext,String)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroOutputFormat.setDeflateLevel(JobConf,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.check(Schema,ColumnMetaData[])": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.computeHash()": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeFloat(float)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.equals(add_result)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.NullWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.createBytes(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBinaryDecoder.skipGenerated(Decoder)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.tool.RpcSendTool.makeClient(Protocol,String,int)": "AVRO-267.  Add two new avroj commands: rpcsend and rpcreceive.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ResolvingTable.getEnumValue(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.compareTo(FooOrBar)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.BlockingValueWriter(OutputStream,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.ensureIntArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBinaryDecoder.testEOF_enum()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleBuilder.endDouble()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.hasIndexValues()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_args.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasesAccessorCustomEncoded.read(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValidatingEncoder.flush()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestWordCount.reduce(Text,Iterable,Context)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileMetaData.read(InputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BufferedFileOutputStream.write(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.TestWordCount.map(GenericRecord,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.TestResponder.TestResponder(Protocol)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.Option.Option(int,boolean)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.TestSchema.testDoubleAsLongDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.io.RecordWithPromotion.readInternal(Decoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapred.tether.TetherTaskRunner.close()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testTimestampMillisConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.compiler.TestSpecificCompiler.testPublicDeprecatedFieldVisibility()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testEcho()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableFileInput.tell()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.UnsafeBooleanField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAnnotationAvroName()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeDouble(double)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.initializeSpecificData()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.protobuf.TimestampMillisConversion.getConvertedType()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.thrift.test.add_argsStandardScheme.read(org,add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonRecordOrdering2()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.booleanDefault(boolean)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.addFooArray(int,org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.MapTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.Builder.setS(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.AsyncClient.zip_call(org,org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.builder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.GenTest.generate()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.isRecord(Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ValidatingGrammarGenerator.generate(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.TestAllCodecs.data()": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.FieldAssembler.endRecord()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.onNext(Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.ValueReader.read()": "AVRO-3.  Fix ValueReader to throw an exception at EOF.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764104 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestBulkData.main(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.writeResponse(OutputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericDatumReader.readBytes(Object,Schema,Decoder)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearFoo()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Incompatibility.hashCode()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testUndeclaredError()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.thrift.test.Test.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Test.assignDescriptors(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.idl.TestIdl.run()": "AVRO-2181: missing escape character added\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getFileSystem()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.getKeySchema(Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.size()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BytesTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.util.internal.JacksonUtils.toJsonNode(Object)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.stringType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.NullWritableConverter.convert(NullWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setMapOutputReflect(JobConf)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.run()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_result.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransportCodec.setSerial(int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.Builder.clearB()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.Pair.Pair(Void,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.LongWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readBytes(Object,ValueReader)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.decompress(ByteBuffer)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInArray()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.AnonymousServer.evaluateResponse(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getDecoder()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.FieldBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.space()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.innerLongDecode(long)": "AVRO-765. Java: Improvement to BinaryDecoder readLong performance\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1070613 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithDeflateCodec()": "AVRO-1112. Java: Add support for Snappy codec to newer mapreduce API.  Contributed by Matt Mead.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350726 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Protocol.Message(String,String,JsonProperties,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.SchemaBuilder.fixedDefault(byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.read(Object,Schema,Schema,ValueReader)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.nameString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.BlockingBinaryEncoder(OutputStream,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroKeySerialization.serialize(AvroWrapper)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.TestStateDecode.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.TestStandardScheme.read(org,Test)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.Reduce.reduce(Text,Iterable,Context)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testDateConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.write(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.MetaData.getChecksum()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Writer.Options()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.getAcceptedIssuers()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestProtocolReflect.testEcho()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestNamespaceSpecific.testError()": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testNullableTypesJavaUnbox()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.netty.TestNettyServer.verifyResponse(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayOrBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.TestGenericRecordBuilder.recordSchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericData.createFixed(Object,Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getResponderHostname()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceHandler.getConvertedType()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.compressionLevelOption(OptionParser)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getColumn(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecific.createServer(Responder)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.ParsingTable.size(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.FixedSchema(Name,int)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getField(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getTimestampBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testCanReadTemplateFilesOnTheFilesystem()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.tool.Util.fileOrStdout(String,OutputStream)": "AVRO-867. Java: Enable command-line tools to read data files from any Hadoop FileSystem implementation.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1470691 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ReferenceableTracker.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TrevniRuntimeException.TrevniRuntimeException(String,Throwable)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.testSamplerateAccuracy()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.DoubleDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.IntTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.idl.TestIdl.writeFile(File,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.setTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordReaderBase.close()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.ReadInt.ReadInt()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.reduce(Utf8,Iterable,AvroCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.add_args.unsetNum1()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.ResolvingVisitor(Schema,IdentityHashMap,Function)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.record.RecordTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.BlockingBinaryEncoder.ensure(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.compare(Object,Object,Schema,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.parse(JsonParser)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.setSchema(Schema)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.IntTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Foo.getStringBytes()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.thrift.test.add_result.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeDoubleField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.peek()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetBoolField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestSchemaMojo.testSetCompilerVelocityAdditionalTools()": "AVRO-1762: Velocity custom objects (#524)\n\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nIt provides more flexibility when generating code with custom Velocity\r\ntemplates.\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nRebased on master\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nImproved unit tests\r\n\r\n* AVRO-1762: Velocity custom objects\r\n\r\nvelocityTools is now of type List<Object>\r\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.messageReceived(ChannelHandlerContext,MessageEvent)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.protobuf.Test.getSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaNormalization.parsingFingerprint(String,Schema)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIOResolving.TestResolvingIOResolving(TestValidatingIO,int,String,String,Object,String,String,Object)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ArrayTest.ArrayTest()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.InduceMojo.parseClassName(String)": "AVRO-2365 Enhancements to maven-plugin induce goal\n", "org.apache.avro.tool.TestDataFileTools.testReadWithIncompatibleReaderSchema()": "AVRO-2689:  add reader-schema to DataFileReadTool (#785)\n\n* AVRO-2689: add reader schema to DataFileReadTool\r\n\r\nThis PR adds --reader-schema and --reader-schema-file flags\r\nto the tojson tool.\r\n\r\n* AVRO-2689: Unit test for reader schema on tojson tool.\r\n\r\nCo-authored-by: RyanSkraba <ryan@skraba.com>\r\n", "org.apache.avro.FieldAssembler.optionalBoolean(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherDataDeserializer.deserialize(TetherData)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testParseInputStream()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestDataFileTools.run(Tool,InputStream,String[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.setSfixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.UnionSchema(List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.newBuilder(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReflectNestedFloatArrayTest.ReflectNestedFloatArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.writeLinesFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestCatTool.aDatum(Type,int)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.thrift.test.ping_result.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.GenAvroTool.getShortDescription()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.hasFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testHello()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificDatumReader.testRead()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroOutputFormat.testDeflateCodecUsingAvroCodec()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testLogicalTypesWithMultipleFieldsDateTime()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.reflect.UnsafeCharField.UnsafeCharField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCustomEncodedField.set(Object,Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.setSuccessIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcServer.OneWayUnaryMethodHandler(Object,Method)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.S.S(long,boolean)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.getBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getCurrentName()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.mapred.HadoopReducerBase.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.TestInduceMojo.testInducedProtocolsFileExtension()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.ArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.TestRecordWithLogicalTypes(java,java,java,java,java,java,org,org,org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.specific.ExternalizableOutput.flush()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericNestedFakeTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.trace.TraceNodeStats.getTraceTimings()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.WordCountMapper.map(AvroKey,NullWritable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.JsonEncoder(Schema,OutputStream,boolean)": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.UnchangedUnionResolveTest.genSourceData()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.parsing.ErrorAction.ErrorAction(String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TwoWayMessage.getResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestAvroKeyRecordReader.createSeekableInput(Configuration,Path)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.defaultStartAction(byte)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.FileSpanStorage(boolean,TracePluginConfiguration)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversion.toInt(LocalTime,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearSyms()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMicrosConversion.getConvertedType()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.multiplefiles.M.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.DirectBinaryDecoder.readBoolean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FloatTest.FloatTest(String,String)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FieldBuilder(FieldBuilderBase,String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getStringBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Builder.hasTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.Perf.DecoderTest(String,String,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.add_result(add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.clear()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceClientServlet.loadSpans(PrintWriter)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherJob.run(InputStream,PrintStream,PrintStream,List)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.IntTest.IntTest(String,String)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionType(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testNullArray()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getMinBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.fromBytes(ByteBuffer,Schema,LogicalType)": "AVRO-2592: Avoid consuming ByteBuffer for decimal.\n", "org.apache.avro.ipc.jetty.TestBulkData.printStats(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.BZip2Codec.compress(ByteBuffer)": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.createFileMeta()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.fieldForId(int)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericTest.GenericTest(String,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BooleanTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestBlockingIO.TestBlockingIO(int,int,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.addUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.getMetadata()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumWriter.ProtobufDatumWriter(Schema,ProtobufData)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testBadCodec()": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.io.GenericReaderOneTimeUseDecoderTest.getDecoder()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.SaslSocketServer(Responder,SocketAddress,String,String,String,Map,CallbackHandler)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.FixedDefault.fixedDefault(String)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.IntWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SampleRecord.hashCode()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getFieldName(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.params(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Jsr310TimeConversions.fromInt(Integer,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.util.ByteBufferInputStream.read(byte,int,int)": "[AVRO-813] Keep the InputStream contract of -1 for eof\nPatch from Bruno Dumon applied\n", "org.apache.avro.thrift.test.ping_args._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.writeBytes(Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.clearInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.testFullServerPath()": "AVRO-587. Add Charts and Templating to Stats View\n(Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980173 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.read(InputBuffer,MetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpTransceiver.getLength(List)": "AVRO-129.  Add HTTP-based RPC client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820442 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnValues.ColumnValues(ColumnDescriptor)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testSkip_0(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.getFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestReflect.testDouble()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.FieldTest.getLastName()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.LegacyBinaryEncoder.writeFloat(float)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getType()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.util.ByteBufferOutputStream.ByteBufferOutputStream()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificData.useCustomCoders()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FooBarSpecificRecord.writeExternal(java)": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.grpc.CountingOutputStream.CountingOutputStream(OutputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.build()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.GenericDatumReader.addToArray(Object,long,Object)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testBinaryEncoderInit()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.FastReaderBuilder.FastReaderBuilder(GenericData)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.io.DirectBinaryEncoder.writeInt(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.reset()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setI32FieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withFileSystem(FileSystem)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.hasInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInRecordInFixedDecimal()": "AVRO-2836 Generated java includes logical type conversions (#883)\n\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nIf the logical type is used for a Fixed type (potentially also Enum)\r\nthen it should check if there are any conversions used, and\r\ninclude in the generated java source\r\n\r\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nMove enum and fixed to use the javatype method, as if there is a\r\nlogical type conversion it will be picked up and remove a\r\ncode path", "org.apache.avro.grpc.TestAvroProtocolGrpc.add(int,int,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.AvroJob.setMapperClass(JobConf,Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.clearBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaNormalization.format(String,Object[])": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.DoubleTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamespacedBuilder.NamespacedBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.isLevelEnabled(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderOneTimeUseDecoderTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.write(DataOutput)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.acquireRunPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withOutputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestSchemaCompatibility.DecodingTestCase(Schema,Object,Schema,Object)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getParserForType()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getClassNamesOfPrimitiveFields(Schema)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.hadoop.file.Reader.getDataModel()": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.SpecificErrorBuilderBase.SpecificErrorBuilderBase(T)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.checkFixed(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestGeneratedCode.withSchemaMigration()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestResolvingIO_resolving.data3()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.validateSortedFile(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.specific.SpecificData.getSchemaName(Object)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileWriteTool.getShortDescription()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.testInputFormat()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.isFixed(Object)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.doSkipItems()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCreateRandomFileTool.testCodec()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.parsing.Symbol.hasErrors(Symbol,Set)": "AVRO-2122: Cannot validate schemas with recursive definitions\n\nTrack which symbols have been visited to avoid StackOverflowErrors\nwhen validating schemas with recursive definitions\n\nThis closes #281\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairPriorCorruptRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.hashCode()": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.protobuf.ProtobufData.getNonRepeatedSchema(FieldDescriptor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.ensureSymsIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TestBasicTracing.testBasicTrace()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.readRequest(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.NamedBuilder(NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.extractEventTime(TraceNode,SpanEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.codegentest.CustomDecimalConversion.fromFixed(GenericFixed,Schema,LogicalType)": "AVRO-2836 Generated java includes logical type conversions (#883)\n\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nIf the logical type is used for a Fixed type (potentially also Enum)\r\nthen it should check if there are any conversions used, and\r\ninclude in the generated java source\r\n\r\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nMove enum and fixed to use the javatype method, as if there is a\r\nlogical type conversion it will be picked up and remove a\r\ncode path", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.testAvroGenericOutput()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.EnumBuilder.defaultSymbol(String)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.Builder.clearRelatedids()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getChildren()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalType.validate(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testValidLongAsIntDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.hadoop.io.FloatWritableConverter.FloatWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SmallLongTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.internalGetFieldAccessorTable()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.add_result(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumReader.addToMap(Object,Object,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.getDescriptorForType()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldTypeBuilder.FieldTypeBuilder(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.generic.GenericResponder.getDatumReader(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.compact()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestWeather.map(Weather,AvroCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.io.Writer.getCompressionCodec()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.write(Object,Schema,int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.TestEncoder.writeEnum(int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testSkipping()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.DeflateCodec.decompress(ByteBuffer)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.trevni.InputBuffer.skipBytes()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getReflectData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.clear(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.jsonEncoder(Schema,JsonGenerator)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection_newmethods()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler(Schema)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.mojo.TestIDLProtocolMojo.testIdlProtocolMojoJoda()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.stats.StatsPlugin.createNewFloatHistogram()": "AVRO-587. Add Charts and Templating to Stats View\n(Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980173 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestParsingTable.makeRecordTestData(int[])": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.util.IdentityWeakReference.hashCode()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.echo(TestRecord)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.PropBuilder.prop(String,Object)": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.test.record.RecordWithDefaultTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.AvroKeyValue.setValue(V)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testSerialization(String,T[])": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.DecimalRecordBytes.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ClassUtils.forName(ClassLoader,String)": "AVRO-987. Java: Make Avro OSGI-ready. Contributed by Ioannis Canellos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556891 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsPluginOverhead.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeBoolean(boolean)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Foo.zip_call(org,org,org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.getNumEntries()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SampleRecord.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.Test.hasDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.LockableArrayList(E[])": "AVRO-1628. Java: Add Schema#createUnion(Schema ...) convenience method.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1651831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionCompletion.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestIOExceptionDuringWrite.FailingOutputStream(int)": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.mapred.tether.TetherOutputService.fail(CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createRecord(String,String,boolean)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleInputs.addInputPath(JobConf,Path,Schema)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeString(Utf8)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getSchema(Type,Map)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeIntField.UnsafeIntField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericStringTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.trace.RecursingResponder.RecursingResponder(Protocol,RPCPlugin)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newWriter()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaCompatibility.incompatible(SchemaIncompatibilityType,Schema,Schema,String)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.trace.TestBasicTracing.main(String)": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.hasName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.Array(Schema,Collection)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.ExternalizableInput.available()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.ReuseByteReader(ByteBufferInputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.clientSendRequest(RPCContext)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooArrayList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageDecoder.BinaryMessageDecoder(GenericData,Schema,SchemaStore)": "AVRO-2440: Decode messages by their write schema\n\nThis implements AVRO-2440 by allowing a null value for the readSchema\nfield in the BinaryMessageDecoder. It is interpreted as \"no preference\",\nand makes the decoder use the write schema of an incoming buffer as its\nread schema.\n", "org.apache.trevni.avro.TestShredder.testUnion()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.data.LocalTimestampMillisConversion.getRecommendedSchema()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.mapreduce.AvroKeyRecordWriter.close(TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.fingerprint64(Schema)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeDoubleField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcServer.getServiceImpl()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.Perf.MigrationWithDefaultTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.test(String,String,int,boolean)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasesAccessorCustomEncoded.supportsIO()": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasS()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Builder.addFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadInt.genData(Encoder)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.newBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.DoubleWritableConverter.convert(DoubleWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.MapTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setF64(double)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.io.BlockingBinaryEncoder.BlockingBinaryEncoder(OutputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Decimal.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryEncoder.writeLong(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LogicalTypes.fromSchemaImpl(Schema,boolean)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.SpanAggregator.TraceFormationResults()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Utf8LineRecordReader.Utf8LineRecordReader(Configuration,FileSplit)": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.TestEncoder(Encoder,CountDownLatch,CountDownLatch)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.clear()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.readInt()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.getSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseFieldTypeBuilder.nullBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestCustomSchemaStore.testCompatibleReadWithSchemaFromSchemaStore()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.ResolvingDecoder.ResolvingDecoder(Schema,Schema,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.setStringType(Schema,StringType)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithPromotionTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.TestFsInput.setUpBeforeClass()": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.AvroWrapperSerializer(DatumWriter)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArraySchema.toString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.getFullname(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.bytesBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.populateFloatArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.codegentest.TestNullableLogicalTypes.testWithNullValues()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Options.withMetadata(Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LongTest.LongTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.TestHadoopCodecFactory.testHadoopCodecFactoryBZip2()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordReaderBase.getProgress()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.getFoo()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LocalTimestampMicros.validate(Schema)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.trevni.InputBuffer.skipValue(ValueType)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.onComplete(Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Processor.getEmptyArgsInstance()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceDescriptor.getServiceName()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCollector(String,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Name.Name(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.nextBlock()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.BalancesMapImpl.map(BalancesRecord,AvroCollector,Reporter)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.Schema.UnionSchema(LockableArrayList)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.TestDataFile(CodecFactory)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairAfterCorruptRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.codegentest.FixedSizeStringConversion.toBytes(FixedSizeString,Schema,LogicalType)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.io.TestValidatingIO.remove()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestResponder.respond(Message,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromLong(Long,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TrevniMetadataTool.dump(MetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo2.getCompanyMap()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.writeTo(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.DecimalRecordMapping.schema(Integer,Integer)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroValueDeserializer.testDeserialize()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.UnsafeBooleanField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BoolTest.BoolTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.getUnionSchema(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAvroAliasOnField()": "AVRO-2143. Fix Java reflect to stop using dollar sign in namespaces of nested classes.\n", "org.apache.avro.ipc.NettyFrameEncoder.getPackHeader(NettyDataPack)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArraySchema.getElementType()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.DecimalRecordMapping.DecimalRecordMapping()": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.open(OutputStream)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CatTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeIndex(int)": "Option to remove the namespace from the JSON encoder\n", "org.apache.avro.protobuf.multiplefiles.Foo.setString(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.create(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestRecord.hashCode()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.accept(Class)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArraySchema.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.getCurrentValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.testNonAvroMapper()": "AVRO-698. Java: Add MapReduce tests and documentation for jobs that mix Avro and non-Avro data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1038314 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.SchemaBuilder.unionArray(String,Schema,Collection,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalRecord(String,Schema,GenericRecord)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeDoubleField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.FloatWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCustomEncodedField.isCustomEncoded()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.getDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.SortMapper.configure(JobConf)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.MigrationTest()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.build()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.toJson(Names,JsonGenerator)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopReducer.getCollector(OutputCollector)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SocketServer.close()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.DefaultStartAction.DefaultStartAction(Symbol,JsonNode)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readMap(Object,Schema,Decoder)": "AVRO-29. Reverting changes to GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788481 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.LongTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.Perf.ReflectNestedFloatArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.testPayloadSize()": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.makePath(String,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredEnum(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testWrite(String,List,String)": "AVRO-670. Allow DataFileWriteTool to accept schema files as input with new\n--schema-file and --schema command-line flags. (Contribyted by Ron Bodkin)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@999010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.data()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.FieldAdjustAction.FieldAdjustAction(int,String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.validate(Schema,Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeyComparator.setConf(Configuration)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.toString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.setSchema(Schema)": "AVRO-743 Java: Performance Regression and memory pressure with GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.checkInputFormat()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.specific.TestRecord.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaNormalization.testCanonicalization()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.data.DateConversion.getConvertedType()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.next()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.Foo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.generateGenericNested(Schema,int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapreduce.CombineAvroKeyValueFileInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-2354: Add CombineAvroKeyValueFileInputFormat in avro-mapred to combine small avro keyvalue files into combineSplit\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.reduce(Text,Iterable,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.ZstandardCodec.ZstandardCodec(int,boolean)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.specific.TestSpecificCompiler.assertCompiles(Schema,boolean)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.testAvroInput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.MapReader.read(Object,Decoder)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.getChannel()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.mapred.AvroWrapper.datum()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testUnionWithCollection()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.TestMetadataFiltering.testMetadataFiltering()": "AVRO-1242. Java: Fix AvroTrevniOutputFormat to correctly get file metadata from JobConf.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1443604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.AnotherSampleRecord(Integer)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CallbackToResponseStreamObserverAdpater.CallbackToResponseStreamObserverAdpater(Callback)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.FixedBuilder.size(int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.FloatTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.transceive(List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(byte,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceTiming.TraceTiming(Long,Long,Long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.read(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.getSymbol(Schema)": "AVRO-2627: Unify NullPointerException Management\n", "org.apache.avro.OptionalCompletion.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.writeTo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataBlock.DataBlock(ByteBuffer,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.readStatus()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestEncoder.writeDouble(double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.readExternal(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.EnumDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestCases.checkRead(Schema,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.BasicState.newEncoder(int,OutputStream)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.Perf.GenericReaderWithPromotionTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.readInt()": "AVRO-354. Performance improvement to BinaryDecoder.readInt()\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@903266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TrevniRuntimeException.TrevniRuntimeException(Throwable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingValueWriter.writeBoolean(boolean)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.openReader(SeekableInput,DatumReader)": "AVRO-2127: throw more specific exceptions from DataFileStream#initialize (#323)\n\n* AVRO-2127: throw more specific exceptions from DataFileStream#initialize\r\n\r\n* AVRO-2127: throw more specific exceptions from DataFileReader12\r\n", "org.apache.avro.protobuf.Foo.create()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getUnknownFields()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.TimeConversions.toLong(LocalDateTime,Schema,LogicalType)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.respond(Message,Object)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.compareTo(ping_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.size(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.echo()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.unsetByteField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.isCustomEncoded()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getAverageBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectResponder.ReflectResponder(Protocol,Object)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.run()": "AVRO-337. ant test-java fails in Cygwin due to CRLF v LF problem\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899885 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.DirectBinaryDecoder.init(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.stream(Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.multiplefiles.TestMultipleFiles.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestAvroMultipleInputs.validateCompleteFile(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setFixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.TestAllCodecs.generateTestData(int)": "[AVRO-2245] Improve java tests for compression codecs\n\n", "org.apache.avro.TestReflect.testRecordWithNull()": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getStringType(Schema)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.FieldBuilderBase.optionalLong(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.doReadBytes(byte,int,int)": "AVRO-1198. Java: Improve error message for malformed data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445325 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.floatWrittenWithUnionSchemaIsNotConvertedToLongSchema()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.io.DecoderTest.newDecoder(byte)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.resolveName(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getByteField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteArrayInputStream.ReusableByteArrayInputStream()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.hadoop.file.Reader.withDataModel(GenericData)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.TestStateEncode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.ReflectRequestor.getClient(Class,Transceiver)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleSchema.DoubleSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_args.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addSyms(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.ServiceInvocationHandler.ServiceInvocationHandler(Channel,CallOptions,Protocol,ServiceDescriptor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setStringBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BooleanSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.GenericData.isMap(Object)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.echoBytes(ByteBuffer)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.jsonEncoder(Schema,OutputStream,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificRecordBase.compareTo(SpecificRecord)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.tool.TestDataFileTools.testGetSchema()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.getObjectProps()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getCodec()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.TestWordCount.testInputFormat()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.setCreateSetters(boolean)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.NullSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testGetRemote()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.createInputDataModel(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.SimpleImpl(AtomicBoolean)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaBuilder.size(int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.readArray(int,long,ResolvingDecoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericDatumReader.readField(Object,Field,Object,ResolvingDecoder,Object)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.TestNamespaceSpecific.testEcho()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.ByteBufferValueWriter.getBufferList()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooArrayOrBuilderList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.close()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.FieldBuilderBase.requiredMap(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.codec.CustomCodec.getName()": "AVRO-970. Java: Make Codec API public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.FooOrBar(FooOrBar)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.generateData(String,Type,Map,CodecFactory)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory,Map)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.DoubleTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroReducer.collect(OUT)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withReplicationFactor(short)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniUtil.input(String,InputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getEnumSymbols()": "AVRO-1493: Java: Schema fingerprint vary by locale\n", "org.apache.avro.io.BinaryDecoder.skipSourceBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectBigRecordTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.AbstractAvroMojo.compileFiles(String,File,File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestTraceSingletons.testInvalidDoubleConfiguration()": "AVRO-1152. Java: Fix TestTraceSingletons for Java 7.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroRecordReader.getPos()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.setDestdir(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilderBase.optionalBoolean(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.randomValues(String)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readDouble()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.withDefault(Object)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountGeneric.close()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.schemaWithExplicitNullDefault()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.transceive(List,Callback)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.EntryIterator.next()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BufferAccessor.detach()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceNodeStats.getMinTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestTemplatedCompilerFidelity.testSchemas()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.SpecificStatsReducer.cleanup(Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestDataFileMeta.testUseMetaAfterCreate()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.noopt.Test.setSint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.Histogram.getBuckets()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.doubleDefault(double)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.addIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.error()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecord.readExternal(java)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.buildPartial()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestCustomConversion.testNullValues()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.SaslSocketServer.isComplete()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.PropBuilder.prop(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.writeError(Schema,Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.RPCContext.getResponsePayload()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.readResponse(Schema,Decoder)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeArrayStart()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.inputPort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReferenceManager.getHandler()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeString(Object,ValueWriter)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReuseByteWriter.ReuseByteWriter(ByteBufferOutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.readDouble()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.toJson1(JsonGenerator)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.record.ResolvingRecordTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.avro.TestShredder.testPrimitives()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.isOptionalGettersForNullableFieldsOnly()": "AVRO-2745: Generate optional getters for nullables only (#817)\n\n", "org.apache.avro.specific.Builder.setI64(long)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.cancelPendingRequestsAfterChannelCloseByServerShutdown()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.checkRequired(Object,String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestBZip2Codec.testBZip2CompressionAndDecompression()": "AVRO-1326. Java: Fix bug in BZip2 codec.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480771 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.unbox(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.read(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.initialValue()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooFieldBuilder()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.NamedSchema.NamedSchema(Type,Name,String)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.writeValue(org)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.getTransceiver(SocketChannel)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.FloatHistogram.FloatHistogram(Segmenter)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileDeflate.testWriteAndRead()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionInt(String,int,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.AbstractSpecificRecordTest.verifySerDeAndStandardMethods(T,SpecificDatumWriter,SpecificDatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.deprecatedFields()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createField(String,Schema,String,JsonNode,boolean,Order)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.createMapReader(Schema,Container)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.Util.encodeHex(byte)": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.generic.Array.get(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.addRecordMapping(RecordMapping)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.hashCode()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.readExternal(java)": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.protobuf.M.valueOf(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.checkString(String,ValueReader,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericNestedFake()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.setNum1IsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRecordCountTool.testBasic()": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.thrift.test.Foo.start(I,ping_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.EndpointResponder.respond(Message,Object)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testFloatAsDoubleDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.ipc.reflect.ReflectResponder.writeError(Schema,Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.SequenceFileReader.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.DoubleTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.SpecificCompiler.compileSchema(File,File)": "AVRO-150. Java: fix compiler to not re-generate up-to-date code.  Contributed by John Yu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.Test(String,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Transceiver.transceive(List)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceTiming.getPostLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.withDataModel(GenericData)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.asciiBytesWrittenWithUnionSchemaIsConvertedToStringSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getDataModel()": "AVRO-1522. Java: Add support for compression codecs to SortedKeyValueFile.  Contributed by Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getNum1()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.Message(String,String,Schema,Schema,Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificLogicalTypes.testRecordWithJsr310LogicalTypes()": "Use RoundingMode for BigDecimal to avoid deprecation warning (Java > 9)\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.FieldBuilder.FieldBuilder(FieldAssembler,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.defaultRecordWithSchema(Schema,String,T)": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.protobuf.noopt.Test.clear()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.RecordWithOutOfOrder.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.read(org,add_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.BinaryMessageEncoder.encode(D)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.thrift.ThriftData.createDatumReader(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.Builder(TestRecordWithoutLogicalTypes)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.GenericDatumWriter.addAvroTypeMsg(AvroTypeException,String)": "AVRO-2514:Making Avro serialization error message more actionable with... (#685)\n\n* AVRO-2514:Making Avro serialization error message more actionable with field name\r\n\r\n* Update GenericDatumWriter.java\r\n\r\nUpdate to runtime exception\r\n\r\n* Update ReflectDatumWriter.java\r\n\r\n* AVRO-2514:Update GennericDatumWriter method", "org.apache.avro.ipc.trace.DiskWriterThread.run()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.isInitialized()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.util.ReusableByteBufferInputStream.read()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.protobuf.multiplefiles.M.parsePartialFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.RPCContext.getMessage()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.initFields()": "AVRO-1445. Java: Fix protobuf support to correctly handle enums with default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1561875 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.Test(String,String)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeFixed(byte,int,int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNullObjectProp()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.SchemaBuilder.unionInt(String,int,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.writerUnionAction()": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasFoo()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.report(Diagnostic)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestProtocolSpecific.testParamVariation()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.write(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.InternalFileOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-1266. Java: Fix mapred.AvroMultipleOutputs to support multiple different schemas.  Contributed by Ashish Nagavaram.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1467543 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeString(String)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ClassAccessorData.getAccessorsFor(Schema)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.clear()": "AVRO-2050: Clear Array To Allow GC\n", "org.apache.avro.SchemaBuilder.prop(String,JsonNode)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readString(Utf8)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooArrayOrBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Test.getDecoder()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithPromotionTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.DecoderFactory.validatingDecoder(Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.HttpTransceiver.HttpTransceiver(URL,Proxy)": "AVRO-1005. Java: Extend HttpTransceiver to permit specification of a Proxy.  Contributed by Craig Landry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241677 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.arrayType(Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.nextKeyValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroOutputFormat.write(AvroWrapper,NullWritable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getMetadata(FileSystem,Path,Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ByteBufferRecord.hashCode()": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.protobuf.multiplefiles.M.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileWriter.getByteArrayAsByteBuffer()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.setFieldValue(_Fields,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.clearNumber()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.testDouble()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestInduceMojo.tearDown()": "AVRO-1749 Java: Introduce induce Maven plugin goal (#70)\n\n", "org.apache.avro.io.ValueWriter.writeDouble(double)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parseFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.ByteBufferOutputStream.append(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.writeString(Schema,Object,Encoder)": "AVRO-1368. Fix SpecificDatumWriter to, when writing a string schema, not silently convert any object to a string.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1520141 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testRecordAll()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Referenceable.getName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.getDatumReader(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.Schema.add(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestAllCodecs.data()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificResponder.getDatumWriter(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testSkip_0(String,String,String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNullNamespaceAlias()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FooBarSpecificRecord.hasNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.runTestsInOrder()": "AVRO-926. Java: Fix tests to pass under JDK 7.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1235061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getCompressionType()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithDefaultTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.specific.SpecificRequestor.getDatumReader(Schema,Schema)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.MissingSchemaException.MissingSchemaException(String)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.ipc.trace.SpanAggregator.getTraceCollections(List)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,Integer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.TestBinaryDecoder.testBadLongEncoding()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUIDGenericRecord()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.hasLastName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.get(int)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtobuf.testEmptyArray()": "AVRO-2788: Default Proto repeated fields to empty arrays (#850)\n\nCurrently Avro<->Proto schema conversion could break compatibility\r\nThis PR fixes the issue by assigning empty arrays as default value\r\nFor more details, see the Jira at https://issues.apache.org/jira/browse/AVRO-2788\r\n\r\nCo-authored-by: Tianyu Lang <tianyu@squareup.com>", "org.apache.avro.io.BlockingBinaryEncoder.ensureBounds(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojo.appendElements(List)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.generic.GenericDatumReader.removeField(Object,String,int)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.ValidatingEncoder(Symbol,Encoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.HadoopCombiner.PairCollector(OutputCollector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.nullableString(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.completeField(Schema,JsonNode)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.reflect.TestReflect.testBoolean()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.FloatTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.tool.TestRpcProtocolTool.setUp()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReferenceableTypeFactory.fromSchema(Schema)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.mojo.SchemaMojo.getIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringSchema.StringSchema()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalArray(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.releaseEnterPermit()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.addFooArray(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "example.MapReduceColorCount.main(String)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parsePartialFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.EntryIterator.hasNext()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getValueAsString(String)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.ContainerAction.ContainerAction(Schema,Schema,Action)": "AVRO-2275 Some name cleanup, plus changes to make it easier to utilize Resolver.Action trees.\n", "org.apache.avro.Conversion.toBytes(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.isFastReaderEnabled()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.specific.SpecificRequestor.SpecificRequestor(Protocol,Transceiver,SpecificData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.compareTo(add_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Test.getI32Field()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.testReorderFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.clearFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.initialValue()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransportCodec.getDatas()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.tool.FromTextTool.getShortDescription()": "AVRO-567.  Add command-line tools for text file import and export.  Contributed by Patrick Wendell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956098 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.getFixedSize(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readLong()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "example.ColorCountMapper.map(User,AvroCollector,Reporter)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.toString()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeCachedField(long)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readEnum(Schema,Schema,ValueReader)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNames_GetWithNullNamespace()": "AVRO-1473. Java: Fix references to names in the empty namespace.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.initializeConnections(Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.mapred.tether.TetherJob.runJob(JobConf)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesDefault.bytesDefault(byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Ipc.createTransceiver(URI)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestLogicalType.testDecimalFromSchema()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testUndeclaredError()": "AVRO-573.  Java: Fix various bugs with undeclared RPC exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980187 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.TestMultipleFiles.registerAllExtensions(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificBuilderTree.createPartialBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.AbstractAvroMojo.loadLogicalTypesFactories()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.io.ValidatingDecoder.readFixed(byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getOptionalText(JsonNode,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.EnumSchema(Name,String,LockableArrayList)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.protobuf.Test.getParserForType()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.clearName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJsr310TimeConversions.testTimestampMillisConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInRecordInArray()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.netty.WriteFutureListener.WriteFutureListener(Callback)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.TestValidatingIO.InputScanner(char)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.response()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.MapImpl.close()": "AVRO-1120. Let AvroMultipleOutput jobs use multiple schemas with map-only jobs.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1356503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Response.Response(Request)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestConcatTool.numRowsInFile(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.thrift.test.Test.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.Builder()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.Builder(avro)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.DoubleTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.JsonEncoder.writeMapEnd()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.next()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcReceiveTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.toString()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.nullableFloat(String,float)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.writeSampleFile()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestCanonical.testCanonicalization()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeBytes(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.getErrors()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedBuilder.NamedBuilder(NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.handshake(Transceiver,ValueReader,ValueWriter)": "AVRO-2.  Optimized Java RPC handshake protocol.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@781125 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Perf.main(String)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.JsonDecoder.JsonDecoder(Symbol,InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyFrameDecoder.decode(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.netty.SSLChannelFactory.newChannel(ChannelPipeline)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.MetaData.setChecksum(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readString(Decoder,Class)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.TestTupleScheme.write(org,Test)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.getLastName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testMultiBinaryToJson()": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ArrayColumnOutputBuffer.writeValue(Object)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testNoPackageProtocol()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Company2.setEmployees(HashMap)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.CloningVisitor.CloningVisitor(PropertyCopier,boolean,Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.data.TimestampMillisConversion.adjustAndSetValue(String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.GenericResolving.GenericResolving(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getConversionByClass(Class,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.hasSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.M.parseDelimitedFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.TestUtf8.testByteConstructor()": "AVRO-340.  Add a constructor for Utf8 that accepts byte[].  Contributed by Jeff Hodges.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@906299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.buf()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.MapTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.test.record.TestStateEncode.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Message.isOneWay()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(GenericData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.DecimalRecordFixed.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.writeRecord(Schema,Object,Encoder)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.data.ObjectWriter.write(Object,Encoder)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.add(int,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.SpecificCompiler.initializeVelocity()": "AVRO-693. Java: Configure Velocity to use null logger.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1031797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.wrap(byte,int,int)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeIntField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.schemaFile()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.AvroAsTextInputFormat.listStatus(JobConf)": "AVRO-1234. Java: Permit AvroInputFormat to process files whose names don't end in .avro.  Contributed by Dave Beech & Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1550605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.CaseFinder.find(BufferedReader,String,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.setCountersEnabled(Job,boolean)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.createDataModel(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.SkipParser.skipTo(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.getTimestampBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Test.clearInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getForSchema(Schema)": "AVRO-2761: Prevent NPE when creating SpecificDatumReader/Writer (#831)\n\n", "org.apache.avro.protobuf.ProtobufDatumReader.ProtobufDatumReader(Class)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.header(StringBuilder,String)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestResponder.respond(Message,Object)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceNode.getPostLinkTimeString()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testDynamicSchemaWithDateTimeMicrosConversion()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.trace.TraceNodeStats.getRequestPayloads()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.IntPair.IntPair(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SchemaFingerprintTool.getName()": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.hadoop.file.Options.withPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.getCodec()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.init(OutputStream)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testReadUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.mergeFrom(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadLong.ReadLong()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.newRecord(Object,Schema)": "AVRO-2302 Fix invalid namespace on BigQuery import\n\nThis change fixes an issue when importing Avro files into BigQuery, when\nsuch files have been generated using `ProtobufData`. The schema\nnamespace may end in a dollar sign, if using nested classes.\n\nThe correction piggybacks on the fix provided for AVRO-2143 (#283). In\nit, `SpecificData` will attempt to load a class joining the namespace\nand the name with a dot, and if that fails, it tries again with a dollar\nsign.\n\nThe same behaviour is hereby reused for `ProtobufData`.\n", "org.apache.avro.mapred.TestReflectJob.map(Text,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestEncoders.testBadBlockintBinaryEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.assertThrows(String,Class,String,Callable)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setBool(boolean)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.M.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Resolver.RecordAdjust(Schema,Schema,GenericData,Action,Field,int,Object)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setF32(float)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ArrayDefault.ArrayDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestGenericJob.setup()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.SaslSocketTransceiver.getMechanismName()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.thrift.test.FooOrBar.findByName(String)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testEmptyEchoBytes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServerAvroHandler.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getValidateDefaults()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.union(Schema,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeInt(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.cancelPendingRequestsOnTransceiverClose()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.ThriftData.getFieldIds(Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkFixedSize(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TwoWayMessage.TwoWayMessage(String,String,JsonProperties,Schema,Schema,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.hadoop.io.AvroKeyValue.get()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addAllSyms(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.getFooArrayOrBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestNonStringMapKeys.testGenericDatumRead(String,byte,T[])": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificDatumReader.setField(Object,String,int,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapper.toString()": "AVRO-1232. Java: Add a toString() method to AvroWrapper so that it works with TextOutputFormat.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435355 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.makeProduction(Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Parser.addTypes(Map)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockedValue.check(BlockedValue,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R10.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileReadTool.getName()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SortReducer.reduce(Weather,Iterable,AvroCollector,Reporter)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Connection.Connection(SocketChannel)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibility.testUnionReaderWriterSubsetIncompatibility()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Builder.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.RecordBuilderBase.defaultValue(Field)": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Referenceable.addToSchema(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.fromByteBuffer(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.SchemaBuilder.defaultSymbol(String)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.trevni.avro.AvroColumnator.addColumn(String,ValueType,ColumnMetaData,boolean)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testAnnotationDuplicateFieldAvroMeta()": "AVRO-2375: Allow repeating AvroMeta use (#506)\n\n", "org.apache.avro.reflect.ReflectData.createSchema(java,Map)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R8.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testClassLoader()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroAsTextRecordReader.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.PrintingVisitor.visitNonTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.ipc.netty.NettyServerAvroHandler.exceptionCaught(ChannelHandlerContext,Throwable)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.ipc.stats.RenderableMessage.getCharts()": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.internalGetValueMap()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.basic.FloatTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.BinaryEncoder.writeEnum(int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.compatible()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getClassSchema()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.LocalTimestampMicros.LocalTimestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.io.ValidatingDecoder.readBytes(ByteBuffer)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestProtocolParsing.oneWayError()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.UnresolvedUnionException.UnresolvedUnionException(Schema,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.codegentest.TestLogicalTypesWithDefaults.testDefaultValueOfNullableField()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.reset()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedObjectArrayTest.ReflectNestedObjectArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.waitForFinish()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Action.Action(Schema,Schema,GenericData,Type)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.JsonDecoder.JsonElement(JsonToken)": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BytesTest.BytesTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.channelClosed(ChannelHandlerContext,ChannelStateEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificErrorBuilderBase.clearCause()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestUtil.createRandom()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.writeField(Object,Schema,Encoder,Object)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.SchemaBuilder.IntBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.testOutput()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.Company.setEmployees(HashMap)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.TestStateDecode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompilesWithJavaCompiler(File,Collection)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.multiplefiles.M.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.record.RecordTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.optionalArray(String,Schema,Collection)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.NodeComparator.compare(TraceNode,TraceNode)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.fieldsToJson(Names,JsonGenerator)": "AVRO-612. Java: Preserve field documentation when writing schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986957 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeField(Object,Field,Encoder,Object)": "ensure GenericDatumWriter specifies which field triggered an UnresolvedUnionException\n", "org.apache.avro.io.IntTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "example.ColorCountMapper.map(AvroKey,NullWritable,Context)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.AppendWriteException(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDecimalConversion.testToBytesFixedSmallerScale()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.util.WeakIdentityHashMap.setValue(V)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.RecordWriterWithCounter.write(Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.optionalFloat(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringLogicalType.FixedSizeStringLogicalType()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.thrift.test.ping_args.compareTo(ping_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.operationComplete(ChannelFuture)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.ipc.netty.NettyServer.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.test.basic.SmallLongTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.UnsafeCachedField.UnsafeCachedField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.getResult(I,zip_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.N(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyTransceiverThreadFactory.newThread(Runnable)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readArrayStart()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.RawMessageEncoder.RawMessageEncoder(GenericData,Schema,boolean)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.NettyDataPack.getDatas()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testReadLocalTimestampMillis()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ipc.netty.TestNettyServer.testOneway()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Test.unsetI64Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeRecord(Schema,Object,ValueWriter)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "example.MapredColorCount.main(String)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestRecord.equals(Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOF()": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSymsList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificDatumWriter.getSpecificData()": "AVRO-1368. Fix SpecificDatumWriter to, when writing a string schema, not silently convert any object to a string.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1520141 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.JacksonUtils.toJson(Object,JsonGenerator)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.createRecord(String,String,String,boolean,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.Array(int,Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.resolve(Schema,Schema,GenericData)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.CatTool.getName()": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.codec.CustomCodec.decompress(ByteBuffer)": "AVRO-970. Java: Make Codec API public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.IntegerHistogram.getMean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NullSchema.NullSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping.start(I,ping_args,org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.appendTo(SeekableInput,OutputStream)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.protobuf.noopt.Foo.getParserForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.getEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.checkOutputFormat()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testDecimalBytes()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.DoubleTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.TestSpecificRecordBuilder.buildWithoutSettingRequiredFields3()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.checkJson(Schema,Object,String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.RecordSchema.equals(Object)": "AVRO-685. Java: Fix Schema#equals() and hashCode() to not require exponential time for some recursive schemas.  Contributed by Richard Ahrens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1028539 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.TestSpecificCompiler.testPrivateFieldVisibility()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardLoader.input(InputStream)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.RecordSchema.toString(Names)": "AVRO-39.  Fix bug in Java record schema toString().  Contributed by sharad.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@779220 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addSyms(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.generic.GenericRequestor.getGenericData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.RecordWithStringUUID.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.createServerSSLContext()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(double,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testMap()": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Avro14SpecificCompiler.errors(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getProtocol(Class)": "AVRO-499. Java: Fix protocol reflection to reject interfaces with multiple methods of the same name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944035 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getSchema(Descriptor)": "Initialize the buffer area for Stringbuilder/List\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.TestResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "avro.examples.baseball.FieldTest.newBuilder()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.SchemaBuilder.optionalMap(String,Schema,Map)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.partitions()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.BytesTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Schema.writeProps(JsonGenerator)": "AVRO-601.  Java: Add per-field property support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982058 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.GenerateBlockingData.writeBlock(Encoder,FileOutputStream)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clear()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.thrift.test.Nested.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.DeflateCodec.getInflater()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.setKeyWriterSchema(Configuration,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseFrom(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSyms(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.ThriftDatumWriter.ThriftDatumWriter(Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BasicState.getNullOutputStream()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestValidatingIO.extractInt(InputScanner)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.BooleanWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.ResolvingAction(Symbol,Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimeConversions.toLong(Instant,Schema,LogicalType)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.mapreduce.AvroFiles.createFile(File,Schema,T[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordWriter.initSchema(TaskAttemptContext)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestDescriptor.TestDescriptor(Class,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.isRepeater(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.doGet(HttpServletRequest,HttpServletResponse)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessor.supportsIO()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clone()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.applyConversions(Schema,FieldReader,Conversion)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.io.BinaryEncoder.encodeString(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NullSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsNotConvertedToIntSchema()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.SchemaBuilder.intType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.requiredRecord(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.getWriter()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.mapred.TestAvroTextOutputFormat.testAvroTextRecordWriter()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.hadoop.io.Options.getBufferSizeBytes()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.BlockingSimpleImpl.hello(String)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.greeting()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.M.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Pair.Pair(CharSequence,Object)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.dump(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSerialization.roundTrip(Schema,T,Class)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificData.getForClass(Class)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.TestSchema.check(String,String,Object,boolean)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.wrap(byte,int,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.BlockingBinaryEncoder.check(BlockedValue,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolHttps.createTransceiver()": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testDisableUnsafe()": "Fix test\n", "org.apache.avro.FieldBuilder.defaultValue(Object)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateHasMethod(Schema,Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.slurp(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.consumeFieldAlias(Field,Schema)": "AVRO-2421 Allow multiple @AvroAliases annotations on classes and fields (#544)\n\n", "org.apache.avro.tool.TestDataFileTools.testWriteWithDeflate()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.specific.SpecificCompiler.isCreateAllArgsConstructor()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.reflect.ReflectDatumWriter.instanceOf(Schema,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.getSpecificData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.checkBaseOutputPath(String)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.TimestampMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.convertToLogicalType(Object,Schema,LogicalType,Conversion)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCircularReferences.Reference(String)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TimestampMillis.TimestampMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.DeflateCodec.compress(ByteBuffer)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.Referenceable.Referenceable(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.getDeserializer(Class)": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.createRecordWithDefaultField(Schema)": "AVRO-1954 - Schema.Field.defaultVal() generates: Unknown datum type org.apache.avro.JsonProperties$Null. Contributed by Nandor Kollar\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.ping_result.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderOneTimeUseTest.getReader()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.setField(Object,String,int,Object,Object)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.isStringable()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.SpecificRequestor(Class,Transceiver,SpecificData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.create(List)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectFloatArrayTest.ReflectFloatArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.stringBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.file.Reader.withPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.createString(Object)": "AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields (#703)\n\n* AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields\r\n\r\n* Update spotless check\r\n\r\n* Modify comment\r\n\r\n* AVRO-2438:Increase the deepcopy support of java-key-class\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.protobuf.noopt.Test.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.setIntArray(int,int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.generic.GenericTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.MetaData.getCodec()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.AsyncClient.ping_call(org,org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.JodaTimeConversions.toInt(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.codegentest.FixedSizeStringLogicalType.getMinLength()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "avro.examples.baseball.FieldTest.Builder(avro)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.mapred.WordCountUtil.writeLinesFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericDatumWriter.call()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.set(String,String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.configureAvroInput(JobConf)": "AVRO-698. Java: Add MapReduce tests and documentation for jobs that mix Avro and non-Avro data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1038314 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.Builder(TestRecordWithLogicalTypes)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SimpleImpl.hello(String)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.send_add(int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.EntryIterator.iterator()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSerializedSize()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Promote.Promote(Schema,Schema,GenericData)": "Applied splotless for reformatting sources\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Message.Message(String,String,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearD()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "example.MapReduceColorCount.run(String)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.zip.getResultHandler(AsyncFrameBuffer,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.MigrationWithDefaultTest.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.createDatumWriter(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.resetBufferTo(int)": "AVRO-820. Java: Permit applications to catch exceptions thrown while writing data to a file and then continue writing to that file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1124971 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isEnum(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.writeActiveRpc(Writer,RPCContext,Stopwatch)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.toString()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.withCodec(CodecFactory)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.BlockingSimpleImpl.releaseRunPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testArray()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testSkip_3()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testBadIntEncoding()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.DateAsLongEncoding.read(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.readBytes(byte)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.timestampMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.randomFor(Class,Random)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.get(String)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.trace.TracePluginConfiguration.TracePluginConfiguration()": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.TestStateEncode.randomString()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.EnumAdjust.EnumAdjust(Schema,Schema,GenericData,int,Object)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.trace.Trace.compare(TraceNode,TraceNode)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileRepairTool.getShortDescription()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearTs()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.ValidatingEncoder.setItemCount(long)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getEnumField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResult.reset()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.io.BlockingValueWriter.buffer()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readFixed(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.reset()": "Make elements of an array reusable again", "org.apache.avro.mapred.HadoopReducerBase.configure(JobConf)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.readFrameAndUnwrap()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.NullCodec.compress(ByteArrayOutputStream)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransportCodec.encode(ChannelHandlerContext,NettyDataPack,List)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.tool.Util.codecFactory(OptionSet,OptionSpec,OptionSpec,String)": "AVRO-2461: Add compression level support to fromjson and recodec (#576)\n\n", "org.apache.avro.Conversions.fromFixed(GenericFixed,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.FsInput(Path,Configuration)": "AVRO-1144 Deadlock with FSInput and Hadoop NativeS3FileSystem\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1508713 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.ReflectRequestor(Class,Transceiver)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Request.Request(String,Object,RPCContext)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.newReader(GenericData,Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ExtendedEnumTest.mkSchema(String)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPublicDeprecatedFieldVisibility()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.trevni.avro.Params.setModel(GenericData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readUtf8(Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.record(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectDoubleArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getExecutionPathHash()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(String,Schema,String,Object,Order)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.protobuf.noopt.Test.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestLogicalType.testLogicalTypeEquals()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.TestResolvingGrammarGenerator(String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsUnionOnRecord()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.protobuf.Test.mergeFrom(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.ResolvingAction.ResolvingAction(Symbol,Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.GenericRecordBuilder(Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.AvroColumnWriter(Schema,ColumnFileMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificToFromByteArray.testSpecificByteArrayIncompatibleWithLogicalTypes()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.BlockingSimpleImpl.releasePermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.InduceSchemaTool.getShortDescription()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.configureBlockSize(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithArray.setId(int)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(short,Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.generic.GenericData.getField(Object,String,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithArray.getRelatedIds()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.AbstractAvroMojo.getFieldVisibility()": "Change the default for generated fields to \"private\" so we aren't generated @Deprecated code by default\n", "org.apache.avro.codegentest.FixedSizeString.setValue(String)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.FooBarSpecificRecord.getNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.addFileset(FileSet)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.setTimestampMicros(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Test.getDefaultInstanceForType()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.parser()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericResponder.writeError(Schema,AvroRemoteException,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.Reader(Options)": "AVRO-2711: Use SLF4J Parameterized Logging for Debug Statements (#789)\n\n", "org.apache.avro.perf.test.record.TestStateDecode.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.next()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericOneTimeDecoderUse.GenericOneTimeDecoderUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.header(String)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getDecimalValue()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.slurp(File)": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.testPayloadSize()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestSchema.check(File,String,String,Object,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCompare.testFixed()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit6()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.DoubleBuilder.create(Completion,NameContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericData.reverse()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.Builder(BuilderParent)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroMarshaller.testAvroResponseReadPartialAndDrain()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.getBoundaryLabels()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.checkBinary(Schema,Object,DatumWriter,DatumReader)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.printBriefRecurse(List)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.isMap(Object)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.check(Object,String)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.IntBuilder.endInt()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.setNicknames(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.ZstandardCodec.compress(ByteBuffer)": "AVRO-2262 Java compression codec fixes. (#352)\n\nAVRO-2262 Java compression codec improvements", "org.apache.avro.grpc.AvroRequestMarshaller.stream(Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.Perf.RepeaterTest(String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableBufferedInput.PositionFilter(SeekableInput)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getValueClass()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.setFoo(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.removeAll(Collection)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Promote.resolve(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.newInstance(Class,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Client.getClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestImpl.hello(CharSequence)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.respond(List)": "AVRO-237.  More improvements to Java reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@884249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.internalGetFieldAccessorTable()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.toInt(LocalDate,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.tool.DataFileGetMetaTool.getName()": "AVRO-881. Java: Add a 'getmeta' tool that lists a file's metadata.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173848 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.DataFileReader.getCount()": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestImpl.echo(TestRecord)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestBasicTracing.NonRecursingResponder(Protocol)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.CompleteRecord.setName(CharSequence)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.Builder.getString()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.main(String)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.Nested(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.AvroGrpcServer.createServiceDefinition(Class,Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericDatumReader.readInt(Object,Schema,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.LengthLimitedInputStream.remainingInt()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.TestAvroCharSequenceComparator.testCompareString()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnator.simpleValueType(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificResponder.SpecificResponder(Protocol,Object,SpecificData)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.recordDefault(GenericRecord)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.ReflectData(ClassLoader)": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolverTest.testResolving()": "[add] resolution code using new reusable visitor.", "org.apache.avro.ipc.trace.TraceNodeStats.getMaxBytes(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOF_int()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.SleepyResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.noopt.Builder.setUint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.ping_result.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.getName()": "AVRO-368. Reserve avro.* in object container files, and \nrename existing reserved words.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@903362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(IntWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.assertEqualsTrue(String,Object,Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.M(com,com)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.IntSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestKeyValueInput.map(AvroKey,AvroValue,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.generateRepeaterDataArray(Encoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.WriterUnion.WriterUnion(Schema,Schema,GenericData,boolean,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.TestValueReader.testEOF_enum()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.setFields(Map)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.getBranch(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountSpecific.testJob()": "AVRO-521. Out of memory and other issues with Junit tests for mapreduce\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@937307 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.typeMismatch(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.Responder.handshake(Decoder,Encoder,Transceiver)": "AVRO-761. Java: Fix Requestor to not send client's protocol redundantly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1079060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.initialize(InputStream)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingIO.data2()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcServer.UnaryMethodHandler(Object,Method)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.trevni.ColumnFileReader.getColumnCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.getNonConvertedReader(Action)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.Foo.clearUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ReaderWriter.ReaderWriter(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.sync(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeCachedField.supportsIO()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MapTest.writeInternal(Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.getParserForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.CustomDecimalConversion.toFixed(CustomDecimal,Schema,LogicalType)": "AVRO-2836 Generated java includes logical type conversions (#883)\n\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nIf the logical type is used for a Fixed type (potentially also Enum)\r\nthen it should check if there are any conversions used, and\r\ninclude in the generated java source\r\n\r\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nMove enum and fixed to use the javatype method, as if there is a\r\nlogical type conversion it will be picked up and remove a\r\ncode path", "org.apache.avro.ipc.trace.DiskWriterThread.assureCurrentWriter()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeString(Object,Encoder)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroRequestMarshaller.AvroRequestMarshaller(Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.file.DataFileStream.DataFileStream(DatumReader)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R10.toString()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testClassLoader()": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testUnionWithEnum()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaCompatibility.getWriterFragment()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestDataFile.readFile(File,DatumReader,boolean)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestWordCount.testOutputFormat()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.initializeVelocity()": "AVRO-2600: Swap to new properties in Velocity Engine\n\nFollowing the migration guide at the Velocity documentation\nhttps://velocity.apache.org/engine/devel/configuration-property-changes-in-2.1.html\n", "org.apache.avro.compiler.specific.TestTemplatedCompilerFidelity.debug(String,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.skipString()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingEncoder.depth()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setError(Exception)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testCap()": "AVRO-269.  Use java compielr to validate specific compiler's output.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894929 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.getFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.thrift.test.Foo.getNum2()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearString()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,Float)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.AvroGrpcUtils.skipAndCloseQuietly(InputStream)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.generic.GenericData.get(String)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopReducerBase.close()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setInt64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Test.getFooFieldBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.ByteBufferOutputStream.write(ByteBuffer)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setDataModelClass(JobConf,Class)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.skipMap()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getDoc()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroTextOutputFormat.write(K,V)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingTable.makeUnionProduction(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.isComplete()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.BlockingValueWriter.writeMapEnd()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.getValueWriterSchema(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.getPos()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeMapStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testBytes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionFloat(String,float,Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.encodeString(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDeserializer.getReaderSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setSint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.Utf8.compareTo(Utf8)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnknownAvroCodecException.UnknownAvroCodecException(String)": "AVRO-2127: throw more specific exceptions from DataFileStream#initialize (#323)\n\n* AVRO-2127: throw more specific exceptions from DataFileStream#initialize\r\n\r\n* AVRO-2127: throw more specific exceptions from DataFileReader12\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasB()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.stats.SleepyResponder.respond(Message,Object)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.getTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.Pair.put(int,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.writeFooter()": "AVRO-134. Update data file format specification to include reserved metadata keys 'codec' and 'sync'.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@822827 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.setValidate(boolean)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.ping.ping()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectTest.genSourceData()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.hasSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIOResolving.dataForResolvingTests()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Builder.setString(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.record.TestStateDecode.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.file.DataFileWriter.write(byte,int,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSyms(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.clearTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.FooBarSpecificRecord.toByteBuffer()": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.tool.TestCreateRandomFileTool.testStdOut()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.util.WeakIdentityHashMap.values()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.FailingOutputStream.FailingOutputStream(int)": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.trevni.OutputBuffer.writeBytes(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.SimpleImpl(CountDownLatch)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.file.SeekableInputStream.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.hasT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.HttpTransceiver.HttpTransceiver(URL)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.getTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Builder.getDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.LongTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.Company2.getEmployees()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BytesTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.schema.CloningVisitor.copy(Schema,Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.mapreduce.TestWordCount.map(LongWritable,Text,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.ColumnFileWriter(ColumnFileMetaData,ColumnMetaData[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.printResult(PrintStream,boolean,TestResult,Test,String)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.protobuf.noopt.Test.getBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.Requestor.request(Request,Callback)": "[AVRO-732] Remove AvroRemoteException from generated interfaces\nPatch from Sebastien Launay applied\n", "org.apache.avro.TestReflect.testBoolean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.CaseFinder.processHereDoc(BufferedReader,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.outerSchema(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.addStringable(Class)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearSyms()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.GenericReaderOneTimeUseTest.GenericReaderOneTimeUseTest()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestIOExceptionDuringWrite.testNoWritingAfterException()": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.reflect.ReflectData.isStringable(Class)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionFieldBuilder(FieldBuilderBase,String,Schema,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.resolveRecords(Schema,Schema,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.BlockingSimpleImpl()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.ByteArrayByteSource(byte,int,int)": "AVRO-2341: Simplify ByteArrayByteSource Min Buffer Size\n", "org.apache.avro.SchemaBuilder.TypeBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.clear(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getReaderFor(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.io.ValidatingDecoder.skipProduction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.FixedBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setOutputValueSchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeBoolean(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.JsonProperties.getObjectProp(String)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NullDefault.nullDefault()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.PropBuilder.hasProps()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clearFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.TrevniCreateRandomTool.getName()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.JsonProperties(Set,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.parseDelimitedFrom(java,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.setCodec(CodecFactory)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceClientServlet.doGet(HttpServletRequest,HttpServletResponse)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.open(OutputStream)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.setDefaultGeneratedValue(Type,Object)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.specific.Builder.setD(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.file.DataFileWriter.setMetaInternal(String,String)": "AVRO-2308: Use Java StandardCharsets\n", "org.apache.avro.util.ByteBufferOutputStream.getBufferList()": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.protobuf.multiplefiles.M.valueOf(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Pair.Pair(Object,Float)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setFixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.EnumBuilder(String,String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyRecordReader.testReadRecords()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.fromByteBuffer(java)": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.io.GenericWithPromotion.GenericWithPromotion()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setFixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnValues.getRow()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.HadoopCodecFactory.getAvroCodecName(String)": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setInt64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setI16FieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.type()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearFooArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.errorType(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.LocalTimestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.io.DecoderFactory.binaryDecoder(byte,int,int,BinaryDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.TraceCollection(Trace)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.HandshakeMonitor.serverConnecting(RPCContext)": "AVRO-2581:Generate @Deprecated public attribute in Java (#669)\n\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(BytesWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.tearDownConnections()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.getDecoder()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.tool.Main.main(String)": "AVRO-263.  Change avroj command line tools to return exit codes.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894499 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.mkSchema(String)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.NamedBuilder.name()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.TestStateDecode.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.AvroSerializer.open(OutputStream)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.trace.TraceCollection.getMaxTime(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithOutOfOrderTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.trace.TraceFormationResults.TraceFormationResults()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TimeMillis.validate(Schema)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.RecodecTool.getShortDescription()": "AVRO-684.  Java: Add command-line recodec tool to change file compression codecs.  Contributed by Patrick Linehan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1037892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Buffer.skip(int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.HttpServer(Responder,String,int)": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.ensureIntArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.basic.StringTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.parsing.Symbol.toString()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.write(org,add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoNothing.DoNothing(Schema,Schema,GenericData)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.ValidatingEncoder.writeString(CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getDefaultInstanceForType()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.RecordSchema(String,String,boolean)": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.customEncode(org)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testClassPath()": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.LineCountMapper.setup(Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.Builder(BuilderParent)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getUtf8FromByteBuffer(Object,ByteBuffer)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.trace.TraceCollection.printRecurse(TraceNodeStats,int)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.TestTupleScheme.read(org,Test)": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.genSingleRecord(Random)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.UnionFieldTypeBuilder.bytesBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestBinaryDecoder.testEOFEnum()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithPromotionTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.NettyFrameDecoder.decodePackHeader(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getNewRecordSupplier(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.jetty.TestProtocolHttp.testStatelessOneway()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteNullableUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.DoubleTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.RecordBuilder.RecordBuilder(String,boolean)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeBoolean(boolean)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumReader.readString(Object,Decoder)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.setUp()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.mapred.HadoopMapper.close()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.toString()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.Perf.toString()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.doc(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnValues.startRow()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtoConversions.getLogicalTypeName()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.reflect.ArrayAccessor.readArray(float,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestByteBuffer.getmd5(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.trace.TracePlugin.getAllSpans()": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SeenPair.SeenPair(Object,Object)": "Applied splotless for reformatting sources\n", "org.apache.avro.reflect.TestReflectDatumReader.setRelatedIds(int)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testUnion()": "AVRO-108.  Add Java implementation of binary comparator.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@809680 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit1()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.thrift.test.Client.recv_ping()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.createEnum(String,Schema)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.doArrayNext()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.createDatumReader(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parseFrom(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TypeBuilder.nullable()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SSLChannelPipelineFactory.createServerSSLContext()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setSyms(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.NullBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.get(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.encodeLong(long,OutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDeserializer.AvroDeserializer(Schema,Schema,DatumReader)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.writeRecord(Schema,GenericData)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.JsonDecoder.init(InputStream)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroTextRecordWriter.AvroTextRecordWriter(DataFileWriter,byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.RecordWithDefault.readInternal(Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleInputs.fromBase64(String)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.acquireEnterPermit()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BooleanBuilder.BooleanBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeString(String)": "AVRO-668.  Java: Reduce object allocations while writing strings.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@999556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.RecursingResponder(Protocol,RPCPlugin)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.TestRecordWithLogicalTypes(java,java,java,java,java,java,java,java,java,java)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.Schema.create(Type)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilder.orderIgnore()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordReferenceBuilder.namespace(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(byte)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.HttpTransceiver.getRemoteName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.setInt32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getD()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.multiplefiles.Builder.hasSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDataFileConcat.testConcateateFiles()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,GenericContainer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.RandomData(Schema,int,long,boolean)": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.ipc.generic.GenericResponder.getGenericData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Options.getOutputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getBinaryValue(Base64Variant)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.file.DataFileWriter.setMetaInternal(String,byte)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.R3.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.enumRecordWithExtendedSchemaCanBeReadWithOriginalEnumSchemaIfOnlyOldValues()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.UnionAccumulator.UnionAccumulator(Completion,NameContext,List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Nested.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.Record(Record,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BytesTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.fromByteBuffer(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.TestSchemaCompatibilityReaderFieldMissingDefaultValue.data()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.RecordTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopReducerBase.reduce(AvroKey,Iterator,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.Fixed(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificDatumReader.readRecord(Object,Schema,Schema,ValueReader)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.instanceOf(Schema,Object)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.readBytes(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.createSchema(Type,Map)": "AVRO-942. Java: Fix reflect so that @Nullable fields have a default value of null.  Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1188382 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedLargeFloatArrayBlockedTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeFixed(byte,int,int)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.addProp(String,Object)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.io.ValueWriter.writeBytes(ByteBuffer)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testDynamicSchemaWithDateTimeMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.io.ResolverTest.ResolverTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setBoolField(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.echo(TestRecord)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.Message.Message(String,String,Map,Schema)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Count.Count(long)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericWithDefault()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testHandshakeOccursOnce()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRpcReceiveAndSendTools.testServeAndSend()": "AVRO-337. ant test-java fails in Cygwin due to CRLF v LF problem\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899885 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testGetJavaClassName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SimpleException.SimpleException(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.TestStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.generic.GenericRequestor.request(String,Object,Callback)": "[AVRO-732] Remove AvroRemoteException from generated interfaces\nPatch from Sebastien Launay applied\n", "org.apache.avro.reflect.TestReflect.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetDoubleField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isCreateSetters()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestResponder.TestResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.newDecoder(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setFloat(float)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testStopServer()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapBuilder.MapBuilder(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testPrimitiveParam()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ValidatingRecord()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.getSchema(Class)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.setString(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.bestBranch(Schema,Schema,Map)": "AVRO-1590. Java: In resolving records in unions, permit structural and shortname matches when fullname matching fails.  Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1628335 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.compile(Protocol)": "Fix so that specific code generation works under Eclipse.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764978 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileCustomSync.createDataFile(byte)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.tether.TetherJob.setProtocol(JobConf,String)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestByteBuffer.writeOneXAsAvro(Schema,ByteArrayOutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.textCloningCopyDocs()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherTask.collect(T)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.CompleteRecord.setBalance(long)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearF64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.testKeyOutputFormat()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.releaseRunPermit()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.tool.TestRecordCountTool.testFileDoesNotExist()": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.FieldAssembler.nullableBoolean(String,boolean)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.TestStateDecode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaUnboxJsr310DateTime()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Decoder.readFixed(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getWriter()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setHandshakeRequest(HandshakeRequest)": "AVRO-761. Java: Fix Requestor to not send client's protocol redundantly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1079060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.LengthLimitedInputStream.LengthLimitedInputStream(InputStream,long)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.order()": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.hadoop.io.AvroDeserializer.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.netty.NettyTransportCodec.setDatas(List)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.NettyTransceiver.get(long,TimeUnit)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNoDefaultField()": "AVRO-75.  Clarify that missing values with no default value are errors, and fix Java implementation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897316 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.renderActiveRpc(RPCContext,Stopwatch)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.getSetField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNested.GenericNested()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.compareTo(Nested)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.getBytes()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setInt32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaTypeWithJsr310DateTimeTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.addFooArrayBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumReader.newMap(Object,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.ReflectDatumWriter.isEnum(Object)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessor.isCustomEncoded()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceInvocationHandler.invokeUnaryMethod(Method,Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericDatumReader.createFixed(Object,byte,Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.addSpan(Span)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.getRecordSchema()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.checkReadWrite(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.setUp()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.BlockingValueWriter.writeString(Utf8)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnator.p(String,String,String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.M(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.ExternalizableOutput.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.TestStateEncode.mkSchema(String)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearT()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.BaseTypeBuilder.enumeration(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.getNum2()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testScan()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderUnion.firstMatchingBranch(Schema,Schema,GenericData,Map)": "Applied splotless for reformatting sources\n", "org.apache.avro.Schema.LongSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.compileSchema(File,File)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.TestProtocolSpecific.add(int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toLong(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumWriter.isRecord(Object)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testDynamicSchemaWithTimeMicrosConversion()": "AVRO-1957: TimeConversions do not implement getRecommendedSchema()\n\nThis closes #154\n\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.data.TimeConversions.adjustAndSetValue(String,String)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.HttpServer.doPost(HttpServletRequest,HttpServletResponse)": "AVRO-129.  Add HTTP-based RPC client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820442 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.getAllEvents(Span)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.Foo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testR10()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.EnumBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.isInitialized()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.InteropTest.readFiles(DatumReader)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.setGettersReturnOptional(boolean)": "Squashed commit of the following:\n\ncommit 6a919437bff0977926b33cd56165994b22fbdf74\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Fri Nov 25 10:31:40 2016 +0100\n\n    AVRO-1961: Extra flag to replace the regular getters with getters that return an Optional\n\ncommit 91d58b5dba7562240a84f6885037f9c74dc973e6\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Tue Nov 22 17:23:18 2016 +0100\n\n    AVRO-1961: Java: Generate getters that return a Java 8 Optional.\n\nCloses #162\n", "org.apache.avro.io.Perf.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroUtf8InputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Options.getKeyClass()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ReferenceHandler.toRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.fireandforget(Message)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ResolvingTest(String,String,String)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.mapred.TestAvroOutputFormat.testSnappyCodecUsingHadoopClass()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.thrift.test.Processor.zip()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.hasFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.AvroInputStream.write(byte,int,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,Consumer,Consumer,EventLoopGroup,EventLoopGroup,EventLoopGroup)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.trevni.avro.RandomData.hasNext()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.readExternal(java)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList10()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapBuilder.build()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testSchemaExplosion()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalLong(String,long)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.getPartial()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.DecoderFactory.createBinaryDecoder(byte,int,int,BinaryDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithSSL.getPipeline()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.TestRecordWithoutLogicalTypes(java,java,java,java,java,java,java,java,java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.Utf8LineRecordReader.close()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getCodec()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.Schema.computeHash()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectionBasesAccessorCustomEncoded.write(Object,Encoder)": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BytesTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyComparator.compare(AvroKey,AvroKey)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.stringBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.RandomData.iterator()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.isDone()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.writeError(Schema,Object,Encoder)": "AVRO-573.  Java: Fix various bugs with undeclared RPC exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980187 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeNull()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.getWithDefault(Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.IdentityResponder.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.parseProps(JsonNode)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSettersCreatedByDefault()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.reflect.TestReflect.testR12()": "AVRO-1421. Java: Add an @AvroSchema annotation to reflect.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getNodeWithID(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.valueOf(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.RecordWriterFactory.create(Schema,CodecFactory,OutputStream)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getFloatValue()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.io.ValueReader.doSkipItems()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.AbstractSpecificRecordTest.deserialize(byte,SpecificDatumReader)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.io.JsonEncoder.writeLong(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.FloatTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.RecordBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.assertFileMatch(File,File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.BooleanWritableConverter.BooleanWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.LocalTimestampMicrosConversion.toLong(LocalDateTime,Schema,LogicalType)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ipc.AvroRemoteException.AvroRemoteException(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addFooArrayBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.M.parser()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.skipString()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.CheckList.addAndReturn(T)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapDefault.mapDefault(Map)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setIntArray(int,int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadLongSmall.ReadLongSmall(ReadInt)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Repeater(Symbol,Symbol[])": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RandomData.hasNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.buildPartial()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.test.basic.MapTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.tool.RpcSendTool.getShortDescription()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.intWrittenWithUnionSchemaIsConvertedToAllNumberSchemas()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.tool.Util.close(InputStream)": "AVRO-867. Java: Enable command-line tools to read data files from any Hadoop FileSystem implementation.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1470691 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipFixed64()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.FieldAssembler.nullableBytes(String,byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.read(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Conversion.fromFixed(GenericFixed,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.UnionCompletion(Completion,NameContext,List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.channelInactive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.protobuf.noopt.Test.ensureSymsIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestReflect.testR10()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.reduce(WordCount)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.nullableLong(String,long)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.isConnected()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufData.isArray(Object)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parseDelimitedFrom(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.CatTool.getShortDescription()": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.setNum2(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.Builder(BuilderParent)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroInputFormat.listStatus(JobConf)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.tether.TetherRecordReader.createKey()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.getFooOrBuilder()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.toString(ByteBuffer)": "AVRO-2308: Use Java StandardCharsets\n", "org.apache.avro.compiler.schema.Schemas.copyAliases(Schema,Schema)": "[add] incomplete implementation to use generic schema traverser.", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleResult(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.BytesWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSymsCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilderException.SchemaBuilderException(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.readFileSpans(File,List,long,long)": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.PrimitiveBuilder.PrimitiveBuilder(Completion,NameContext,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.processImplicitActions()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.dump(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.log(int,String,Throwable)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromDouble(Double,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldVisibilityTest.build()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.TestSchema.testFloatDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.compiler.specific.SpecificCompiler.addStringType(Schema)": "AVRO-2700: Change Java Collection Usage (#780)\n\n* AVRO-2700: Change Java Collection Usage\r\n\r\n* Apply spotless\r\n\r\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.compiler.idl.TestSchemaResolver.testGetUnresolvedSchemaNameError()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.protobuf.noopt.Foo.getFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificRecordBase.getSpecificData()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.read(Object,Decoder)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.TransceiverCallback(Request,Callback)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.LastChannelRememberingChannelFactory.newChannel(ChannelPipeline)": "AVRO-1407: Java: Fix infinite loop on slow connect in NettyTransceiver.  Contributed by Gareth Davis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641894 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getClassName(Schema)": "AVRO-809.  Fix reflect for classes that have no package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1124127 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.doubleBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.util.internal.Accessor.encode(Encoder,Schema,JsonNode)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.compiler.specific.SchemaTask.main(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectDatumReader.getId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.remove(Object)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Void)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setString(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.writeToDestination(File)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.testEmptyColumn()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.Referenceable(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.get(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testDynamicSchemaWithDateTimeConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.specific.SpecificExceptionBase.SpecificExceptionBase()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.getSpecificData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SSLChannelPipelineFactory.getAlgorithm()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.run()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.ReflectData.createDatumReader(Schema,Schema)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.DataBlock(ByteBuffer,long)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.buildCompany2()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.StringTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.encode(Encoder,Schema,JsonNode)": "Update Jackson to 2.9.7.  This changes a LOT of API's due to Jackson's package rename, but for the most part it's search/replace type changes\n", "org.apache.avro.protobuf.noopt.Test.getFooArrayOrBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestWordCount.testAvroMapOutput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_resultStandardScheme.write(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestParsingTable.makeArrayTestData(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.testToFromFixedPrecisionErrorAfterAdjustingScale()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSchemaWithDocs()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Writer.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readArrayStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.HttpServer(ResponderServlet,int)": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.NestedTupleScheme.read(org,Nested)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setSetFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.getNumber()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.ProtocolTask.getStringType()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.error()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.AllowNull.createFieldSchema(Field,Map)": "AVRO-432.  Add @Nullable annotation to Java reflect API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918770 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SchemaTask.doCompile(File)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getStringType()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.isSetBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.buildPartial()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.entries()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRemoteException.AvroRemoteException(Throwable)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReader.testForLeakingFileDescriptors()": "AVRO-2448: Make test for leaking FileDescriptors more resilient (#563)\n\n", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.trace.TraceNode.getLatencyTimeString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAvroAlias()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.getBufferSize()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessReflect.getField()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceClientServlet.collectAllSpans(List)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.map(AvroKey,NullWritable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.applyAliases(Schema,Map,Map,Map)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.ColumnMetaData.getParent()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.isNonStringMap(Object)": "[AVRO-2058] Fix issues with Utf8 keys maps being treated as non-strings\nThis closes #237\n\ncommit 8852da40e7a0ee58d9b027173a4972e7e71b432d\nAuthor: Sam Schlegel <git@lutin.us>\nDate:   Wed Jul 26 19:20:51 2017 -0700\n\n    Add failing test\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getDatumReader(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.EnumSymbol.compareTo(GenericEnumSymbol)": "AVRO-1327. Java: Make GenericEnumSymbol implement Comparable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480769 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCustomEncodedField.get(Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.RecordBuilder(String,boolean)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeFloat(float)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.hashCode()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.firstMatchingBranch(Schema,Schema,GenericData,Map)": "Applied splotless for reformatting sources\n", "org.apache.avro.TestReflect.testNoPackage()": "AVRO-809.  Fix reflect for classes that have no package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1124127 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.getName()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityMultiple.testMultipleIncompatibilities()": "AVRO-2400: Make schema resolution behave the same as previous versions (#526)\n\n* [AVRO-2400] Make schema resolution behave the same as previous versions\r\n\r\n* AVRO-2400 make same schema resolution changes to SchemaCompatibility\r\n\r\n* make style check happy\r\n\r\n* fix failing tests\r\n\r\n* AVRO-2400 fix checkstyle issue\r\n", "org.apache.avro.io.IntTest.IntTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroRecordReader.next(AvroWrapper,NullWritable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.data()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getSerializedSize()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.transceive(List,Callback)": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testSchemas()": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.FileExtensionFilter.accept(File,String)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.AvroWordCount.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.typeMismatch(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.thrift.test.add_result.getSuccess()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.toString(Object,StringBuilder)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.count(Utf8,Utf8,long)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "example.Map.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestReflect.testReflectFieldError()": "AVRO-887. Java: Improve reflection error message when a field is not found in a class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173842 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.orderIgnore()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.clearI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.TestReflectData.testGenericProtocol()": "AVRO-2357: Allow generic types in reflect protos (#490)\n\nAdds support for generic types in ReflectData for\r\nProtocols.", "org.apache.avro.compiler.specific.SpecificCompiler.setOptionalGettersForNullableFieldsOnly(boolean)": "AVRO-2745: Generate optional getters for nullables only (#817)\n\n", "org.apache.avro.ReaderUnion.resolve(Schema,Schema,GenericData,Map)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.file.LengthLimitedInputStream.read(byte)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.aliasesInSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReaderUnion.hasMatchError(Action)": "Applied splotless for reformatting sources\n", "avro.examples.baseball.FieldTest.getEncoder()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.generic.GenericData.getSchema()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.write(org,ping_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testMap()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.addAllFooArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherOutputService.fail(String)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.genavro.GenTest.run()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Transceiver.unlockChannel()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.optionalFloat(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.getDatumReader(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,Integer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.SequenceFileReader.tell()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.TestIOBuffers.testSkipNull()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.TimestampMicrosConversion.getConvertedType()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.trace.TestSpanAggregation.createClientSpan(ID,ID,ID,Utf8)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.init(OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.equals(ping_result)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Test.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteBufferInputStream.setByteBuffer(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.io.StringTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getWriterSubset()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.TestMain.testToolDescriptionLength()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withMetadata(Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Incompatibility.getType()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Foo.setFixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.basic.BooleanTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.put(int,java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.testKeyOutputFormat()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.join()": "AVRO-544.  Java: Add start() and join() methods to Server interface.  Contributed by hammer & cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@965658 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.validateInputStreamReads(InputStream,InputStream)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.test.generic.GenericNestedTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordReaderBase.initialize(InputSplit,TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Options.getIndexInterval()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.equals(Error)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.writeName(Names,JsonGenerator)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.findValueByNumber(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(Protocol,Object,SpecificData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.getDatumReader(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.specific.SpecificRequestor.getClient(Class,Transceiver)": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.RecordSchema.toJson(Names,JsonGenerator)": "AVRO-1655. Java: Fix NPE in RecordSchema#toString. Contributed by Lars Francke.\n\nThis also adds a variant of Schema.createRecord with a field list to\nallow callers to create valid record schemas in a single call.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1674398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.testRead()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.FooOrBar.equals(FooOrBar)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesDefault.BytesDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.JsonGrammarGenerator.generate(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.JsonEncoder.writeMapStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeFrom(org)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.noopt.M.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnMetaData.isArray()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeFloatField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readArray(Object,Schema,ResolvingDecoder)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RepeaterTest.getDecoder()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.getJsonProps()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedObjectArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseFrom(byte)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferAccessor.getLim()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.doubleType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.NonAvroOnlyMapper.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.RecordWithUUIDList.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.setValueWriterSchema(Configuration,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.putIfAbsent(String,JsonNode)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.util.WeakIdentityHashMap.containsValue(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CountingOutputStream.close()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.compiler.specific.TestTemplatedCompilerFidelity.testSchemas()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.BufferedFileOutputStream(OutputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Utf8LineRecordReader.getPos()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.EnumSchema(Name,String,LockableArrayList)": "AVRO-671. Check that type and field names conform to specified requirements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1005644 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testR3()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountSpecific.newWordCount(String,int)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.newThread(Runnable)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestTemplatedCompilerFidelity.writeToFile(File,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooBuilder()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testInt()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithOutOfOrderTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.TestBinaryDecoder.TestBinaryDecoder(boolean)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.StatsServlet.writeMethod(Writer,Message,FloatHistogram)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testRecursiveSchemaValidation()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.ResolvingDecoder.ResolvingDecoder(Object,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.Rec(Random)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ConcatTool.getName()": "AVRO-1250. Add a command-line tool to concatenate data files.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.equals(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ReferenceManager.set(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapred.Pair.compareTo(Pair)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.SchemaMojo.doCompile(String,File,File)": "Reverting AVRO-983 since it broke the build.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407424 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.IntDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.setModel(GenericData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroRecordReader.createValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RecordSchema.RecordSchema(Name,boolean)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setSint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherOutputFormat.write(TetherData,NullWritable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNames_GetWithInheritedNamespace()": "AVRO-1473. Java: Fix references to names in the empty namespace.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordReader.finishInitialization(ExecutionStep,Schema,InstanceSupplier)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.TestReflect.testAvroEncodeInducing()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.advance(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,Double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.M(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.remove()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getEnumAction(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUIDMissingLogicalTypeUnsafe()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSequenceFile.testReadWritables()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.io.ReadLong.genData(Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.testToFromFixedSmallerScale()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.Parser.setValidate(boolean)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateClearMethod(Schema,Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readUnion(Object,Schema,Decoder)": "AVRO-29. Reverting changes to GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788481 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.writeBuffers(List)": "AVRO-1013. Java: NettyTransceiver can hang after server restart.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241761 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooFieldBuilder()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordWriter.write(AvroKey,AvroValue)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DeflateCodec.hashCode()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testDecimalFixedPrecisionLimit()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.fromSchema(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.Pair.Pair(Void,Double)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectionUtils.getOneArgConstructorAsSupplier(Class,Class,V)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.noopt.Foo.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Test.setDoubleField(double)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.InvalidAvroMagicException.InvalidAvroMagicException(String)": "AVRO-2127: throw more specific exceptions from DataFileStream#initialize (#323)\n\n* AVRO-2127: throw more specific exceptions from DataFileStream#initialize\r\n\r\n* AVRO-2127: throw more specific exceptions from DataFileReader12\r\n", "org.apache.avro.generic.TestGenericLogicalTypes.testReadDecimalFixed()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyValue.next()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.testLockedArrayList4()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BZip2Codec.getOutputBuffer(int)": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertIntWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.reflect.TestReflectLogicalTypes.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ValidateCanRead.validate(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.unsetNum1()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.convert(java)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.BinaryEncoder.init(OutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.getRecordSchema(Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ByteBufferRecord.setPayload(ByteBuffer)": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "avro.examples.baseball.FieldTest.setNumber(int)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.Conversion.getRecommendedSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.M(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.hasTokenId(int)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.UnionFieldTypeBuilder.doubleType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.DatagramTransceiver.readBuffers()": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.io.BlockingBinaryEncoder.buffer()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setFirstName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.hadoop.io.Options.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericStrings.GenericStrings()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeShortField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setTs(long)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.specific.TestSpecificData.testToString()": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingRecord.ValidatingRecord()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectIntArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.initialize()": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.addCustomConversion(Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.fieldAdjustAction(int,String,Set)": "AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema (#316)\n\n* AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema\r\n\r\nJsonDecoder doesn't honor aliases\r\n\r\n* No need to wrap aliases to unmodifiableSet, since getter Schema#aliases already does it\r\n\r\n* Remove unused import to pass Checkstyle check\r\n", "org.apache.avro.specific.SpecificCompiler.compileSchema(File)": "Fix so that specific code generation works under Eclipse.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764978 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getNamespace()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeBooleanField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isGettersReturnOptional()": "Squashed commit of the following:\n\ncommit 6a919437bff0977926b33cd56165994b22fbdf74\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Fri Nov 25 10:31:40 2016 +0100\n\n    AVRO-1961: Extra flag to replace the regular getters with getters that return an Optional\n\ncommit 91d58b5dba7562240a84f6885037f9c74dc973e6\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Tue Nov 22 17:23:18 2016 +0100\n\n    AVRO-1961: Java: Generate getters that return a Java 8 Optional.\n\nCloses #162\n", "org.apache.avro.ipc.netty.NettyTransportCodec.decodePackHeader(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.ReduceImpl.reduce(String,Iterable,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericRecordBuilder.set(String,Object)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.SimpleImpl(AtomicBoolean)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.LocalTransceiver.transceive(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.serverReceiveRequest(RPCContext)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.doMapNext()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.Foo(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestImpl.add(int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.getConvertedLogicalType(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.AvroColumnReader.next()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.getConversionByClass(Class)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketTransceiver.getRemoteName()": "AVRO-2.  Optimized Java RPC handshake protocol.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@781125 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.cases()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.avro.TestWordCount.map(String,AvroCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestReflect.testProtocol()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readFixed(byte)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.encodeDouble(double,byte,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.OutputBuffer.writeLength(int)": "AVRO-1229. Add support for booleans to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435314 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibility.ReaderWriter(Schema,Schema)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.set(String,byte)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.BinaryDecoder(int,InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkBlockingBinary(Schema,Object,DatumWriter,DatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimestampMicrosConversion.adjustAndSetValue(String,String)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.EnumSchema.EnumSchema(Name,String,LockableArrayList,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroJob.getOutputKeySchema(Configuration)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.UnsafeLongField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.readArray(double,long,ResolvingDecoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeIntField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.tool.TestCatTool.testDifferentSchemasFail()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SaslParticipant.SaslParticipant(SaslServer)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.read(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getOrCreateDefaultValue(Type)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.io.TestValueReader.testEOF_int()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.getDescriptor()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.addAllSyms(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.reflect.TestStateEncode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.file.Reader.getPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.BufferedBinaryEncoder.innerFlush()": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.getPos()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.requiredEnum(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.has(Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.has(String)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadBoolean.ReadBoolean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setB(boolean)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.Fixed.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Error.readObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory,ExecutionHandler)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.newBuilder()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.TestCompare.render(Object,Schema)": "AVRO-108.  Add Java implementation of binary comparator.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@809680 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.isValid(Schema,Schema)": "Applied splotless for reformatting sources\n", "org.apache.avro.mapred.HadoopReducer.getReducer(JobConf)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.DoubleWritableConverter.DoubleWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.getFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.ByteWritableConverter.ByteWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.getMessage()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.getData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.SequenceFileRecordReader.SequenceFileRecordReader(JobConf,FileSplit)": "AVRO-662. Java: Add support for reading Hadoop sequence files as Avro data to MapReduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998354 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FloatBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.read()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.esc(Object)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingRecord.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getTimingAverage(Collection)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.equals(Object)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyTransceiverWhenServerStops.createMessage()": "AVRO-1154. Java: Fix NettyTransciever to not hang when the server is stopped.  Contributed by Bruno Dumon & Karel Vervaeke.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384514 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageDecoder.readFully(InputStream,byte)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.protobuf.multiplefiles.Foo.newBuilderForType(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.wrap(Completion)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.SimpleImpl.echoBytes(ByteBuffer)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.doCompile(File,File)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.setFieldValue(_Fields,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceNode.getMessageName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Field(String,Schema)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.build()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.trevni.MetaData.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FixedSchema.FixedSchema(Name,int)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.isError()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.ProtocolMojo.doCompile(String,File,File)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.reflect.ReflectDatumWriter.getField(Object,String,int)": "AVRO-78.  Fix Java reflect to work on non-public fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@794837 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlToSchemataTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.build()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.Util.spanInRange(Span,long,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyFrameDecoder.decode(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.add()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestingByteArrayOutputStream.flush()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearSyms()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TwoWayMessage.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroTestUtil.tempDirectory(Class,String)": "AVRO-1150. Java: Fix tests to create all temporary files in target directories.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1386824 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DoubleTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.testEnumDefaultAppliedWhenNoFieldDefaultDefined()": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.trevni.ColumnFileReader.readHeader()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Foo.getInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testAdditionalToolsAreInjectedIntoTemplate()": "AVRO-1762: Velocity custom objects (#524)\n\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nIt provides more flexibility when generating code with custom Velocity\r\ntemplates.\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nRebased on master\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nImproved unit tests\r\n\r\n* AVRO-1762: Velocity custom objects\r\n\r\nvelocityTools is now of type List<Object>\r\n", "org.apache.avro.Message.getResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SaslSocketTransceiver.setRemote(Protocol)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.echoBytes(ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.GenericDatumReader.readWithoutConversion(Object,Schema,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseFieldTypeBuilder.record(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testUnionResolutionNamedStructureMatch()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.Requestor.Request(Request)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.printHeader()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createRecordReader(RecordAdjust)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.noopt.Builder.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.R9_1.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Repeater.makeProduction(Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.setFoo(String)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.setMeta(String,byte)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Decimal.Decimal(int,int)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.compress(ByteArrayOutputStream,OutputStream)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearFooArray()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getSymsList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.createField(String,Schema,String,JsonNode,boolean,Order)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.TestSpecificCompiler.testSettersCreatedByDefault()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createArray(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFingerprint.TestFingerprint(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificDatumReader.createMap(Schema,Schema)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Slf4jLogChute.log(int,String,Throwable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.TestEncoder(Encoder,CountDownLatch,CountDownLatch)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyServerAvroHandler.channelClosed(ChannelHandlerContext,ChannelStateEvent)": "AVRO-1151. Netty Avro server should expose the number of connections currently open. Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383359 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.tell()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setF64(double)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestCircularReferences.put(int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.comp(byte,int,byte,int,Schema)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.start(I,add_args,org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtoConversions.toLong(Timestamp,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.SchemaBuilder.endBoolean()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.setLength(int)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.SchemasTest.textCloning()": "[add] resolution code using new reusable visitor.", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.makeContext()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearPosition()": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.read()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.M.clone()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.configure(TaskType,Utf8,Utf8)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.open(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getI64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.test.generic.GenericWithOutOfOrderTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroTextOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.run(List)": "AVRO-149.  Add Java command-line executable 'avroj'.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@830407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testOverloadedMethod()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.writeBalancesFiles(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.parsing.SkipParser.skipRepeater()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.populateDoubleArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.RecordMapping.RecordMapping(Schema,Class)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperSerializer.serialize(AvroWrapper)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.getJsonGenerator(OutputStream,boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.ReflectionBasesAccessorCustomEncoded.ReflectionBasesAccessorCustomEncoded(Field,CustomEncoding)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestVisitor.afterVisitNonTerminal(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.protobuf.Builder.clearBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testIntTooShort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.clear()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.doAction(Symbol,Symbol)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecificMeta.createTransceiver()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.generic.GenericRequestor.readResponse(Schema,Schema,Decoder)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.Perf.Foo(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SchemaNormalizationTool.getShortDescription()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.clearUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.TimestampMicrosConversion.getLogicalTypeName()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.LongBuilder.endLong()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Decimal.validate(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSerialization.getKeyWriterSchema(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.SaslSocketServer(Responder,SocketAddress)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.tool.RecordCountTool.getName()": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.thrift.test.Foo.isSetSuccess()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readBuffer(Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufData.getSchema(Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.addFooArray(int,org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LocalTimestampMillis.validate(Schema)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.reflect.TestReflectDatumReader.serializeWithReflectDatumWriter(T,Class)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.Pair.Pair(Long,Integer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testWriteOutOfSortedOrder()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceComparotor.compare(Trace,Trace)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.disconnect(boolean)": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testSpecificRecordToString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.WriterUnion(Schema,Schema,boolean,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.ipc.CompressionChannelFactory.CompressionChannelFactory()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.toString()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.customDecode(org)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.specific.TestSpecificData.setUp()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.FixedSizeString.equals(Object)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.trevni.OutputBuffer.writeDouble(double)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ProtocolTask.compile(File)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.InduceMojo.getClassLoader()": "AVRO-2365 Enhancements to maven-plugin induce goal\n", "org.apache.avro.ipc.SaslParticipant.wrap(byte,int,int)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.getCurrentRecord()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.skipFixed(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.getNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.set(String)": "AVRO-1199. Java: Fix SortedKeyValueFile to copy the key used to compare against next.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1409542 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FieldDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityMissingUnionBranch.data()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.Foo.Foo(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testCreateUnionVarargs()": "AVRO-1628. Java: Add Schema#createUnion(Schema ...) convenience method.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1651831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FloatBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.netty.NettyTransceiver.initChannel(SocketChannel)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.ResolvingTable.isEnumAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemas.ReaderWriter(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.thrift.test.zip_args.setFieldValue(_Fields,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.get(int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.GenericTest.genSourceData()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.FieldBuilderBase.unionEnum(String,Schema,CharSequence,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCompression.initializeServer(Responder)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniCreateRandomTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Schema.getType()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.Util.close(OutputStream)": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.compileProtocol(File,File)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteLocalTimestampMillis()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.map(LongWritable,Text,Context)": "AVRO-1418. Java: Add sync support to AvroMultipleOutputs.  Contributed by Deepak Kumar V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556378 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.setDefault(Schema,Field)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Field.addProp(String,String)": "AVRO-634.  IDL: Add support for aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@996649 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.getMechanismName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificCompiler.SpecificCompiler(Protocol)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testCompatible()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestBasicTracing.RecursingResponder(Protocol,RPCPlugin)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readInt()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setUint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.reset()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.TestBinaryDecoder.data()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeLong(long)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificFixed.SpecificFixed(byte)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.grpc.UnaryMethodHandler.UnaryMethodHandler(Object,Method)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.thrift.test.Foo.AsyncClient(org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.SameMapSignature.getMap1()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificExceptionBase.SpecificExceptionBase(Object,Throwable)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.DecimalRecordBytes.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setSfixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.MailImpl.fireandforget(Message)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.test.record.ValidatingRecordTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.test.basic.SmallLongTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.avro.TestShredder.testArray()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.Builder.clearInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.read()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasT()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleResult(ByteBuffer)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testRoundTrip()": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalBytes(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setStringBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.setDec(java)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.stats.StatsServer.StatsServer(StatsPlugin,int)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.hadoop.io.AvroSerializer.AvroSerializer(Schema)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getDoc()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Request.Request(Request)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.FieldAssembler(Completion,NameContext,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parseAliases(JsonNode)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.file.DataFileReader.computePartialMatchTable(byte)": "AVRO-2703: Use KMP Algorithm For Sync Marker Search (#782)\n\n* AVRO-2703: Use KMP Algorithm For Sync Marker Search\r\n\r\n* Use different implementation to compute partial match table\r\n\r\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.io.JsonDecoder.readByteArray()": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestAvroAsTextInputFormat.testSort()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.addNamedOutput(JobConf,String,Class,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.setInt32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.hasEnumSymbol(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "avro.examples.baseball.Player.getDecoder()": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.TestFsData.TestResponder()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.Decimal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Names.put(Name,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.map(BalancesRecord,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldTest.get(int)": "[AVRO-2278] getter semantics confusing. (#864)\n\n* [fix] getter semantics confusing.\r\n\r\nimpossible to distinguish between a correct field with the value null.\r\nand a nonsense field.\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [add] sync up exception behavior for consistency, and better messages.\r\n\r\n* [add] helper method.", "org.apache.avro.ipc.TestNettyServerWithCompression.CompressionChannelFactory()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.remove()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectResponder.ReflectResponder(Class,Object,ReflectData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.aliases(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.FieldBuilder(FieldBuilderBase,String,Schema,boolean,JsonNode)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.printBrief()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.setTemplateDir(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestKeyValueInput.testKeyValueInput()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.array()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyServer.getNumActiveConnections()": "AVRO-1151. Netty Avro server should expose the number of connections currently open. Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383359 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicState.getBatchSize()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.SimpleImpl.ack()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.testBadDocLabel1()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestValidatingIO.nextString(Random,int)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Json.read(JsonNode,Decoder)": "AVRO-924. Java: Support reading & writing arbitrary JSON data using an efficient Avro binary representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1185364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.generate(Schema,Random,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestCatTool.testLimitOutOfBounds()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBinaryDecoder.testEOFFloat()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setBool(boolean)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.Symbol.IntCheckAction(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory,ChannelPipelineFactory,ExecutionHandler)": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getB()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Foo.hasBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionBuilder.UnionBuilder(Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.datumFromFile(Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_call.getResult()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.TestStateDecode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.EnumBuilder.doc(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getField(Object,String,int,Object)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.thrift.test.Nested._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectData.testNonStaticInnerClasses()": "AVRO-2808: provide details while encountering non-static inner classes (#874)\n\n* AVRO-2808: ReflectData to provide details while encountering non-static inner classes\r\n\r\n* AVRO-2808: provide details while encountering non-static inner classes\r\n\r\n* AVRO-2808: improve tests\r\n\r\nThank you @Fokko for reviewing my code\r\n\r\n* AVRO-2808: improve code readability\r\n\r\n* AVRO-2808: fix Checkstyle violation for member variables", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.AvroKeyValueRecordWriter(AvroDatumConverter,AvroDatumConverter,GenericData,CodecFactory,OutputStream)": "AVRO-1344. Java: Expose sync interval configuration in mapreduce API.  Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1550852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.getCompatibility(String,Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.Foo.getFooArrayBuilderList()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.TestThrift.testStruct()": "AVRO-1500. Java: Fix bug in handling of Thrift shorts in unions.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601020 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.newBuilder(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.zip_args.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.getMapOutputKeySchema(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArraySchema.computeHash()": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.checkReadWrite(Object,Schema)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testReflectMatchStructure()": "AVRO-1590. Java: In resolving records in unions, permit structural and shortname matches when fullname matching fails.  Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1628335 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.put(int,java)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.TestNamespaceSpecific.testStartServer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.write(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.IntSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.flush()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.Error(Error)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testValidateSchemaNewFieldWithDefault()": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.clientReceiveResponse(RPCContext)": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testConcurrentClientAccess()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.AvroJob.configureAvroJob(JobConf)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.CompressionChannelFactory.newChannel(ChannelPipeline)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.ipc.specific.SpecificRequestor.readError(Schema,Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.write(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.segment(T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.isSetMessage()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Alternative.findLabel(String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojo.getIncludedFiles(String,String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalDouble(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.Writer(Options)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.setFieldVisibility(FieldVisibility)": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileReadTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-662. Java: Add support for reading Hadoop sequence files as Avro data to MapReduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998354 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeFloat(float)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readBoolean()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.createFieldSchema(Field,Map)": "AVRO-432.  Add @Nullable annotation to Java reflect API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918770 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.SpecificTest(String,String)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.orderDescending()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.openFromFS(String)": "AVRO-867. Java: Enable command-line tools to read data files from any Hadoop FileSystem implementation.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1470691 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPluginOverhead.createServer(boolean)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasI32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.tool.TestCatTool.testCat()": "AVRO-1787 Add support of directories & globs to concat and cat. Contributed by Cl\u00e9ment MATHIEU.\n\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.test.reflect.TestStateDecode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.tool.SinkResponder.SinkResponder(Protocol)": "AVRO-267.  Add two new avroj commands: rpcsend and rpcreceive.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.collect(T,int)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestDecimalConversion.testToBytesScaleError()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.protobuf.multiplefiles.Builder.getIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyTransceiver.disconnect(boolean,boolean)": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Test.setFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FooBarSpecificRecord.clearTypeEnum()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypesInArray()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.tool.DataFileRepairTool.recover(String,String,PrintStream,PrintStream,boolean,boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaCompatibilityResult.mergedWith(SchemaCompatibilityResult)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.JodaTimeConversions.toLong(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.protobuf.ProtobufData.getField(Object,String,int)": "AVRO-907. Java: Optimize access to protobuf message fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.setSerial(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFingerprint.testCanonicalization()": "AVRO-1493: Java: Schema fingerprint vary by locale\n", "org.apache.avro.TestNamespaceSpecific.error()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.isChannelReady(Channel)": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRequestor.GenericRequestor(Protocol,Transceiver)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AnotherSampleRecord.AnotherSampleRecord(Integer)": "AVRO-141.  Fix a NullPointerException in ReflectData#isRecord().  Contributed by Isabel Drost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Sequence(Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.releaseRunPermit()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaBuilder.optionalLong(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.onError(Throwable)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.tool.TrevniUtil.output(String,OutputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.customDecode(org)": "AVRO-2274 Improve resolving performance when schemas don't change. (#393)\n\n* AVRO-2274 Improve resolving performance when schemas don't change.\r\n\r\n* AVRO-2274 Break out of field-no-reorder loop as early as possible.\r\n", "org.apache.avro.ipc.trace.TestTraceSingletons.testValidDoubleConfiguration()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.reduce(Utf8,Iterable,AvroCollector,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.testUnionUnresolvedExceptionExplicitWhichField()": "ensure GenericDatumWriter specifies which field triggered an UnresolvedUnionException\n", "org.apache.avro.ipc.TestNettyServerWithSSL.testOneway()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.compareTo(Record)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReaderWriter.getWriter()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.ReuseByteReader(ByteBufferInputStream)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.load(java)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.echo()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.createFixed(Object,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.testAvroGenericOutput()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Field.Field(String,Schema,String,Object)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.mapred.WordCountUtil.writeLinesTextFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificBuilderTree.createBuilderFromInstance()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.getMeta(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.Record(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestInduceMojo.testInducedSchemasFileExtension()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.RecordWithUUIDList.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.getName()": "AVRO-2195: Add Zstandard Codec (Benson Qiu via Nandor Kollar)\n", "org.apache.avro.TestProtocolNetty.createServer(Responder)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readString(Object,Decoder)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.newBuilderForType()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnDescriptor.lastRow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestLogicalType.testDecimalFailsWithNegativePrecision()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.doAction(Symbol,Symbol)": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899195 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.newBuilderForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Names.add(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.add(int,T)": "AVRO-2310: GenericData Array Add Use JDK Copy Facilities\n", "org.apache.avro.protobuf.TestProtoConversions.createSchemas()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mapreduce.TestKeyValueInput.testKeyValueInputMapOnly()": "AVRO-1553. Java: MapReduce never uses MapOutputValueSchema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1614329 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.getPayloadSize(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.readField(Object,Schema,Object,ResolvingDecoder,Object)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectDatumReader.readObjectArray(Object,Schema,long,ResolvingDecoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parseFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.getTimestampOrBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mapred.Pair.equals(Object)": "AVRO-927. Java: Fix Pair#equals() to better compare schemas.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1185367 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.checkNumeric(String,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.clearFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "example.MapReduceColorCount.map(AvroKey,NullWritable,Context)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateSetBuilderMethod(Schema,Field)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getMessage(Method,Protocol,Map)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNestedFake.genSourceData()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Builder.clearSyms()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.create(Schema,Schema)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.ReflectData.isBytes(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setOutputKeySchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.BoolTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.setId(int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.netty.NettyTransportCodec.decode(ChannelHandlerContext,Channel,ChannelBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getF64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Message.addProp(String,String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipInt()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufData.isBytes(Object)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.Request(String,Object,RPCContext)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.visitNonTerminal(SchemaVisitor,Schema,Deque,Iterable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.init(InputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.aliasesToJson(JsonGenerator)": "AVRO-1016. Java: Add Field#getAliases() method to better permit copying of schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241665 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.localTimestampMillis()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "avro.examples.baseball.FieldVisibilityTest.setFavoriteColor(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.mapred.ReduceIterable.remove()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.noopt.Builder.clearFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.GenericNested.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestBasicTracing.respond(Message,Object)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.compactAndFill(byte,int,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.skipString()": "AVRO-2351: Long/Int in Binary Decoder\n", "org.apache.avro.io.Perf.RecordWithOutOfOrder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestNamespaceReflect.testStartServer()": "AVRO-544.  Java: Add start() and join() methods to Server interface.  Contributed by hammer & cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@965658 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.InteropTest.testGeneratedSpecific()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.compare(byte,int,int,byte,int,int,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.RandomData.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldVisibilityTest.FieldVisibilityTest(java,java,java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.IntBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.available()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.SpecificCompiler.writeToDestination(File,File)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.perf.test.basic.LongTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.TestWordCount.testAvroInput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Message.getRequest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.BinaryDecoder(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Promote(Schema,Schema,GenericData)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.mojo.AbstractAvroMojo.instantiateAdditionalVelocityTools()": "AVRO-1762: Velocity custom objects (#524)\n\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nIt provides more flexibility when generating code with custom Velocity\r\ntemplates.\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nRebased on master\r\n\r\n* AVRO-1762. Java: Put additional objects into Velocity template\r\n\r\nImproved unit tests\r\n\r\n* AVRO-1762: Velocity custom objects\r\n\r\nvelocityTools is now of type List<Object>\r\n", "org.apache.avro.hadoop.io.AvroSequenceFile.Reader(Options)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.getParserForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.SortMapper.map(Weather,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.LongTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Builder.setSfixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(Responder,String,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMicrosConversionSecondsLowerLimit()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(Responder,InetSocketAddress)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.ColorCountReducer.reduce(CharSequence,Iterable,AvroCollector,Reporter)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestProtocolNetty.createServer(Responder)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaPairCompatibility.SchemaPairCompatibility(SchemaCompatibilityResult,Schema,Schema,String)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.Builder(TestRecordWithJsr310LogicalTypes)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.trevni.BZip2Codec.decompress(ByteBuffer)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.io.Perf.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.LegacyBinaryEncoder.writeString(Utf8)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.getLocal()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.readBuffers()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.trace.SpanAggregator.getFullSpans(List)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.isSupportedData(GenericData)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.ProtobufDatumReader.createEnum(String,Schema)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getStringFromByteBuffer(ByteBuffer)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.TestReflect.testP2()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testSchemaWithNullFields()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.mapred.AvroOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-719. Java: Permit MapReduce programs to alter output file sync interval.  Contributed by Joe Crobak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056517 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryData.testSkipLong()": "AVRO-2698: Improve and Add Test for skipLong Method (#778)\n\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.protobuf.Test.parseDelimitedFrom(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.doReadItemCount()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.available()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.sync()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.codegentest.TestCustomConversion.init()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.trevni.InputBuffer.readFloat()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.ensureIntArrayIsMutable()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.clearCurrentToken()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.generic.GenericDatumReader.initialValue()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaBuilder.endRecord()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.reduce(Text,Iterable,Context)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.Schema.toString(Collection,boolean)": "AVRO-2822: Add toString that doesn't inline referenced schemas (#869)\n\n", "org.apache.avro.ipc.trace.TraceNodeStats.getAverageTime(SortedSet)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.maybeForceBuilderInitialization()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.StaticServlet.getResource(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.GenericReaderTest(String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketTransceiver.getRemote()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.TestIdl.slurp(File)": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Field(Schema,String,JsonNode)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithOutOfOrderTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getRecordMapping(Schema)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testPropOrdering()": "AVRO-906. Java: Fix so that ordering of schema properties is consistent.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179356 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeString(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.write(D,Encoder)": "AVRO-2356: Encoder Cannot Be Null\n", "org.apache.avro.generic.TestGenericData.testToStringRecursive()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.Perf.TestDescriptor(Class,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping.onComplete(Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeDoubleField.UnsafeDoubleField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericRecordBuilder.attemptToSetNonNullableFieldToNull()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectBigRecordTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getFieldValue(_Fields)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.RecordWithUUID.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestIOExceptionDuringWrite.write(int)": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.TestNettyServer.initializeConnections()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.specific.Builder.clearF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.DataFileInteropTest.testGeneratedGeneric()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.TestReflectLogicalTypes.getLogicalTypeName()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Client.send_zip()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriter.getReader()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.next()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Foo.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SimpleImpl.hello(CharSequence)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldDefault.FieldDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyFrameEncoder.getLengthHeader(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.ipc.netty.NettyTransceiver.disconnect(boolean,boolean,Throwable)": "AVRO-2711: Use SLF4J Parameterized Logging for Debug Statements (#789)\n\n", "org.apache.avro.mapred.WordCountUtil.writeLinesFile()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.LongWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteArrayInputStream.setByteArray(byte,int,int)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.reflect.ReflectDatumReader.readString(Object,Schema,Schema,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readEnum()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.SegmenterException(String)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.Builder()": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.generic.TestGenericData.testArrayConstructorWrongSchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.testSplitSchemaBuild()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.TestStateDecode.randomString()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.UUIDConversion.getConvertedType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.pos()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.toString(Names)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readInt()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.IntTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Builder.hasUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.hasUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.getWriter()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaNormalization.fillFPTable64()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.Foo(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCircularReferences.getName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.hashCode()": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getInitializationStage()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.BaseTypeBuilder.doubleType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.NullCodec.decompress(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(int,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.Params.Params(Input)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.textCloning()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.EnumSymbol.EnumSymbol(Schema,String)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.getName()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setBytes(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.FromTextTool.getName()": "AVRO-567.  Add command-line tools for text file import and export.  Contributed by Patrick Wendell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956098 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.read(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.makeParser(List)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.io.Perf.read()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TestWordCountTether.testJob()": "AVRO-912. Mapreduce tether test fails on Windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.OutputFile.writeToDestination(File,File)": "AVRO-150. Java: fix compiler to not re-generate up-to-date code.  Contributed by John Yu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.mkSkipAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.ReflectCountMapper.map(AvroKey,NullWritable,Context)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isBoolField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.hashCodeAdd(int,Object,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.Message(String,String,Map,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.io.FastReaderBuilder.createBytesReader()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.trevni.DeflateCodec.getDeflater()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isCustomCodable(Schema,Set)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.FieldAccessReflect.ReflectionBasesAccessorCustomEncoded(Field,CustomEncoding)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.copy(Schema,Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.generic.TestGenericLogicalTypes.write(Schema,D[])": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.validateIncompatibleSchemas(Schema,Schema,SchemaIncompatibilityType,String)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.specific.SpecificRecordBase.customDecode(ResolvingDecoder)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.reflect.ReflectResponder.writeError(Schema,AvroRemoteException,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.ReflectRequestor(Class,Transceiver,ReflectData)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Foo.add_args(add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.JsonEncoder(Schema,JsonGenerator)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DefaultDecoderFactory.configureDecoderBufferSize(int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getInputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.getScale()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NonCopyingByteArrayOutputStream.NonCopyingByteArrayOutputStream(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testReflectWithAllowNullMatchStructure()": "AVRO-1590. Java: In resolving records in unions, permit structural and shortname matches when fullname matching fails.  Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1628335 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericNestedFakeTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Resolver.Container(Schema,Schema,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.line(StringBuilder,int,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.testTraceAndCollectionDisk()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.OneWayUnaryMethodHandler.OneWayUnaryMethodHandler(Object,Method)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.UnionBuilder.UnionBuilder(List)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.writeRequest(Schema,Object,Encoder)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.checkFileContains(File,String[])": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestGeneratedCode.withoutSchemaMigration()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.ReflectTest(String,T,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.netty.NettyFrameEncoder.encode(ChannelHandlerContext,NettyDataPack,List)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.SchemaCompatibility.ReaderWriter(Schema,Schema)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.AvroCharSequenceComparator.compareCharSequence(CharSequence,CharSequence)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringFactory.fromSchema(Schema)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.perf.test.record.ValidatingRecordTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.generic.GenericRequestor.readError(Schema,Schema,Decoder)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.writeMapEnd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.zstandardCodec()": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.perf.test.record.RecordTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.InputBuffer.readFixed32()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.setPosition(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.GenericData.peek()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,Integer,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairPriorCorruptBlock()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.clearUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getKeyClass()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ReferenceManager.put(int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.findByThriftId(int)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.getCompatibility(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.thrift.test.Nested.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.size(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.getBinary(Schema,JsonNode)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.FieldBuilder(FieldBuilderBase,String,Schema,boolean)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.Processor(I)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordTest.RecordTest(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BZip2Codec.createInstance()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withDataModel(GenericData)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setUint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherJob.setExecutable(JobConf,URI,String,boolean)": "AVRO-912. Mapreduce tether test fails on Windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredBoolean(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.alt(Symbol,String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.OrderPlugin.serverSendResponse(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.hasLastName()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.newChannel(ChannelPipeline)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchemaCompatibility.testValidateSchemaNewField()": "AVRO-1576. TestSchemaCompatibility is platform dependant. Contributed by Stevo Slavic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1689621 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.startFile(String,String)": "AVRO-167.  Refactor Java SpecificCompiler to simplify testing, and add some tests.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@828117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.toString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.addField(Object,String,int,Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.ClassAccessorData(Class)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.populateDoubleArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "avro.examples.baseball.FieldTest.setTimeMicros(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.test()": "AVRO-1397. Java: Improve error message when missing field has no default.  Contributed by David Carr.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.SchemaMojo.getTestIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeInt(int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeLong(long)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection_noreducer()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.TestParsingTable.getRecordSchema(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.ping_args.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.MapTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.DoubleDefault.doubleDefault(double)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.open(boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.TestBulkData.printStats(long)": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.hasTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.netty.NettyServer.channelClosed(ChannelHandlerContext,ChannelStateEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyTransceiverWhenServerStops.testNettyTransceiverWhenServerStops()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapred.tether.TetherJob.setExecutable(JobConf,File)": "AVRO-2629: Use Java Collections and Arrays Utilities\n", "org.apache.avro.protobuf.noopt.Test.M(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaCompatibility.checkReaderEnumContainsAllWriterEnumSymbols(Schema,Schema,Deque)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.TestDataFile.testReadWithHeader()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.RecordWithUUIDArray.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,GenericContainer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testSkip3()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CreateRandomFileTool.getName()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testSchemaRejectsSecondLogicalType()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.skip(int)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericResponder.GenericResponder(Protocol,GenericData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Stringy.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.testSkip(int,int,String,int)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.tool.TrevniUtil.input(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtoConversions.getReflectedSchemaByName(String,Conversion)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withCompressionType(CompressionType)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testFloat()": "AVRO-108.  Add Java implementation of binary comparator.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@809680 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.main(String)": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.valueOf(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionFieldBuilder.UnionFieldBuilder(FieldBuilderBase,String,Schema,JsonNode,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testResponseChange()": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.XZCodec.getOutputBuffer(int)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairAllCorruptRecord()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlTool.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonElement.JsonElement(JsonToken,String)": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.applyAliases(Schema,Schema)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.deflateCodec(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getReaderFragment()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.specific.TestSpecificRecordBuilder.attemptToSetNonNullableFieldToNull()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestImpl.echoBytes(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.TestResponder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.setSfixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.data()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.addAllSyms(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.populateDoubleArray(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_argsStandardScheme.write(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.InMemorySpanStorage.InMemorySpanStorage()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.getFields()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.SpecificData(ClassLoader)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.compare(Object,Object,Schema,boolean,GenericData)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.EndpointResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.V1MessageEncoder.encode(D,OutputStream)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.generic.GenericDatumReader.createFixed(Object,Schema)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.privateFields()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_argsStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readEnum()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyFrameDecoder.NettyFrameDecoder()": "AVRO-1111. Malformed data can cause OutOfMemoryError in Avro IPC. Contributed by Mike Percy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroTestUtil.tempFile(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.InMemorySpanStorage.setMaxSpans(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.configure(TaskType,Utf8,Utf8)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsPluginOverhead.main(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileReader12.DataFileReader12(SeekableInput,DatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BooleanDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.SaslSocketServer(Responder,SocketAddress,SaslServerFactory)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.getField(Object,String,int)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addFooArray(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.reflect.TestStateEncode.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithSnappyCode()": "AVRO-1344. Java: Expose sync interval configuration in mapreduce API.  Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1550852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.configureBufferSize(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.evaluate(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ValidatingRecordTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.TestWordCount.testProjection()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.ReflectDatumReader.peekArray(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaNormalization.TestCanonical(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.skipFixed(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getValues(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.generic.GenericWithDefaultTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.Foo.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericData.hashCode()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getRecordSchema(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMillisConversion.getRecommendedSchema()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.idl.GenTest.slurp(File)": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setEnum(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.toJson1(JsonGenerator)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.ByteWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceClientServlet.doPost(HttpServletRequest,HttpServletResponse)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputFile.length()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.M.parseFrom(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.build()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasF32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.TaggedInputSplit.readFields(DataInput)": "Multiple static analysis fixes and code modernization\n", "org.apache.trevni.OutputBuffer.utf8Length(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectResponder.writeResponse(Schema,Object,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasDec()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.Test.Test(String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReader.getNumberOfOpenFileDescriptors()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufDatumReader.readRecord(Object,Schema,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.AvroRemoteException.getValue()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestSeekableByteArrayInput.getSerializedMessage(IndexedRecord,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReflectDoubleArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LongDefault.longDefault(long)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.channelActive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchemaNormalization.TestFingerprint(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestBasicTracing.TestResponder(Protocol)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.DecoderTest(String,String)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.javaUnbox(Schema)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.array()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Test.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.clearFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetEnumField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumReader.ThriftDatumReader(Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.UnaryMethodHandler.invoke(Object,StreamObserver)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(Class)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.isDone()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.FloatTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addAllSyms(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.ThriftDatumReader.ThriftDatumReader(Class)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDecimalConversion.testToFromBytes()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.trevni.ColumnFileReader.close()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiverThreadFactory.NettyTransceiverThreadFactory(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Foo.add_call(int,int,org,org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.EnumAdjust.EnumAdjust(Schema,Schema,GenericData,int)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.reflect.UnsafeDoubleField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.ServiceDescriptor.create(Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecific.hello(CharSequence)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFooOrBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherTaskRunner.input(ByteBuffer,long)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.create(Map)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderWithMigrationTest.GenericReaderWithMigrationTest(String,String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.Params(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setBytes(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.checkReaderWriterRecordFields(Schema,Schema,Deque)": "AVRO-2512: writerField is always null\n", "org.apache.avro.hadoop.io.Writer.getMetadataWithAvroSchemas()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.hashCode()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.createMessage(Message,Schema,Schema,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.io.JsonDecoder.readBoolean()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.TestProtocolHttp.createTransceiver()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestingByteArrayOutputStream.sync()": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.checkReaderWriterRecordFields(Schema,Schema,Deque)": "[AVRO-2368] Provide a Field.hasDefaultValue() method to determine if a default value it set or not\n", "org.apache.avro.generic.GenericDatumReader.readMap(Object,Schema,Schema,Decoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceManager.HijackingIndexedRecord(IndexedRecord,int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.readObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.intCheckAction(int)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsUnionOnFixed()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.TestCompare.check(Schema,Object,Object,boolean,DatumWriter,GenericData)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.SequenceFileReader.hasNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.MapImpl.map(Utf8,AvroCollector,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.FooOrBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.serialize(ValueWriter,JsonParser,ByteArrayOutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.cancel(boolean)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.getPartialInternal()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.DecoderFactory.binaryDecoder(InputStream,BinaryDecoder)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.netty.NettyTransceiver.newThread(Runnable)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.AvroKeyValue.remove()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Reader.read(JsonNode,Decoder)": "AVRO-924. Java: Support reading & writing arbitrary JSON data using an efficient Avro binary representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1185364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.TestStateEncode.randomString()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestReflect.testNullArray()": "AVRO-780. Java: Fix a NullPointerException with reflect data when a union contains an array and null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1087136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.getDeserializer(Class)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.ArrayBuilder(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.nullType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Iterator.Iterator(java)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketTransceiver.close()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.write(D)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.record.TestStateDecode.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.util.Utf8.Utf8(String)": "AVRO-340.  Add a constructor for Utf8 that accepts byte[].  Contributed by Jeff Hodges.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@906299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestResponder.TestResponder(Protocol)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.getDatumWriter(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.generateHasMethod()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.getFooArrayCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.isTerminal(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FooBarSpecificRecordTest.FooBarSpecificRecordTest()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testAllPriorCanRead()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.expand(int,int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.JodaTimeConversions.toInt(LocalDate,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ReaderWriterCompatibilityChecker.checkSchemaNames(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericRecordBuilder.clear(int)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getTimestampFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.hadoop.io.Options.withBlockSizeBytes(long)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ResolvingRecord()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithOutOfOrderTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.generic.GenericWithOutOfOrderTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.ValueReader.skipString()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getFieldAccessor(Class,String)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.ping()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericRequestor.readError(Schema,Decoder)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_call.getResult()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFooArrayOrBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestResolvingIO_resolving.TestResolvingIO_resolving(TestValidatingIO,int,String,String,Object,String,String,Object)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.resolveUnion(Schema,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBytes.InputBytes(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.newBuilder(TestRecordWithJsr310LogicalTypes)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.WritableData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FixedSchema.equals(Object)": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Skip(Schema,GenericData)": "Applied splotless for reformatting sources\n", "org.apache.avro.mapred.AvroWrapperDeserializer.AvroWrapperDeserializer(DatumReader,boolean)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.BufferAccessor(BinaryDecoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.hasTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "avro.examples.baseball.Player.setPosition(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.parsing.ImplicitAction.ImplicitAction(boolean)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getLastClearedToken()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.specific.SpecificCompiler.log(int,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.generate(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.basic.DoubleTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.file.DataFileStream.hasNext()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TransceiverCallback.handleError(Throwable)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.writeTo(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReflect.testMultiReflectWithUntionAfterWriting()": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.ProtocolTask.setStringType(StringType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.ColumnFileReader.readColumnMetaData(InputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.R1.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.SchemaResolver.resolve(Protocol)": "[add] AVRO-1723 and AVRO-1667", "org.apache.trevni.ColumnMetaData.hasIndexValues(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.Builder(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestLogicalType.testLogicalTypeInSchemaEquals()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "example.Map.map(LongWritable,Text,Context)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.assignDescriptors(com)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.CloningVisitor.visitNonTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Player.setNumber(java)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo.EmployeeInfo(String)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.longDefault(long)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroTextOutputFormat.toByteBuffer(Object)": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableBufferedInput.skip(long)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.populateDoubleArray(Random,int)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withBufferSizeBytes(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.NonParameterized.testBadDocLabel1()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.InputBuffer.InputBuffer(Input)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.clearUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.basic.ArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchemaCompatibilityTypeMismatch.testTypeMismatchSchemas()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.ValueReader.readIndex()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.encodeBoolean(boolean,byte,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.evaluateResponse(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.setNum2IsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.BufferedBinaryEncoder.BufferedBinaryEncoder(OutputStream,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestLengthLimitedInputStream.testRead()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.SingletonTestingTracePlugin.clearSingletonInfo()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithPromotionTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Builder.addAllFooArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TaggedInputSplit.getMapperClass()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithPromotionTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Builder.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.generic.GenericWithOutOfOrderTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.OutputBuffer.OutputBuffer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericDatumWriter.testArrayConcurrentModification()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.hadoop.io.Reader.getConfigurationWithAvroSerialization()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.ReflectRecordTest.ReflectRecordTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyValue.AvroKeyValue(GenericRecord)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.UnchangedUnionTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.netty.NettyTransceiver.createNettyClientAvroHandler()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.message.RawMessageEncoder.toBufferWithCopy()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.thrift.test.Test.getStringField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.data()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.requiredArray(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.clearFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceInvocationHandler.onError(Throwable)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.test.generic.GenericNestedTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.Builder.getI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.TestReflect.testMap()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.read(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroValueDeserializer.AvroValueDeserializer(Schema,Schema,ClassLoader)": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clone()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.ReduceImpl.close()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAvroDefault()": "AVRO-2143. Fix Java reflect to stop using dollar sign in namespaces of nested classes.\n", "org.apache.avro.thrift.test.Test.isSetSetField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NullBuilder.NullBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getTraceTimings()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testNoPackage()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.writeTests()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.Foo.setNum1(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.NamedBuilder.doc(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetheredProcess.TetheredProcess(JobConf,OutputCollector,Reporter)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringConversion.fromBytes(ByteBuffer,Schema,LogicalType)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.io.ParsingTable.isUnion(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setFavoriteColor(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.reflect.NoUnsafe.loadClass(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.valueOf(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCircularReferences.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.mapred.AvroWrapper.AvroWrapper(T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testFloat()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpTransceiver.writeBuffers(List,OutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.BasicState.newEncoder(boolean,OutputStream)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.FieldBuilderBase.unionBoolean(String,boolean,Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "example.Reduce.reduce(Text,Iterator,OutputCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setFoo(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.runTestsInOrder()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.skipElements(int,long)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.completeField(Schema)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.protobuf.Test.clearSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(boolean,Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.compiler.TestSpecificCompiler.tearDow()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.test()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroOutputFormat.testDeflateCodecUsingHadoopClass()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.GenericData.GenericData()": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testUnionWithBytes()": "AVRO-966. Java: Fix ReflectDatumWriter to be able to correctly write unions containing Collection and/or ByteBuffer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1211702 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectDoubleTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.ObjectWriter.setSchema(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.ArrayBuilder(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "example.MapredColorCount.map(User,AvroCollector,Reporter)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.AvroKeyValueRecordWriter(AvroDatumConverter,AvroDatumConverter,CodecFactory,OutputStream)": "AVRO-1162. Java: Extend AvroKeyValueOutputFormat to support reflection.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384600 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.generic.TestStateDecode.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ArrayBuilder.items(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.Builder()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.Foo.compareTo(ping_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ErrorTupleScheme.write(org,Error)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.writeInternal(Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestProtocolDatagram.createTransceiver()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.TestSpecificCompiler.testPublicFieldVisibility()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopMapper.collect(OUT)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.addRPCPlugin(RPCPlugin)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Parser.setValidateDefaults(boolean)": "AVRO-1449. Java: Optionally validate default values while reading schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564571 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.TestEncoder.writeNull()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testNamespaceNesting()": "AVRO-702. Java: Fix a bug printing nested record namespaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1040338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.mk(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificResponder.writeError(Schema,AvroRemoteException,Encoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificErrorBuilder.attemptToSetNonNullableFieldToNull()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.populateLongArray(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.compare(Decoders,Schema)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.getMap4()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.DatagramServer.main(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parse(File)": "AVRO-246 Java schema parser should take schema from InputStream in addition to file\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@888720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordReader.nextKeyValue()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.MapTest.MapTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.length()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.getDefaultInstance()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnValues.hasNext()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificDatumReader.createEnum(String,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SymbolTable.SymbolTable(Protocol)": "[add] resolution code using new reusable visitor.", "org.apache.avro.io.BinaryDecoder.trySkipBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.IntegerHistogram.getUnbiasedStdDev()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.ByteBufferInputStream.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.canReuse()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.LockableArrayList.remove(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooOrBuilder()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testReaderWriterCompatibility()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Error.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.SchemaBuilder.nullDefault()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestRpcPluginOrdering.send(Message)": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.HijackingIndexedRecord.put(int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.testInt()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.createEnum(String,Schema)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.copyAllProperties(Field,Field)": "[add] resolution code using new reusable visitor.", "org.apache.avro.io.BasicTest.getOutputStream()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Name.Name(String,String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.multiplefiles.Foo.getString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroTextRecordWriter.write(K,V)": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.compile(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.getSpecificData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.NullableBytesTest.NullableBytesTest(byte)": "AVRO-1401: @Nullable does not work with byte[]\n\nThis closes #229\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.SaslParticipant.unwrap(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.setField(Object,String,int,Object)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPluginOverhead.respond(Message,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testRecursiveRecord()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testManglingForEnums()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasTs()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.AvroMultipleOutputs.collect(String,Reporter,Schema,Object,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.equals(add_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.TestValidatingIO.nextBytes(Random,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.setField(Object,String,int,Object,Object)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.io.Buffer.pos()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.addConnector(Connector)": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpTransceiver.transceive(List)": "AVRO-340, AVRO-342: Define usage of HTTP as RPC transport in spec, and document that Java's socket and datagram transports are non-standard.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@906610 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getFileSystem()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setSfixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Builder.getSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestTemplatedCompilerFidelity.debug(String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.ToTextTool.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setFixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getOutputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.complete()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.Options()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readString(Object,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.unsetX()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setMapOutputKeySchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RecodecTool.getName()": "AVRO-684.  Java: Add command-line recodec tool to change file compression codecs.  Contributed by Patrick Linehan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1037892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.getDatumReader(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericDatumWriter.writeArray(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RandomData.randomBytes(Random,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SnappyCodec.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaType(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetStringField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BoolTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.findField(Class,String)": "AVRO-887. Java: Improve reflection error message when a field is not found in a class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173842 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.stringType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.setKeyReaderSchema(Configuration,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroOutputFormat.testBZip2CodecUsingHadoopClass()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.addIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FooBarSpecificRecord.setName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.TestValidatingIO.floatValue(Object)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericStringTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.EnumSchema.computeHash()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.Name.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaPairCompatibility.getReader()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testEnum()": "AVRO-22.  When parsing schemas in Java, do not permit anonymous.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777718 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testDecimalFailsWithZeroPrecision()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNames_GetNotFound()": "AVRO-1473. Java: Fix references to names in the empty namespace.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.writeHandshake(Encoder)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.Reference(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIntAsDoubleDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.test.BasicArrayState.BasicArrayState(int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Long)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.idl.TestIdl.GenTest(File,File)": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicState.BasicState()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.TestWordCount.testProjection(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapreduce.TestKeyValueWordCount.setup(Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MigrationWithDefaultTest.getDecoder()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TetherTool.getShortDescription()": "AVRO-663 Java build: Change build to create an avro-tools.jar that conforms to maven standards and contains dependencies within\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1059139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.ArrayBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setB(boolean)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.multiplefiles.M.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDecimalConversion.testToFromFixed()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.JoinableRecord.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testDefaultCodec()": "AVRO-2465: Fix wrong defalut values in the avro-tools' usage\n", "org.apache.avro.compiler.specific.SpecificCompiler.makePath(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.getNodeWithIDRecurse(int,TraceNodeStats)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherJob.setupTetherJob(JobConf)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.clearDec()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.Action.Action(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.ipc.stats.Stopwatch.stop()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.readResponse(Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.SaslSocketTransceiver.write(Status,String,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.generateServletResponse(StatsPlugin)": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableInput.ExternalizableInput(ObjectInput)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TimeMillis.TimeMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtobuf.testNestedEnum()": "AVRO-2302 Fix invalid namespace on BigQuery import\n\nThis change fixes an issue when importing Avro files into BigQuery, when\nsuch files have been generated using `ProtobufData`. The schema\nnamespace may end in a dollar sign, if using nested classes.\n\nThe correction piggybacks on the fix provided for AVRO-2143 (#283). In\nit, `SpecificData` will attempt to load a class joining the namespace\nand the name with a dot, and if that fails, it tries again with a dollar\nsign.\n\nThe same behaviour is hereby reused for `ProtobufData`.\n", "org.apache.avro.io.TestBinaryDecoder.newDecoderWithNoData()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipLong()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.ProtobufDatumWriter.ProtobufDatumWriter()": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.addLogicalTypeConversion(Conversion)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamespacedBuilder.namespace(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.check(String,T,T,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.TestShredder.testNestedArray()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.FastReaderBuilder.createUnionReader(WriterUnion)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.TestUtil.zstandardCompressionLevel(int)": "AVRO-2461: Add compression level support to fromjson and recodec (#576)\n\n", "org.apache.avro.tool.TestDataFileRepairTool.writeCorruptFile()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJodaTimeConversions.testTimestampMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.file.CodecFactory.toString()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.EnumAdjust(Schema,Schema,GenericData,int)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.thrift.test.add_args.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithList.getId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.bytesDefault(ByteBuffer)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.getCharts()": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readFieldIndex()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.get(String)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionCompletion.UnionCompletion(Completion,NameContext,List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.DeflateCodec(int)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getClient(Class,Transceiver,ReflectData)": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.tool.TestCreateRandomFileTool.run(List)": "AVRO-1597. Java: Random data tool writes corrupt files to standard out.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1637494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperDeserializer.close()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.PrimitiveBuilder(Completion,NameContext,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ExtendedEnumResolveTest.genSourceData()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.ipc.BlockingSimpleImpl.releaseEnterPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testWriter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LongSchema.LongSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Iterator.remove()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.Perf.main(String)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testMaxParameterCounts()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.hadoop.io.NullWritableConverter.NullWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.ReflectStatsReducer.setup(Context)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.FileExtensionFilter(String)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpTransceiver.writeLength(int,OutputStream)": "AVRO-129.  Add HTTP-based RPC client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820442 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getResolverActual(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecimalConversion.getLogicalTypeName()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.testImportanceOfEnsuringCorrectScaleWhenConvertingBytes()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.io.TestValidatingIO.skip(String,InputScanner,Decoder,boolean)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.codegentest.AbstractSpecificRecordTest.serialize(T,SpecificDatumWriter)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.thrift.test.add_args.deepCopy()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getMetaData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.IDLProtocolMojo.doCompile(String,File,File)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.stats.SingleBucketSegmenter.getBuckets()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.DirectBinaryDecoder.readLong()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.parseSchemaFromFS(String)": "AVRO-1715. Java: Close files opened by the Schema parser. Contributed by Pavel Safrata.\n\nThis also clarifies the InputStream parse method, which does not own the\nstream that is passed in and does not close it. The tools have been\nupdated to correctly close streams passed to the parser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1707389 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.createServerSSLContext()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.FooBarSpecificRecord.setTypeEnum(org)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.GenericData.compareTo(Array)": "AVRO-540. Java: Make GenericArray reversible.  Contributed by Eric Evans.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944026 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtoConversions.fromLong(Long,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.trevni.InputBytes.length()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectionUtil.validField(FieldAccess,String,Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufData.initialValue()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Schema.defaultVal()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroKeyValueRecordReader.AvroKeyValueRecordReader(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.AvroAsTextRecordReader.createValue()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.put(String,Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.clearTypeEnum()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.writeLinesTextFile()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.UnchangedUnionResolveTest()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.RandomData.remove()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.GenTest.run()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.SmallLongTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.LogicalTypes.timeMicros()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BytesTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.TestBinaryEncoderFidelity.testBlockingBinaryEncoder()": "AVRO-1457. Java: Fix Encoder so that offset in non-array-backed ByteBuffers is not altered when written. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.printResult(PrintStream,boolean,long,Test,String)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.CheckList.addAndReturn(Object)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityFixedSizeMismatch.data()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.AvroValue.AvroValue(T)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.RandomData.main(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Foo.readObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.SimpleImpl(CountDownLatch)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.ByteBufferTest.getmd5(File)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.write(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroKey.AvroKey()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.DatagramTransceiver.DatagramTransceiver(DatagramChannel)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputFile.read(long,byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DeflateCodec.Option(int)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toCharSequence(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.setFloat(float)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.Options.getReplicationFactor()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesDefault.bytesDefault(ByteBuffer)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableOutput.write(byte,int,int)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.respond(List,Transceiver)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TimestampMillisConversion.toLong(Timestamp,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.compiler.idl.SchemaResolver.copyProps(JsonProperties,JsonProperties)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.test.basic.FloatTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.idl.TestIdl.generate()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Conversion.fromInt(Integer,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.SimpleByteWriter.SimpleByteWriter(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.readObject(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.findDefaults(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.build()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getStructField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.EmployeeId2.getId()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceTiming.getComputeTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReflectedSchema()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.GenTest.GenTest(File,File)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FixedBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestDecimalConversion.testImportanceOfEnsuringCorrectScaleWhenConvertingFixed()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.Schema.readResolve()": "AVRO-1852: Make Java org.apache.Schema serializable (#589)\n\n* [add] [AVRO-1852]\r\n\r\n* AVRO-1852: Update unit tests with feedback.\r\n", "org.apache.avro.io.ResolvingDecoder.readBytes(ByteBuffer)": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.toString()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.value(V)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.WriteFutureListener(Callback)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.noopt.Foo.setBool(boolean)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.LegacyBinaryEncoder.encodeDouble(double,OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testNonStringMapKeysInNestedMaps()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.ValueWriter.encodeFloat(float,OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.testAvroSpecificOutput()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.generic.GenericRecordBuilder.clear(String)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createField(String,Schema,String,JsonNode)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.protobuf.Foo.getInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.A(int,int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiverThreadFactory(String)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.join()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.ReflectDatumWriter.writeArray(Schema,Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.findValueByNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.internalGetValueMap()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RandomData.main(String)": "AVRO-1287. Add data file with deflate codec to the interoperability test suite.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1467548 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setEnum(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.AppendWriteException.AppendWriteException(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.MapCompletion.outerSchema(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.util.WeakIdentityHashMap.getValue()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.supportsIO()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadInt.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readEnum()": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.perf.test.record.RecordTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.TestProtobuf.testClassNamespaceInMultipleFiles()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testDuplicateRecordFieldName()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Foo.write(org,zip_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.netty.NettyServer.channelRead0(ChannelHandlerContext,NettyDataPack)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.data.TimeMicrosConversion.fromLong(Long,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.getRefFieldName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getMetadataWithAvroSchemas()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.getClient(Class,Transceiver,ReflectData)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.getDatas()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testLong()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.setId(java)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.Codec.computeOffset(ByteBuffer)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.mapred.tether.TetherDataDeserializer.open(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.handleResult(T)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.BulkDataImpl.read()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldDefault.noDefault()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.makeRequest(Transceiver)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testDifferentSchemasFail()": "AVRO-1250. Add a command-line tool to concatenate data files.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.RecordTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.write_args(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.parse(String,boolean)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.forNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionFieldTypeBuilder.booleanType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicRecord.BasicRecord(Random)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.record.ResolvingRecordTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.ReflectData.createDatumReader(Schema)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.Test(boolean,byte,short,int,long,double,String,ByteBuffer,Map,List,Set,E,Nested)": "AVRO-948. Java: Fix to more correctly handle Thrift optional and nullable fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190627 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSyms(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.TreeMapSegmenter(SortedSet)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromBoolean(Boolean,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.hasS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.trevni.ColumnFileReader.getRowCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueWriter.writeIndex(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.reset()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeBooleanField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testSkip_2_blocking(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addAllIntArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.TestNettyTransceiverWhenServerStops.run()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.M.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.TestAvroSerializer.testSerialize()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SimpleImpl.SimpleImpl(CountDownLatch)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.getMapEntries(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BufferedFileOutputStream.BufferedFileOutputStream(OutputStream)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CountingOutputStream.write(int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.jetty.TestResponder.TestResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaValidatorBuilder.mutualReadStrategy()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.isFull()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.addFooArray(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestUnionSelfReference.testSelfReferenceInThreeUnion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LongBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.NonParameterized.testBadDocLabel2()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.Codec.get(MetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.IdentityResponder.IdentityResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.ColumnDescriptor.blockCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.TestInduceMojo.executeMojo(File)": "AVRO-1749 Java: Introduce induce Maven plugin goal (#70)\n\n", "avro.examples.baseball.FieldTest.clearTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(byte)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.EnumSymbol.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBlockingIO.testSkip_1(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectData.testCreateSchemaDefaultValue()": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.tool.TestCreateRandomFileTool.check(String[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.Util.openFromFS(Path)": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.PairCollector.PairCollector(OutputCollector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testNoPackageProtocol()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ArrayAccessor.readArray(char,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReadDouble.genData(Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherDataDeserializer.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.OptionalCompletion.OptionalCompletion(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.mangle(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testString()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.drainTo(OutputStream)": "AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0 (#635)\n\n* AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0\r\n\r\n* Import it from Guava instead\r\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.TestProtoConversions.testDynamicSchemaWithDateTimeMicrosConversion()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mojo.AbstractAvroMojo.execute()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BytesTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Object)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.IntTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.removeFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.Field(String,Schema,String,Object,Order)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.mapreduce.IndexMapper.map(AvroKey,AvroValue,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createMapKeyReader(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.data.TestTimeConversions.getReflectedSchemaByName(String,Conversion)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.Foo.onComplete(Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.ServiceInvocationHandler.invoke(Object,Method,Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.FieldAssembler.requiredLong(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.createDecoder(SchemaStore)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.mapred.WordCountUtil.writeLinesBytesFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.FieldBuilder(FieldBuilderBase,String,Schema,boolean)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericRecordBuilder.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.trevni.ColumnFileReader.getColumnMetaData(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkFixedSize(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.reflect.InduceSchemaTool.run(List)": "AVRO-154. Add 'induce' sub-command to avroj command line tool.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882410 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testLong()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.CodecFactory.addCodec(String,CodecFactory)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "example.GenerateData.main(String)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.createMessage(Message,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.mapred.SequenceFileReader.getSchema(java)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleError(Throwable)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.initialize(InputSplit,TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.hasBuilder(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.isClassPropEnabled()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.thrift.test.Client.Client(org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.skipArray(JsonParser,Decoder,int)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.unionMap(String,Schema,Map,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkReaderWriterRecordFields(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Foo.addAllSyms(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.FixedSizeString.FixedSizeString(String)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.thrift.test.Foo.write(org,add_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Parser.parse(String,String[])": "AVRO-1316. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480808 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.get(Object)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Json.write(Object,Encoder)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherKeyComparator.compare(byte,int,int,byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.getConvertedType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createRecord(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectionUtils.getConstructorAsFunction(Class,Class)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.compiler.schema.TestSchemas.visitNonTerminal(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.specific.SpecificCompiler.nullToEmpty(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createSimpleStringReader(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.TrevniCreateRandomTool.getShortDescription()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testReaderWriterIncompatibility()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.DirectBinaryEncoder.writeFixed(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.getNegotiatedProperty(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.SchemaCompatibility.checkSchemaNames(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.setByteField(byte)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.getCodec()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(ReflectData)": "AVRO-1240. Java: Fix SpecificDatumReader(Class) constructor to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442612 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.error()": "AVRO-1214 Use void instead of Void for RPC methods\n\n- one-way message use void but two-ways messages might use java.lang.Void\n", "org.apache.avro.SchemaBuilder.booleanType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumWriter.writeBytes(Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testDeeplyNestedNullNamespace()": "AVRO-1646: Print/parse consistency for nested null namespace (#724)\n\nFixes print-parse consistency for named types with null namespace,\r\nenclosed in named fields with null namespace, which are themselves\r\nenclosed in named fields with non-null namespace.\r\n\r\nCurrently, if a type specifies the null namespace, this overrides the\r\nenclosing non-null namespace for the purpose of naming that type, but\r\nnot for the purposes of determining the closest enclosing namespace for\r\nmore deeply nested types. This fixes that by removing special-casing of\r\nnull when setting the default namespace for recursively parsed schemas.\r\n\r\nAdapted from the patch that was submitted with the AVRO-1646 ticket.", "org.apache.avro.ipc.stats.FloatHistogram.getUnbiasedStdDev()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.AvroWrapperDeserializer(DatumReader,boolean)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.JodaTimeConversions.fromInt(Integer,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.netty.NettyTransportCodec.getLengthHeader(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.perf.test.reflect.TestStateDecode.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.tether.TetherOutputService.outputPartitioned(int,ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.getChildren()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileWriter.bufferInUse()": "AVRO-820. Java: Permit applications to catch exceptions thrown while writing data to a file and then continue writing to that file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1124971 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getS()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.TestWeather.testSort()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.AvroKeyOutputFormat()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testOnce(Schema,String,int,boolean)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.withKeyClassEnabled(boolean)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.SchemaBuilder.EnumDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteSource.available()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.ColumnValues.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ByteBufferRecord.equals(Object)": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.message.CustomSchemaStore.CustomSchemaStore()": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.TestSchemaValidation.testUnionWithIncompatibleElements()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.data.RecordBuilderBase.RecordBuilderBase(Schema,GenericData)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.fromByteBuffer(java)": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.Schema.createEnum(String,String,String,List,String)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.reflect.ByteBufferTest.test()": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.isValidDefault(Schema,JsonNode)": "AVRO-1449. Java: Optionally validate default values while reading schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564571 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.StringBldr.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.addDecimalAndUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.mangle(String,Set)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.getName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableByteArrayInput.length()": "AVRO-888. Java: Add SeekableByteArrayInput.  Contributed by Saleem Shafi.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173410 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.RecordSchema(Name,String,boolean)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapreduce.RecordWriterFactory.create(Schema,GenericData,CodecFactory,OutputStream,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit4()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.EmployeeId.setId(Integer)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.add(int,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.TestGenericData.testGetEmptySchemaFields()": "AVRO-844. Java: Provide better errors for null or missing record fields.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1142048 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.AsyncClient(org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.AvroColumnReader.read(Schema)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.compiler.specific.SpecificCompiler.setEnableDecimalLogicalType(boolean)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.SaslParticipant.getMechanismName()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNestedNonNullNamespace1()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.ByteBufferOutputStream.ByteBufferOutputStream()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteBufferInputStream.skip(long)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.io.GenericReaderOneTimeUseReaderTest.getReader()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringFactory.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.test.basic.BooleanTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.FieldBuilder(FieldBuilderBase,String,Schema,JsonNode)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testR1()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificFixed.SpecificFixed()": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setSfixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.setSyms(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.Name(String,String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeIndex(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericData.testGenericArrayPeek()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaBuilder.mapType(Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeObject(Schema,GenericRecord)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.generic.GenericStringTest.randomString(Random)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.SpecificCompiler.compile()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.trace.TraceCollection.getMaxBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testSpecificRecordBase()": "AVRO-1502. Add a test for SpecificRecordBase's Externalizable implemenatation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1636657 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clear()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "avro.examples.baseball.Player.hasLastName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestByteBuffer.readOneXFromAvro(Schema,ByteArrayOutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.SpecificCompilerTool.executeCompiler(SpecificCompiler,Optional,StringType,boolean,Optional,File,File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.fixedDefault(ByteBuffer)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateMethodName(Schema,Field,String)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnresolvedUnionException.getUnionSchema()": "AVRO-723. Java: Pass error messages for unexpected RPC exceptions through to client.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056499 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ReflectIntArrayTest.ReflectIntArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.TestAvroCharSequenceComparator.testCompareUtf8ToString()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setIntArray(int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.Perf.GenericOneTimeReaderUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.getValueReaderSchema(Configuration)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestProtocolSpecific.testStartServer()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestSchemaBuilder.testFieldObjectProps()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.data.RecordBuilderBase.validate(Field,Object)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.test.record.RecordWithPromotionTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.grpc.AvroInputStream.CountingOutputStream(OutputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.perf.test.record.RecordTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.R10.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testShort()": "AVRO-978. Java: Fix reflect to better handle Byte type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1213860 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestBinaryMessageEncoding.testCompatibleReadFailsWithoutSchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.GenericReaderTest.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooRecord.FooRecord(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.testSequenceFileInputFormat()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testDoubleAsFloatDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.compiler.specific.ProtocolTask.getDateTimeLogicalTypeImplementation()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.TestStandardScheme.write(org,Test)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestSchemas.get()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.io.TestBinaryDecoder.testEOF_float()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearString()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.addSyms(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testAdd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.set(byte,int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.read(D,Decoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Slf4jLogChute.log(int,String)": "[AVRO-2228] Bump Apache Velocity to 2.0\n\n- Remove Slf4jLogChute since 2.0 uses SLF4J itself\n- Update $velocityHasNext to $foreach.hasNext because of deprecation\n- Update $velocityCount to $foreach.count because of deprecation\n- 2.0 does not depend on apache-common collections anymore which\n  used to be an old version with security issues\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.utf8StringWrittenWithUnionSchemaIsConvertedToBytesSchema()": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.generic.GenericData.setField(Object,String,int,Object)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.protobuf.noopt.Test.setFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.TestIOBuffers.testEmpty()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.trevni.avro.TestShredder.testSimpleRecord()": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestCases.testCases()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getClassSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherJob.getProtocol(JobConf)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSymsCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SaslParticipant.dispose()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestFsInput.setUp()": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.exceptionCaught(ChannelHandlerContext,Throwable)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.SchemaCompatibilityResult.recursionInProgress()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.file.DataFileWriter.isFlushOnEveryBlock()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.BaseFieldTypeBuilder.intBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.ValueReader.readBoolean()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.isReaderUnionAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getTimestampOrBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestReflect.testVoid()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.clear()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestRpcPluginOrdering.serverReceiveRequest(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.setMap2(ConcurrentHashMap)": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Field.Field(String,Schema,String)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.reflect.ReflectData.compare(Object,Object,Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.printableBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectResponder.getDatumReader(Schema,Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "example.ColorCount.run(String)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testDecimalWithNonByteArrayTypes()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Test.equals(Test)": "AVRO-948. Java: Fix to more correctly handle Thrift optional and nullable fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190627 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestDeepCopy.testJavaClassDeepCopy()": "AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields (#703)\n\n* AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields\r\n\r\n* Update spotless check\r\n\r\n* Modify comment\r\n\r\n* AVRO-2438:Increase the deepcopy support of java-key-class\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "avro.examples.baseball.Builder.setFavoriteNumber(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.NestedRecordTest.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testHashCode()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Conversions.validate(LogicalTypes,BigDecimal)": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.io.parsing.Symbol.FieldAdjustAction(int,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testDouble()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.LocalTimestampMicrosConversion.getConvertedType()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.reflect.TestReflect.testInt()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.trySkipBytes(long)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingIO.TestResolvingIO(Encoding,int,String,String,String,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.assertNotOpen()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.unsetSetField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.read(org,add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.add(String,String)": "AVRO-601.  Java: Add per-field property support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982058 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.skip(Schema,ValueReader)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRpcProtocolTool.data()": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.toString(boolean)": "AVRO-2822: Add toString that doesn't inline referenced schemas (#869)\n\n", "org.apache.avro.ipc.BlockingSimpleImpl.acquireEnterPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.readArray(long,long,ResolvingDecoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.RenderableMessage(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.parsing.LitS.hashCode()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.UnionAccumulator.and()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroUtf8InputFormat.next(AvroWrapper,NullWritable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemaTwoFiles()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.LongTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Foo.setTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.BlockingBinaryEncoder.BlockingBinaryEncoder(OutputStream,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeBytes(ByteBuffer)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.build()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parse(String,String[])": "AVRO-1316. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480808 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.setSchema(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.SeekableByteArrayInput.seek(long)": "AVRO-888. Java: Add SeekableByteArrayInput.  Contributed by Saleem Shafi.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173410 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.clientSendRequest(RPCContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.GenericDatumReader.read(Object,Schema,Decoder)": "AVRO-29. Reverting changes to GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788481 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.testMixtureOfRequests()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.parsing.DefaultStartAction.DefaultStartAction(byte)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestBinaryMessageEncoding.testBufferCopy()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.codegentest.FixedSizeString.getValue()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.thrift.test.ping_result.toString()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.trace.Util.longValue(ID)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.addAll(int,Collection)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.EnumSymbol.EnumSymbol(Schema,Object)": "AVRO-997. Java: For enum values, no longer sometimes permit any Object whose toString() names an enum symbol, but rather always require use of distinct enum types.  Contributed by Sean Busbey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.expandStack()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeArray(Schema,Object,ValueWriter)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testArraySet()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.M.getUnknownFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.AvroGrpcServer.invoke(Object,StreamObserver)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUIDMissingLogicalTypeReflect()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withProgressable(Progressable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.nullType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testBinaryToJsonSchemaFile()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.trevni.ColumnFileWriter.sizeEstimate()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.HijackingIndexedRecord.HijackingIndexedRecord(IndexedRecord,int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Float)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.wrap(Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.getInputFormatClass()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroRequestInputStream.drainTo(OutputStream)": "AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0 (#635)\n\n* AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0\r\n\r\n* Import it from Guava instead\r\n", "org.apache.avro.mapred.Pair.Pair(Long,Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaCompatibilityResult.SchemaCompatibilityResult(SchemaCompatibilityType,List)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.TestNettyServer.testBadRequest()": "AVRO-1111. Malformed data can cause OutOfMemoryError in Avro IPC. Contributed by Mike Percy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SSLChannelPipelineFactory.getPipeline()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.reflect.ReflectRequestor.ReflectRequestor(Protocol,Transceiver,ReflectData)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.addAlias(String,String)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableOutput.write(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.tearDownConnections()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Error.findByThriftIdOrThrow(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileCustomSync.generateSync()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.AvroColumnWriter.writeTo(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testFloat()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.addField(Object,String,int,Object)": "AVRO-278. Change GenericRecord's API and implementation to be array-based rather than Map-based.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyFrameDecoder.decodePackBody(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.reverse()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testFixed32()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.SleepyResponder.SleepyResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.CallFuture.get(long,TimeUnit)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericTest(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testRecordWithNullDoc()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.hadoop.util.TestAvroCharSequenceComparator.testCompareUtf8()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setNumber(int)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.getArrayElements(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeByteField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setTs(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.multiplefiles.Builder.setString(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolSpecific.testStopServer()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DataFileInteropTest.get()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.tool.FromTextTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Test.putToMapField(String,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.OrderPlugin.clientReceiveResponse(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherData.count(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.create()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.SeekableBufferedInput(SeekableInput)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.read(Object,Schema,Schema,Decoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.testRequestResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeByteField.UnsafeByteField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.innerWrite(ByteBuffer)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.paste(Object[])": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.readRecord(Schema,byte)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestReflect.testP1()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.resolvePrimitive(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.getFooOrBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.setSint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testDynamicSchemaWithTimeConversion()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.Test.unsetBinaryField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestCycle.serDeserRecord(GenericData)": "[fix] use a logger instead of System.out +  reformat to 2 space indentation", "org.apache.avro.protobuf.Foo.setSint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalRecord(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.EnumSymbol(Schema,String)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testWritingZeroJsonValues()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Schema.NamedSchema(Type,Name)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.DeflateCodec.writeAndClose(ByteBuffer,OutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.setByteFieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificLogicalTypes.write(Schema,D[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectRequestor.readError(Schema,Decoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.addProp(String,JsonNode)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.ReflectData.getMessage(Method,Protocol,Map,Map)": "AVRO-2700: Change Java Collection Usage (#780)\n\n* AVRO-2700: Change Java Collection Usage\r\n\r\n* Apply spotless\r\n\r\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.protobuf.M.parseFrom(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyFrameDecoder.NettyFrameDecoder()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Processor.getResult(I,add_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TypeBuilder.unionOf()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.isFlushOnWrite()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.createValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibility.getDecodedDatum()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeFloat(float)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.JsonToBinaryFragmentTool.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Reference.validate(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompiles(Schema,boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.trevni.InputFile.InputFile(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.registerAllExtensions(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.IdentityWeakReference.IdentityWeakReference(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.PositionFilter.read()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Long,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addAllFooArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSerialization.setDataModelClass(Configuration,Class)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testUnionMap()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.setBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaBuilder.testBadDefault()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler()": "Change default from joda to jsr310... no sense promoting the use of joda anymore\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeObjectField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDataFile.main(String)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampConversion.getConvertedType()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFsData.testStartServer()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestFileSpanStorage.waitForWrites(FileSpanStorage)": "AVRO-1598. Java: Fix flakiness in TestFileSpanStorage.  Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1637269 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setUint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaBuilder.testFieldTypesAndDefaultValues()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.basic.TestStateDecode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.NestedStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.TestSpecificRequestor.initializeProxy()": "AVRO-1591. Java: Fix specific RPC so that proxies implement hashCode(), equals() and toString(). Contributed by Mark Spadoni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithPromotionTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.ping_args.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.size()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.hasFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Alternative.size()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.netty.NettyTransceiver.close(boolean)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.ipc.Requestor.readError(Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeBytes(Object,ValueWriter)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.setFastReaderEnabled(boolean)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.TestProtocolHttp.testStatelessOneway()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.idl.TestIdl.write()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.AsyncProcessor(I,Map)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.InteropTest.testGeneratedGeneric()": "AVRO-317.  Restore Java data interop tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898925 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.requiredFloat(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.SkipAction.SkipAction(Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setEnumField(E)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,Integer)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Y.equals(Object)": "AVRO-598. Use generic data structures when reading with reflect API and classes are not defined.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989263 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificLogicalTypes.testRecordWithLogicalTypes()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.io.ValidatingDecoder.readEnum()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.AvroCharSequenceComparator.compareCharacter(CharSequence,CharSequence,int)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.Schema.Type()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.initializeTransceiver(int)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.TestSpecificRequestor.testEquals()": "AVRO-1591. Java: Fix specific RPC so that proxies implement hashCode(), equals() and toString(). Contributed by Mark Spadoni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.newBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.doubleWrittenWithUnionSchemaIsNotConvertedToFloatSchema()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testConcurrentChannels()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testNullableLogicalTypesJavaUnboxDecimalTypesDisabled()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.FooOrBar.bar(String)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testR6_1()": "AVRO-2115: Added test for Void in union.\n", "org.apache.avro.io.DirectBinaryDecoder.readFloat()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.namespace(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.acquireEnterPermit()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.avro.AvroColumnReader.getFileSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.readFloat()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.Cache.findByFingerprint(long)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.io.BinaryDecoder.readString()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.lastOneWins_Setter()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.setRemote(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestSchema.testIntDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.protobuf.M.getValueDescriptor()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.WordCountTask.reduceFlush(Pair,Collector)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.reflect.ReflectResponder.getReflectData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.requiredDouble(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringLogicalType.getInteger(Schema,String)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.generic.TestGenericData.testArrayListInterface()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Test.Foo(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testAnnotationAvroMeta()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.perf.test.record.RecordWithDefaultTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.WriteFutureListener.WriteFutureListener(Callback)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.randomString()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.Foo.setSyms(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.BaseTypeBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.io.AvroSerializer.serialize(AvroWrapper)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.awaitMessages()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.MapTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.reduce(Text,Iterable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TransceiverCallback.handleResult(List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.SmallLongTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.FooBarSpecificRecord.hasName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getProcessMap(Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.addFooArrayBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.RecordSchema.toString(Map)": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.setResponse(List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServerAvroHandler.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "AVRO-1151. Netty Avro server should expose the number of connections currently open. Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383359 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.compileInterface(Protocol)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.createFixed(Object,Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFooFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.SpecificStatsReducer.setup(Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.setUp()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.LongDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.IntWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.ColumnOutputBuffer(ColumnFileWriter,ColumnMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setBool(boolean)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.IntWritableConverter.convert(IntWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.TestSpecificCompiler.testSettersNotCreatedWhenOptionTurnedOff()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestTracingUtil.testListSampling()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getSetFieldIterator()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.generateRepeaterDataArray(Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.Collector.collect(T,int)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPojoWithOptionalCreateForNullableFieldsWhenOptionTurnedOn()": "AVRO-2745: Generate optional getters for nullables only (#817)\n\n", "org.apache.avro.file.BZip2Codec.equals(Object)": "[merge] marge with latest changes", "org.apache.avro.protobuf.noopt.Foo.getTimestampFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.simpleGen(Schema,Map)": "AVRO-2726: Remove deprecation warnings\n", "org.apache.avro.ReaderWriter.toString()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecord.writeExternal(java)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.getIdFieldName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.toString()": "[add] resolution code using new reusable visitor.", "org.apache.avro.thrift.test.Test.isSetFooOrBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestAvroTextSort.testSort()": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.createDecoder(SchemaStore)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.reflect.TestReflectLogicalTypes.write(Schema,D[])": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherJob.submitJob(JobConf)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.compatible()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferRoundTrip()": "AVRO-2265 Remove Guava as a test dependency (#377)\n\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Schema.writeNameRef(Names,JsonGenerator)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.accessor(FieldAccess,String)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.forNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.HttpTransceiver.setTimeout(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.NullCodec.compress(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.size()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.generate(Schema,Schema,Map)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMicrosConversion.toLong(Instant,Schema,LogicalType)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.trevni.ColumnFileWriter.startRow()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getClass(Schema)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getDatumWriter(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.schema()": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getClassLoader()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestValidatingIO.testSkip_2(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.create()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.BlockingSimpleImpl.BlockingSimpleImpl()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getUnknownFields()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Conversion.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.bytesDefault(byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.ping_args.equals(ping_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Test.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BytesBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadBoolean.genData(Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(Schema,Schema)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.io.BinaryDecoder.getBuf()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.forNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.compileInterface(Protocol)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testSkip_1_blocking(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtobuf.testGetNonRepeatedSchemaWithLogicalType()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.generic.TestGenericLogicalTypes.read(DatumReader,File)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.file.CodecFactory.nullCodec()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestFsInput.testLength()": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.writeBlockTo(BinaryEncoder,byte)": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.LitS.LitS(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setEnum(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Pair.checkIsPairSchema(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.SkipParser.SkipParser(Symbol,ActionHandler,SkipHandler)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testOneWay()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.hasProps()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.seek(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSerializedSize()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericDatumReader.getExpected()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBinaryDecoder.testInputStreamPartiallyUsed()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.TestEncoder.writeBoolean(boolean)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.longBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeString(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.Options.withOutputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.SkipParser.skipSymbol(Symbol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.set(Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.visitTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testDollarTerminatedNestedStaticClassNamespaceCompatibility()": "AVRO-2757: Avoid dollar signs when reflecting Java. (#914)\n\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(LongWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.hashCode(Object,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setEnumFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.build()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceNode.getPreLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BytesTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooOrBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.basic.TestStateDecode.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Protocol.getType(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestTextFileTools.testFromText()": "AVRO-799. Java: Add support for --codec parameter to the 'fromtext' command.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095207 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestUtil.randomBytes(Random)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.fromUtf8(byte,int)": "Since we will no longer support java6 and 7, remove the \"optimizations\" for those\n", "org.apache.avro.specific.SpecificData.newRecord(Object,Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.Pair(X,Y)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.HijackingIndexedRecord.get(int)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.deserialize(AvroWrapper)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaValidationException.getMessage(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.SeenPair.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testFloatTooShort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.addAliasesTo(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.getJsonGenerator(OutputStream)": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.BlockCompressWriter.BlockCompressWriter(Writer)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsReadableByFloatSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.SchemaCompatibility.asList(Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.Requestor.handleResult(List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.RecordWriterWithCounter(RecordWriter,String,TaskInputOutputContext)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testNegativeLengthEncoding()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.setT(org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectResponder.paramType(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setSint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.ensureFooArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolSpecific.testEchoBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Field.Field(Schema,String,JsonNode,Order)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addAllIntArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertNullWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericConcreteEnum.getRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.buildParsed()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaValidatorBuilder.canReadStrategy()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.completeField(Schema,Object)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.thrift.test.ping_result.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.map(AvroKey,NullWritable,Context)": "AVRO-1418. Java: Add sync support to AvroMultipleOutputs.  Contributed by Deepak Kumar V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556378 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getDefaultInstance()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServerWithCallbacks.hello(String)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.JoinableRecord.JoinableRecord(CharSequence,int,CharSequence,long)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeCharField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.getId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.mergeFrom(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.createDecoder(SchemaStore)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.io.DirectBinaryEncoder.DirectBinaryEncoder(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.orderAscending()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.flush()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(Double,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setS(java)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.specific.SpecificData.getEncoder(ObjectOutput)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getTimestampBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.UnionFieldTypeBuilder.record(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.Requestor.getRemote()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testAnnotations()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.JsonProperties.addAllProps(JsonProperties)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.mapreduce.RecordWriterWithCounter.RecordWriterWithCounter(RecordWriter,String,TaskInputOutputContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.getSyms(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.idsEqual(ID,ID)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.populateFloatArray(Random,int)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.getBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericDatumWriter.testAllowWritingPrimitives()": "AVRO-2070 Added test\n", "org.apache.avro.Schema.retainAll(Collection)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parse(String)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.ipc.generic.GenericResponder.getDatumWriter(Schema)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.visitTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecific.serverConnecting(RPCContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleInputs.getMapperTypeMap(JobConf)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.TestRpcPluginOrdering.clientSendRequest(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.setSuffix(String)": "AVRO-1884: Java: Add method to set the compiler output suffix.\n\nUse when generating non-Java files with custom templates. For example:\n\n```\ncompiler.setSuffix(\".scala\")\ncompiler.setTemplateDir(scalaTemplatePath)\ncompiler.compileToDestination(file, new File(\"src/main/scala/\"))\n```\n\nCloses #90.\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.hasNext()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.Avro14SpecificCompiler.doc(StringBuilder,int,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.TestDataFileCorruption.makeFile(String)": "AVRO-1596. Java: Cannot read past corrupted block in Avro data file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640171 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.newBuilder(avro)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.Requestor.Response(Request,BinaryDecoder)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflectLogicalTypes.read(DatumReader,File)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Parser.parse(JsonParser)": "AVRO-1715. Java: Close files opened by the Schema parser. Contributed by Pavel Safrata.\n\nThis also clarifies the InputStream parse method, which does not own the\nstream that is passed in and does not close it. The tools have been\nupdated to correctly close streams passed to the parser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1707389 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.fixed(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.setFlushOnWrite(boolean)": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.WordCountTask.main(String)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.validate(FieldAccess)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.generateServletResponse(StatsPlugin)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.FooOrBar.findByThriftIdOrThrow(int)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testAccept()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Builder.addSyms(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyClientAvroHandler.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.isMultiNamedOutput(JobConf,String)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.compile()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readDouble()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.TestJacksonUtils.testToJsonNode()": "AVRO-2819: Add type BigInteger/BigDecimal for JacksonUtils (#859)\n\n", "org.apache.trevni.avro.AvroColumnator.columnize(String,Schema,ColumnMetaData,boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.SyncableFileOutputStream.sync()": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.resolve(Schema,Schema,GenericData,Map)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.protobuf.Builder.addAllFooArray(java)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.Builder()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.specific.SpecificCompiler.compileToDestination(File,File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ByteBufferRecord.setTp(TypeEnum)": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.perf.test.record.TestStateEncode.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testEchoRecord()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "avro.examples.baseball.FieldTest.toByteBuffer()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ReaderUnion.firstMatchingBranch(Schema,Schema,Map)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.generic.GenericDatumWriter.write(Schema,Object,ValueWriter)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readMap(Object,Schema,ResolvingDecoder)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.checkReaderWriterCompatibility(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.perf.test.generic.GenericStringTest.randomString(Random)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.RecordSchema.RecordSchema(Name,String,boolean)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificErrorBuilderBase.SpecificErrorBuilderBase(SpecificErrorBuilderBase)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.TestRecordWithJsr310LogicalTypes(java,java,java,java,java,java,java,java,java,java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.DecoderTest.read()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.configureDirectDecoder(boolean)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.readRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withFileSystem(FileSystem)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.Collector.Collector(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "example.GenericMain.main(String)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.tether.TetherTask.data()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestRpcPluginOrdering.testRpcPluginOrdering()": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.Factory(org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LogicalTypes.getPrecision()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.hasFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.hadoop.io.AvroDeserializer.deserialize(T)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.size(Object,ValueType)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.writeBuffers(List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Test.getFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericDatumReader.readEnum(Schema,Schema,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.ReflectCountMapper.setup(Context)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.test.reflect.ReflectLongArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.BytesWritableConverter.BytesWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setUint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Player.setFirstName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.generic.GenericDatumReader.readString(Object,ValueReader)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.internalGetFieldAccessorTable()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DefaultDecoderFactory.configureDirectDecoder(boolean)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testGrpcConnectionError()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.thrift.test.Test.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibilityMissingUnionBranch.testMissingUnionBranch()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.generic.GenericDatumReader.defaultFieldValue(Object,Schema,JsonNode)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.load(String,Class)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.trevni.BlockDescriptor.writeTo(OutputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.checkNamedOutputName(JobContext,String,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.populateFloatArray(Random,boolean)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionAccumulator(Completion,NameContext,List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.read(Object,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testSerialization()": "AVRO-1852: Make Java org.apache.Schema serializable (#589)\n\n* [add] [AVRO-1852]\r\n\r\n* AVRO-1852: Update unit tests with feedback.\r\n", "org.apache.avro.TwoWayMessage.toJson1(JsonGenerator)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getI32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.Foo.ensureIntArrayIsMutable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.netty.NettyServer.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.MapEntry.getValue()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.io.BasicTest.init()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testMakePath()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.getPort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyFrameEncoder.encode(ChannelHandlerContext,Channel,Object)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.file.Option.Option(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithZstandardCode()": "AVRO-2195: Add Zstandard Codec (Benson Qiu via Nandor Kollar)\n", "org.apache.avro.FloatDefault.floatDefault(float)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getFooArrayBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.requiredMap(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.endBytes()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeFloat(float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testFieldDocs()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.unsetStructField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputStreamByteSource.isEof()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestLengthLimitedInputStream.testAvailable()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.AvroRequestMarshaller.parse(InputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericData.Array(Schema,Collection)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testGetMetaForSingleKey()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.specific.Builder.hasF32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.HashData.set(byte,int,int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testNestedUnion()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.RepeaterTest.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithDefaultTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.JsonEncoder.startItem()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.IntTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBytes.getBuffer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestValidatingIO.next()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceManager.getId(IndexedRecord,Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputScanner.cur()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newDecoder(byte)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadWithReaderSchemaFile()": "AVRO-2689:  add reader-schema to DataFileReadTool (#785)\n\n* AVRO-2689: add reader schema to DataFileReadTool\r\n\r\nThis PR adds --reader-schema and --reader-schema-file flags\r\nto the tojson tool.\r\n\r\n* AVRO-2689: Unit test for reader schema on tojson tool.\r\n\r\nCo-authored-by: RyanSkraba <ryan@skraba.com>\r\n", "org.apache.avro.io.JsonDecoder.JsonDecoder(Schema,InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isInteger(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit5()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,Integer,Consumer,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.tool.TestCatTool.testOffSetAccuracy()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setIntArray(int,int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.isNullable()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.test.record.RecordWithDefaultTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroRecordReader.AvroRecordReader(FileReader,FileSplit)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NullBuilder.create(Completion,NameContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.BaseTypeBuilder.intType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.WordCountTask.main(String[])": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.isCancelled()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setFixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearIntArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.checkDefault(String,String,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.SystemTicks.ticks()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeCustomEncodedField(Field,CustomEncoding)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Json.readObject(Decoder)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalString(String,CharSequence)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapBuilder.values()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.testEnumMismatch()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTest.reset()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.io.RepeaterTest.genData(Encoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaNormalization.cases()": "AVRO-1493: Java: Schema fingerprint vary by locale\n", "org.apache.avro.TestSchemaBuilder.testDoc()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.setNum2IsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Fixed.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.createUnion(List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.ParsingTable.appendTo(StringBuffer,String,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.getAuthorizationID()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.RecordWithDefault.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.DecoderFactory()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteBufferInputStream.mark(int)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.UnsafeBooleanField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.AvroEncRecord.equals(Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.addAll(int,Collection)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeBytes(Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setFieldValue(_Fields,Object)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setSint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumWriter.ThriftDatumWriter()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnValues.startBlock(int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.hasName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "avro.examples.baseball.Player.get(int)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestAllCodecs.testCodecSlice()": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.thrift.test.zip.zip()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.LossyTimestampMicrosConversion.toLong(DateTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.Conversion.toFloat(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.Reader(Options)": "AVRO-2711: Use SLF4J Parameterized Logging for Debug Statements (#789)\n\n", "org.apache.avro.TestSchema.enumSchema()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.writeName(Names,JsonGenerator)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.JsonToBinaryFragmentTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1715. Java: Close files opened by the Schema parser. Contributed by Pavel Safrata.\n\nThis also clarifies the InputStream parse method, which does not own the\nstream that is passed in and does not close it. The tools have been\nupdated to correctly close streams passed to the parser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1707389 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIOResolving.data3()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopMapper.configure(JobConf)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.newBuilder(org)": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.mapred.AvroTextOutputFormat.AvroTextRecordWriter(DataFileWriter,byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.BasicArrayState.BasicArrayState(int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.close()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketTransceiver.SocketTransceiver(SocketChannel)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.attach(int,BinaryDecoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectFloatTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.expandStack()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumWriter.writeEnum(Schema,Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificRequestor.invoke(Object,Method,Object)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Name.writeName(Names,JsonGenerator)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchemaCompatibilityNameMismatch.data()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.grpc.TestAvroMarshaller.testAvroRequestReadPartialAndDrain()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.ThriftData.getField(Object,String,int)": "AVRO-907. Java: Optimize access to protobuf message fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.MailImpl.fireandforget(Message)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeIndex(int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.resolveCodec()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.writeFully(ByteBuffer[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.toBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSettingOutputCharacterEncoding()": "AVRO-1901: Record named Exception generated bad code\n", "org.apache.avro.ipc.DatagramServer.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.getFields()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getConfigurationWithAvroSerialization()": "AVRO-2711: Use SLF4J Parameterized Logging for Debug Statements (#789)\n\n", "org.apache.avro.protobuf.Builder.getFooArrayOrBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateSetterCode(Schema,String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.BooleanSchema.BooleanSchema()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setLastName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.FieldBuilderBase.unionBytes(String,byte,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.next()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.getArrayElements(Object)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.setMessageIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList6()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.perf.test.record.ValidatingRecordTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Builder.getFooArrayCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testNullableByteArrayNotNullValue()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.ProtobufData.getSchema(EnumDescriptor)": "Initialize the buffer area for Stringbuilder/List\n", "org.apache.avro.protobuf.Test.getString()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setSfixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificLogicalTypes.testRecordWriteLogicalTypesReadPrimitives()": "Use RoundingMode for BigDecimal to avoid deprecation warning (Java > 9)\n", "org.apache.avro.ipc.NettyTransceiver.WriteFutureListener(Callback)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherData.count()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.MapSchema.toJson(Names,JsonGenerator)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.type(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.MetaData.setReservedBoolean(String,boolean)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.check(Schema,Schema,byte,String,Object,Encoding,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.JsonDecoder.skipFixed()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.codecs()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.SmallLongTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.SchemaBuilder.enumDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.clearTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Test.Builder(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectFloatArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.ReflectDatumReader.getClass(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testInputStreamProxyDetached()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setInputSequenceFile(JobConf)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanAggregation.createClientSpan(ID,ID,ID,String)": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.FixedBuilder(String,int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ValidatingRecordTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.NamespacedBuilder.space()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isRecord(Object)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroValue.AvroValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyFrameDecoder.decodePackBody(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.AvroRecordReaderBase(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJsr310TimeConversions.testDateConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.hashCode()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FooBarSpecificRecord.getRelatedids()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.RandomData(Schema,int)": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.TestDataFileReflect.testNestedClass()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.FieldAccessReflect.toString()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.readInt()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.isArray(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.mergeFrom(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.reset()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapBuilder.create(Completion,NameContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.ColumnMetaData.read(InputBuffer,ColumnFileReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestEncoders.avroEncoded(byte)": "AVRO-1857: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state\n\nThis closes #198\n", "avro.examples.baseball.FieldVisibilityTest.toByteBuffer()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.reflect.FieldAccessUnsafe.getField()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.flush()": "AVRO-118.  JSON codec now permits one to read and write multiple instances without flushing or explicitly resetting the codec between each instance.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818637 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getCachedFields(Class)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ResolvingTable.toString()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withBufferSizeBytes(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.LongWritableConverter.convert(LongWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.GenTest.slurp(File)": "AVRO-276.  Gix GenAvro to specify file encoding as UTF-8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894941 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeBytes(ByteBuffer)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.JsonDecoder(Symbol,String)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getPostNetworkTime()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testSkip1()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountSpecific.map(Utf8)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.execute()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NamedBuilder.doc()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestResponder.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReflect.equals(Object)": "AVRO-141.  Fix a NullPointerException in ReflectData#isRecord().  Contributed by Isabel Drost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.file.ZstandardCodec.Option(int,boolean)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.UnionSchema.toString(Map)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.BytesTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcSendTool.makeClient(Protocol,URI)": "AVRO-707. Java: Promote SASL-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044144 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServerWithSSL.newChannel(ChannelPipeline)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordAdjust.resolve(Schema,Schema,GenericData,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Foo.newBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceClientServlet.collectionNode(PrintWriter,int,int)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.NullableBytesTest(byte)": "AVRO-1401: @Nullable does not work with byte[]\n\nThis closes #229\n", "org.apache.avro.ipc.TestSaslDigestMd5.testWrongPassword()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestUnionSelfReference.testSelfReferenceInUnion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.PositionFilter.write(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testJob()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.testTwoColumn()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.StatsPlugin.nanosToMillis(long)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.createMessage(String,Schema,Schema,Schema)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BooleanTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.file.DataFileReader12.next()": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.getShortDescription()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferInputStream.getBuffer()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslParticipant.isComplete()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.StatsPlugin(Ticks,Segmenter,Segmenter)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyDeserializer.AvroKeyDeserializer(Schema,Schema,ClassLoader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemaWithFieldVisibility()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.ipc.ResponderServlet.doPost(HttpServletRequest,HttpServletResponse)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroKeyRecordWriter.AvroKeyRecordWriter(Schema,CodecFactory,OutputStream)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.error(Schema,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clear()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.CallFuture.handleError(Throwable)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LitS.equals(Object)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.write(org,Nested)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getPreLinkTimeString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.hasLogicalTypeField(Schema)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.SchemaCompatibility.getMessage()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestProtocolGeneric.testStartServer()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.unwrap(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestSchemaResolver.testIsUnresolvedSchemaError2()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.getFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroUtf8InputFormat.createKey()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestProtocolReflect.add(int,int)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readIndex()": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.data.TimeConversions.fromInt(Integer,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.R9.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeLong(long)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertByteWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.doc()": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessReflect.isCustomEncoded()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestTextFileTools.testDefaultCodec()": "AVRO-2465: Fix wrong defalut values in the avro-tools' usage\n", "org.apache.avro.reflect.ReflectDatumReader.createFixed(Object,Schema)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testByte()": "AVRO-978. Java: Fix reflect to better handle Byte type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1213860 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.Builder(TestRecordWithJsr310LogicalTypes)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.BinaryData.compareBytes(byte,int,int,byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.iterator()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringLogicalType.FixedSizeStringLogicalType(Schema)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "avro.examples.baseball.Player.clearPosition()": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.ping()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.addToArray(Object,long,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.TestRecordWithLogicalTypes(java,java,java,java,java,java,org,org,org,BigDecimal)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.JsonProperties.hasNext()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.ipc.BlockingSimpleImpl.acquireRunPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.SpecificResponder(Class,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestWordCount.reduce(String,Iterable,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.add(int,int)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.toRecord(Pair,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.checkReadWrite(Object,Schema)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileGetSchemaTool.getShortDescription()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.initializeConnections()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.trevni.avro.TestShredder.testMap()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.testSkip_1()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestInputBytes.testRandomReads()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.io.ResolvingRecord.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ExtendedEnumResolveTest.ExtendedEnumResolveTest()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.InteropTest.testGeneratedReflect()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.pastSync(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.Client(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceInvocationHandler.unaryRequest(String,Object,Callback)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.TestReflect.testUnionWithCollection()": "AVRO-1056. Java: Fix reflect to correctly handle unions containing maps. Contributed by Kevin Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getCompatibility(String,Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestTextFileTools.testToText()": "AVRO-799. Java: Add support for --codec parameter to the 'fromtext' command.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095207 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.GenTest(File,File)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithSnappyCodeWithHadoopConfig()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.afterVisitNonTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.addSchema(Schema)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testRecordIO()": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.doc(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.RecordWriterWithCounter(RecordWriter,String,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.testGeneratedGeneric()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.NullChecksum.size()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NullableCompletion.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.setDateTimeLogicalTypeImplementation(DateTimeLogicalTypeImplementation)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectionUtil.resolveTypeVariables(Class)": "AVRO-2357: Allow generic types in reflect protos (#490)\n\nAdds support for generic types in ReflectData for\r\nProtocols.", "org.apache.avro.ipc.SaslSocketServer.getMechanismName()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.data.RecordBuilderBaseTest.setUpBeforeClass()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJsr310TimeConversions.createSchemas()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.TestBinaryDecoder.testEOF_string()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testTimestampMicrosConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_resultStandardScheme.write(org,add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R7.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory,ExecutionHandler)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJsr310TimeConversions.testTimeMillisConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufDatumReader.ProtobufDatumReader()": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.equals(Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testUnionResolutionFirstStructureMatch2d()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.WordCountTask.reduce(WordCount,Collector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherRecordReader.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilder.type(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.createDatumReader(Schema)": "AVRO-1020. Java: Fix builder API to correctly handle default values for enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241662 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.namespace(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R1.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.extractTrace(List)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestSaslDigestMd5.handle(Callback)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.checkOutputFormat()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.Foo.writeReplace()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumReader.readString(Object,Decoder)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testDeflateClassCodec()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestResolvingIO.test_resolving(Encoding,int,String,String,Object,String,String,Object)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setFloat(float)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.getMessage()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransportCodec.encode(ChannelHandlerContext,Channel,Object)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.ReflectDatumReader.readRecord(Object,Schema,Schema,ValueReader)": "AVRO-11.  Re-implement specific and reflect datum readers and writers to leverage AVRO-6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764989 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.reset()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.trevni.avro.TestShredder.testArrayInUnion()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.DataFileReader12.skipSync()": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMinBytes(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.decompressUsing(Codec)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.createDatumReader(Schema,Schema)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.addProp(String,String)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.ensureSymsIsMutable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.tool.TestRpcProtocolTool.TestRpcProtocolTool(String)": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(SpecificRecordBuilderBase)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.Foo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.file.Writer.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileRepairTool.getName()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.util.Utf8.getByteLength()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectRecordTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Field.hasDefaultValue()": "[AVRO-2368] Provide a Field.hasDefaultValue() method to determine if a default value it set or not\n", "org.apache.avro.protobuf.Test.setBytes(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.jetty.TestProtocolHttps.createTransceiver()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertBytesWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMillisConversion.getLogicalTypeName()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.parsing.JsonGrammarGenerator.generate(Schema,Map)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.skipArray()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.DatagramServer.DatagramServer(Responder,SocketAddress)": "AVRO-544.  Java: Add start() and join() methods to Server interface.  Contributed by hammer & cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@965658 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSequenceFile.testReadAvro()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.FieldAssembler.optionalBytes(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.setField(Object,String,int,Object)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.readError(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.configureAvroShuffle(JobConf)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.RPCContext.isError()": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.N(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.DecodingTestCase.getDatum()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testDecimalBytesHasNoPrecisionLimit()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.noReorder()": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.file.SeekableBufferedInput.SeekableBufferedInput(SeekableInput)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroInputFormat.setUp()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.trace.TraceCollection.getResponsePayloads()": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.getLocal()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericRecordBuilder.clear(Field)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.Builder.setD(org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.BlockingValueWriter.write(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestFileSpanStorage.testTonsOfSpans()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithBZip2CodeWithHadoopConfig()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.TestIdl.writeTests()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.onComplete(Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroDeserializer.AvroDeserializer(Schema,Schema)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionFieldTypeBuilder(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withCodec(CodecFactory)": "AVRO-1522. Java: Add support for compression codecs to SortedKeyValueFile.  Contributed by Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setB(boolean)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.WriterUnion.resolve(Schema,Schema,GenericData,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Test.getTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.file.DataFileStream.isFlushOnWrite()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getIntArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ValidateAll.ValidateAll(SchemaValidationStrategy)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.DataFileReader.openReader(File,DatumReader)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.segment(Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.FieldAccessReflect.ReflectionBasedAccessor(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.createLastOneTestsBuilder()": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.readDouble()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.Foo(com,com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.hadoop.io.Reader.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.setProp(String,String)": "AVRO-242.  In Java, add support for extensible, string-valued properties.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@886927 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.build()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CatTool.printHelp(PrintStream)": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.Builder(TestRecordWithLogicalTypes)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.file.TestZstandardCodec.testZstandardToStringAndName()": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.io.parsing.Parser.Parser(Symbol,ActionHandler)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Stopwatch.elapsedNanos()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.Builder(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.readFiles(DatumReader)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Request.Request(String,Object,RPCContext,BinaryEncoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.RecordWriterWithCounter.RecordWriterWithCounter(RecordWriter,String,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.setName(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.SchemaBuilder.requiredString(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setT(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.ipc.TestNettyServerWithSSL.getAcceptedIssuers()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.skipFixed(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.setNumber(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestProtocolNetty.createTransceiver()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaCompatibility.schemaNameEquals(Schema,Schema)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.EnumLabelsAction.findLabel(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.buildSameMapSignature()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.echoBytes()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.Builder.hasDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayOrBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingEncoder.reset()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.isSetNum1()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Order()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapDefault.MapDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.FloatWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeId2.setId(Integer)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.testOrderingOfFlags()": "AVRO-2649 Made argument order non-enforceable avro-tools cli (#741)\n\n* AVRO-2649 Made argument order non-enforceable avro-tools cli\r\n\r\n* AVRO-2649 Dynamic index value for encoding and templatedir\r\n\r\n* AVRO-2649 Add positionindex to save positions of flags\r\n\r\n* AVRO-2649 Add test cases\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.TestDataFileReflect.toString()": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.getLimit()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.CodecFactory.snappyCodec()": "AVRO-2450 log message about failure to load SnappyCodec (#565)\n\n", "org.apache.avro.reflect.TestReflect.checkReadWrite(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.check(Object,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.generate()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.generateClearMethod()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.RecordTest(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testBytesDecimalToFromJson()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testValidateSchemaPairMissingField()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.ArrayColumnOutputBuffer.flushRun()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecodingTestCase.DecodingTestCase(Schema,Object,Schema,Object)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createFixedReader(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.Message.Message(String,Schema,Schema,Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeUtf8(Utf8)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TimestampMicros.validate(Schema)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BufferedFileOutputStream.flush()": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.JsonDecoder.JsonElement(JsonToken,String)": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketServer.getPort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValidatingEncoder.writeLong(long)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testEnumWithPrimitiveName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeObjectField.UnsafeObjectField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testDouble()": "AVRO-108.  Add Java implementation of binary comparator.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@809680 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.OneWayUnaryMethodHandler.invoke(Object,StreamObserver)": "Remove use of guava by utilizing java8 lambdas and collections\n", "org.apache.avro.reflect.ReflectData.compare(Object,Object,Schema,boolean)": "AVRO-786. Java: Fix equals() to work on objects containing maps.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1086727 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.requiredDouble(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.addToSchema(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.equals(Nested)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.Builder.clearSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.hasString()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.maybeForceBuilderInitialization()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Builder.hasUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.BalancesRecord(int,long)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.getWriter()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testReuse()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.M.N(int,int)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.NestedTupleScheme.write(org,Nested)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.unionString(String,CharSequence,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.createString(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.setFloat(float)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificLogicalTypes.testAbilityToReadJsr310RecordWrittenAsJodaRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.AvroColumnReader.setSchema(Schema)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.getDecoder()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeDouble(double)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.getFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getClassNamesOfPrimitiveFields(Schema,Set,Set)": "AVRO-2836 Generated java includes logical type conversions (#883)\n\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nIf the logical type is used for a Fixed type (potentially also Enum)\r\nthen it should check if there are any conversions used, and\r\ninclude in the generated java source\r\n\r\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nMove enum and fixed to use the javatype method, as if there is a\r\nlogical type conversion it will be picked up and remove a\r\ncode path", "org.apache.avro.ipc.TestNettyServer.testConnectionsCount()": "AVRO-1943 - Flaky test: TestNettyServerWithCompression.testConnectionsCount\n", "org.apache.avro.protobuf.noopt.Test.getFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.ReflectResponder.writeResponse(Schema,Object,Encoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectionUtils.getConstructorAsSupplier(Class)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.test.basic.UnchangedUnionTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.Request.getMessage()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.DataFileRepairTool.innerRecover(DataFileReader,DataFileWriter,PrintStream,PrintStream,boolean,boolean,Schema,File)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.parsing.Symbol.UnionAdjustAction(int,Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.read()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.appendAllFrom(DataFileStream,boolean)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(Schema)": "AVRO-29. Reverting changes to GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788481 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testDoubleAsIntDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypesInNestedRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.SpecificData.getNestedClassName(Schema)": "AVRO-2143. Fix Java reflect to stop using dollar sign in namespaces of nested classes.\n", "org.apache.avro.generic.GenericDatumReader.read(D,ValueReader)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testFixedDecimalToFromJson()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.greeting()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Avro14SpecificCompiler.params(Schema)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testR11()": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.specific.TestSpecificBuilderTree.copyBuilderWithNullablesAndSetToNull()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.TestWordCount.runTestsInOrder()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testManglingForRecords()": "AVRO-221.  Mangle Java reserved words in generated code to avoid name conflicts.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882689 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCachedField.isStringable()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.toBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.MapReduceAvroWordCount.map(LongWritable,Text,Context)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.pos()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.AvroInputStream.getWrittenCount()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.Array.add(T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO_resolving.dataForResolvingTests()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readBytes(byte,int,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRecordCountTool.generateData(int)": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.protobuf.noopt.M.maybeForceBuilderInitialization()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadLongSmall.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.makeMapTestData(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Factory.getAsyncClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.channelActive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.file.DeflateCodec.compress(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileGetSchemaTool.getName()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.AvroJob.configureAvroInput(JobConf,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getTraceTimingsSorted()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleResult(TestRecord)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimal.compareTo(CustomDecimal)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.LitS2.hashCode()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testR11()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeBytes(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.test(String,String,String,String,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.SortMapper.map(AvroKey,NullWritable,Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.addAll(Collection)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(Field,Schema)": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.protobuf.noopt.Test.clearDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.writeExternal(java)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.BytesWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.StringTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestSpecificLogicalTypes.testRecordWithoutLogicalTypes()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.protobuf.Builder.setString(java)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.toString()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroAsTextRecordReader.getPos()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.log(int,String)": "[AVRO-2228] Bump Apache Velocity to 2.0\n\n- Remove Slf4jLogChute since 2.0 uses SLF4J itself\n- Update $velocityHasNext to $foreach.hasNext because of deprecation\n- Update $velocityCount to $foreach.count because of deprecation\n- 2.0 does not depend on apache-common collections anymore which\n  used to be an old version with security issues\n", "org.apache.avro.message.BinaryMessageDecoder.BinaryMessageDecoder(GenericData,Schema)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.thrift.test.zip_args.read(org,zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadInt(String,String)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(String,Schema,String,JsonNode)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.protobuf.Test.valueOf(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.MailImpl.send(Message)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.perf.test.generic.GenericTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.BasicTest.BasicTest(String,String,int)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.getBuckets()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroTypeException.AvroTypeException(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testDoubleDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.SchemaBuilder.arrayDefault(List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.LockableArrayList(int)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.setMessage(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.CloningVisitor.get()": "[add] resolution code using new reusable visitor.", "org.apache.avro.thrift.test.ping_args.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.createNettyClientAvroHandler()": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.encodeDouble(double,OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.TestGenericDatumWriter.writeFieldWithDefaultWithExplicitNullDefaultInSchema()": "AVRO-1954 - Schema.Field.defaultVal() generates: Unknown datum type org.apache.avro.JsonProperties$Null. Contributed by Nandor Kollar\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.populateDoubleArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.DataFileStream.setFlushOnWrite(boolean)": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.header(StringBuilder,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.Array.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.Message(String,String,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.FixedSchema(Name,String,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.convert(Object,Schema,LogicalType,Conversion)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.trevni.TestColumnFile.testStrings()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseFieldTypeBuilder.bytesType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.FsInput(Path,FileSystem)": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.directBinaryDecoder(InputStream,BinaryDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.generic.TestStateEncode.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Foo.toString()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.Test.setListField(List)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testSchemaWithDocs()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestParsingTable.makePrimitiveTestData(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ProtocolTask.doCompile(File)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testReader()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.util.NonParameterized.testBadSingleLineHeredoc()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.getNumber()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherMapRunner.run(RecordReader,OutputCollector,Reporter)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.InduceSchemaTool.getName()": "AVRO-233.  Elaborate Java tool API.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@883819 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.toBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.getDefaultInstance()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ResolvingDecoder.readString()": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroReducer.reduce(AvroWrapper,Iterator,OutputCollector,Reporter)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.getMetadataWithAvroSchemas()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithDefaultTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.idl.TestSchemaResolver.testIsUnresolvedSchemaError1()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.escapeForJavaDoc(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.open(int)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.eq(List,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.clear()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReflectDoubleTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.handshake(Decoder,Encoder)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.compareTo(Fixed)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.setFields(LinkedHashMap)": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add.getResultHandler(AsyncFrameBuffer,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeCharField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.SeekableFileInput.seek(long)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestEncoders.testDirectBinaryEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.seek(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.getTimestampFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestDataFileMeta.testBlockSizeSetInvalid()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.tool.TestCatTool.testHelpfulMessageWhenNoArgsGiven()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testFixed64()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.thrift.test.Nested.setX(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeMapEnd()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.Test(boolean,byte,short,long,double,String,Map,List,Set,E,Nested,FooOrBar)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory)": "AVRO-898.  Java: Extend NettyServer to support SSL.  Contributed by Vadim Tsarik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178536 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooArrayBuilderList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readWithConversion(Object,Schema,LogicalType,Conversion,ResolvingDecoder)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.GenericRecordBuilder(Record)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.noDefault()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.getPipeline()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.specific.ExternalizableInput.read()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.setMeta(String,String)": "AVRO-2308: Use Java StandardCharsets\n", "org.apache.avro.ipc.CompressionChannelPipelineFactory.getPipeline()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getCompressionType()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setBool(boolean)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Error.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.InduceMojo.loadClass(ClassLoader,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.M(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Decoders.set(byte,int,int,byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.writeBytes(byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SyncableFileOutputStream.SyncableFileOutputStream(File,boolean)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.TestGenericRecordBuilder.buildWithoutSettingRequiredFields1()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.concat(Object[])": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeString(Utf8)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parseNamespace(JsonNode)": "AVRO-34.  Upgrade to Jackson version 1.0.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777671 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setF32(float)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.GenericReaderWithOutOfOrderTest.GenericReaderWithOutOfOrderTest()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericNestedFakeTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.testEnumDefaultNotAppliedWhenCompatibleSymbolIsFound()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BasicTest.newDecoder()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.bestBranch(Schema,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setFooOrBar(FooOrBar)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.apply(Method)": "AVRO-2192: Remove paranamer dependency from Avro (#400)\n\n", "org.apache.avro.UnionFieldTypeBuilder.longBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.SequenceFileReader.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.isObjectImmutable(Object)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.Reference.getName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testFlushCount()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testImmutability1()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestZstandardCodec.testZstandardCompressionAndDecompression()": "AVRO-2195: Add Zstandard Codec (Benson Qiu via Nandor Kollar)\n", "org.apache.avro.io.GenericWithOutOfOrder.getReaderSchema()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileConcat.testConcatenateFiles()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.IntTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.basic.ArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.JsonDecoder.skipMap()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.SmallLongTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testNamedCodecs()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.NonAvroReducer.reduce(AvroKey,Iterator,OutputCollector,Reporter)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.computeValue(Class)": "Remove use of guava by utilizing java8 lambdas and collections\n", "org.apache.avro.specific.Avro14SpecificCompiler.escapeForJavaDoc(String)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReflect.hashCode()": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.doc(StringBuilder,int,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.getInputKeySchema(Configuration)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.specific.TestSpecificData.testExternalizeable()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.TestReflect.testP0()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getDecoder()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.thrift.test.ping_args.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.setSchema(Job,Schema,Schema)": "AVRO-1215. Java: Fix AvroMultipleOutputs when specifying baseOutputPath.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.compileToDestination(File)": "AVRO-150. Java: fix compiler to not re-generate up-to-date code.  Contributed by John Yu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.getParserForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnFileWriter.writeTo(OutputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.MailImpl.awaitMessages()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setI64(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.parsing.EnumLabelsAction.EnumLabelsAction(List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.writeError(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getNonNullIndex(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.getIntArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.AvroMissingFieldException.AvroMissingFieldException(String,Field)": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.tool.TestDataFileTools.countRecords(File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryEncoder.flush()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.newInstance(Class,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.setMapOutputSchema(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.DiskWriterThread.DiskWriterThread(BlockingQueue,TreeMap,boolean,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.BaseTypeBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.getDataModel()": "AVRO-1522. Java: Add support for compression codecs to SortedKeyValueFile.  Contributed by Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.decompress(ByteBuffer)": "AVRO-2262 Java compression codec fixes. (#352)\n\nAVRO-2262 Java compression codec improvements", "org.apache.avro.generic.TestGenericConcreteEnum.testGenericWriteAndRead()": "AVRO-1810: Fix GenericDatumWriter w/ enums (#462)\n\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.TestSchemaBuilder.testEnum()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.equalCachedHash(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.TestThrift.check(Test)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.SleepyResponder(Protocol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalDouble(String,double)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setEnum(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.NettyTransportCodec.getPackHeader(NettyDataPack)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapreduce.TestAvroKeyValueRecordReader.createSeekableInput(Configuration,Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringDefault.stringDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestLocalTransceiver.respond(Message,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeLong(long)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.getShortDescription()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.next(D)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.TaggedInputSplit(InputSplit,Configuration,Class,Class,Schema)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.parseDelimitedFrom(java,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.GenericResolving(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificFixed.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.getComputeTime()": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getMinTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.Player(java,java,java,java)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DoubleTest.genSourceData()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LitS.hashCode()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroReducer.reduce(K,Iterable,AvroCollector,Reporter)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.DataFileReader(SeekableInput,DatumReader)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.computeHash()": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add.onComplete(Integer)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceHandler.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Foo.parser()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.ByteBufferValueReader.ByteBufferValueReader(List)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ValidateMutualRead.canRead(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.EnumSchema.getEnumOrdinal(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.parsing.Symbol.hasErrors(Symbol)": "AVRO-1883: Java: Fix incompatible schema detection nested in unions. Contributed by Yibing Shi.\n", "org.apache.avro.reflect.FieldAccessReflect.getAccessor(Field)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.testLong()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.fromByteBuffer(java)": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.util.Utf8.getBytesFor(String)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Root(Symbol[])": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testP2()": "AVRO-487. Fix Java reflect protocols to transmit error messages.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@927167 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnDescriptor.ColumnDescriptor(Input,ColumnMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getCurrentTokenId()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.ipc.Connection.close()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkSchemaNames(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testBinaryToJson()": "AVRO-337. ant test-java fails in Cygwin due to CRLF v LF problem\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899885 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(Schema,String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.newBuilder(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesDefault.bytesDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_string()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.XZCodec.toString()": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.size()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.toByteBuffer()": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.TestReflect.testStringables()": "AVRO-1146. Java: Serialize several built-in Java classes as strings, including BigDecimal, BigInteger, URI, URL, Date and File.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383026 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.reflect.ReflectLongArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.getIntArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SaslSocketTransceiver.wrap(byte)": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.io.TestBlockingIO.testSkip_2()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testDollarTerminatedNamespaceCompatibility()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReflectBigRecordTest.ReflectBigRecordTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Pair.Pair(Utf8,Long)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeMapEnd()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testSyncDiscovery()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.perf.test.record.RecordWithPromotionTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.Perf.RecordWithPromotion()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeMapStart()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordReader.getCurrentKey()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Iterator.hasNext()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.doCompile(String)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getDefault(FieldDescriptor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.readFixed(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.ResolvingTable(Schema,Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testMultipleFieldAliases()": "AVRO-2421 Allow multiple @AvroAliases annotations on classes and fields (#544)\n\n", "org.apache.avro.Resolver.ReaderUnion(Schema,Schema,GenericData,int,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.EncoderFactory.getBlockSize()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.getMessage()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.thrift.test.Test.setMapFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.symbols(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hashCode()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.getIntArrayCount()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.getProps()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testComplexProp()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setSfixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.FastReaderBuilder.withClassPropEnabled(boolean)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.hadoop.io.AvroValueDeserializer.AvroValueDeserializer(Schema,Schema)": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjectionNoreducer(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.getValueDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaPairCompatibility.getResult()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.MapBuilder.MapBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.OrderPlugin.clientStartConnect(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList5()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.reflect.UnsafeCharField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.setConf(Configuration)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.isSetSuccess()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.TestSchemaMojo.testSchemaMojoJoda()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReferenceManager.get(int)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaPairCompatibility.getType()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.specific.SpecificCompilerTool.getName()": "AVRO-233.  Elaborate Java tool API.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@883819 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslParticipant.SaslParticipant(SaslClient)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setOutputMeta(JobConf,String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolReflect.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.unsetNum2()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.hello(String)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.checkString(String,Decoder,int)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.SchemasTest.visitTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.thrift.test.Test.readObject(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.M.newBuilderForType(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.Util.createEventlessSpan(ID,ID,ID)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setTimeMicros(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.DecimalConversion.toBytes(BigDecimal,Schema,LogicalType)": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.Pair.set(K,V)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.hashCode()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.generic.GenericDatumWriter.writeFixed(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.setFixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryData.pos()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.getProgressable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.MapEntry.MapEntry(K,V)": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.TestDataFileMeta.testUseReservedMeta()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.AvroMultipleOutputs.write(Object,Object)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyDataPack.getDatas()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.Schema.Field(Schema,String,JsonNode,Order)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SampleRecord.AnotherSampleRecord(Integer)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.M(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.testAlternateModel()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ReferenceManager.getSchema()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolParsing.parseMessage(String)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(Schema,SpecificData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.getSerializer(Class)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.dump(byte)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BufferOutputStream.toBufferWithoutCopy()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.TimestampMillis.validate(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.HttpTransceiver.writeBuffers(List)": "AVRO-1005. Java: Extend HttpTransceiver to permit specification of a Proxy.  Contributed by Craig Landry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241677 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.requiredFixed(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getDateTimeLogicalTypeImplementation()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.util.WeakIdentityHashMap.get(Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.hasNext()": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.Pair.Pair(Long,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestWeather.configure(JobConf)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.DataBlock(long,int)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeRecord(Schema,Object,Encoder)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.SaslSocketTransceiver(SocketChannel,SaslServer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.HttpServer.HttpServer(Responder,ConnectionFactory,String,int)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.hadoop.io.RecordCompressWriterBase.RecordCompressWriterBase(FileSystem,Configuration,Path,Class,Class,int,short,long,CompressionCodec,Progressable,Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherRecordReader.getProgress()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.getSerializedSize()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BufferAccessor.getBuf()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.removeFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.BooleanWritableConverter.convert(BooleanWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.record(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.createDecoder(SchemaStore)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.SocketServer.Connection(SocketChannel)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.newBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getParserForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaValidation.testOnePriorCompatible()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testStopServer()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.BytesDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getAverageBytes(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getChildren()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.IntTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.InteropTest.main(String)": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.io.ParsingTable.mkNonTerm(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.getDatumReader(Schema)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeFixed(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AnotherSampleRecord.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getSyms(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ErrorAction.ErrorAction(Schema,Schema,GenericData,ErrorType)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.mapred.Utf8LineRecordReader.createValue()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.encodeDouble(double,byte,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.writeTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.NullWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.getParserForType()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getConversionFrom(Class,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.hashCode()": "AVRO-141.  Fix a NullPointerException in ReflectData#isRecord().  Contributed by Isabel Drost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionString(String,CharSequence,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testEquals()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Builder.getTimestampFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestBulkData.testRead()": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.releaseEnterPermit()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.stats.IntegerHistogram.add(Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.Builder()": "AVRO-1814: Generated java code fails on variables with a TLD name like 'org'\n", "org.apache.avro.data.TestJodaTimeConversions.testDateConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.EnumSchema.getEnumDefault()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestEncoders.testBadDirectBinaryEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeFloat(float)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.setBar(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.LitS2.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testRecordWithPrimitiveName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.testSamplerateSmallerThanInput()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.Foo.setFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.generateRepeaterData(Encoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.isSetNum1()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testByte()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeInt(int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRecordBase.customEncode(Encoder)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setS(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Foo.hasDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.Writer.withBufferSizeBytes(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.getFileSystem()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.nullableFloat(String,float)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addAllIntArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaBuilder.testFieldMapObjectProp()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.hadoop.file.Options.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.arrayNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileReader12.remove()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.SSLChannelPipelineFactory.createServerSSLContext()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchemaValidation.testInvalidBuild()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.close()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isCreateOptionalGetters()": "Squashed commit of the following:\n\ncommit 6a919437bff0977926b33cd56165994b22fbdf74\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Fri Nov 25 10:31:40 2016 +0100\n\n    AVRO-1961: Extra flag to replace the regular getters with getters that return an Optional\n\ncommit 91d58b5dba7562240a84f6885037f9c74dc973e6\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Tue Nov 22 17:23:18 2016 +0100\n\n    AVRO-1961: Java: Generate getters that return a Java 8 Optional.\n\nCloses #162\n", "org.apache.avro.Schema.LockableArrayList(List)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.initializeConnections()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMillisConversionSecondsLowerLimit()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testProtocolWithDocs()": "AVRO-1681. Improve generated JavaDocs. Contributed by Charles Gari\u00e9py-Ikeson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1687778 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BlockingBinaryEncoder.endBlockedValue()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.readColumnStarts(InputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.unbox(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericRecordBuilder.buildWithoutSettingRequiredFields2()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setUint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypesInUnionOfRecords()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setDouble(double)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificRecordBase.hasCustomCoders()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getAnnotatedUnion(Union,Map)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.stats.TestStopwatch.testTwiceStopped()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromArray(Collection,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaValidationException.SchemaValidationException(Schema,Schema)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceTypeFactory.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.trevni.avro.TestCases.fromJson(Schema,File)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.basic.ExtendedEnumTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.file.DataFileReader12.iterator()": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.prepare()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.checkMeta(DataFileStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionFieldTypeBuilder.stringType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooArrayBuilderList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(Schema,Schema)": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Vals.Vals(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.zip_args.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.FileSpanStorage.run()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "example.AvroWordCount.reduce(Text,Iterator,OutputCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.calculateCompatibility(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.JsonEncoder.writeArrayStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.get()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.UnresolvedUnionException.getUnresolvedDatum()": "AVRO-723. Java: Pass error messages for unexpected RPC exceptions through to client.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056499 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setStringBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValueReader.skipMap()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageDecoder.initialValue()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.mapred.TestAvroOutputFormat.testNoCodec()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.generic.GenericDatumWriter.writeMap(Schema,Object,ValueWriter)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.LongTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.ReflectFloatTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.TestAvroCharSequenceComparator.setup()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.avro.RandomData.iterator()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.check(BlockedValue,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.newBuilderForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSequenceFile.withBlockSizeBytes(long)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.readUtf8(Object,Utf8)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasDec()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.reflect.ReflectDatumReader.newInstance(Class)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.hasRelatedids()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.isArray(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.writeEnum(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testRecordWithNullIO()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.TestReflect.testList()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.data()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.getInt(Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ParsingEncoder.startItem()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SortMapper.close()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(InetSocketAddress,Long)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.tool.CatTool.skip(long)": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FloatFoo.FloatFoo(Random,boolean)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.FloatTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Test.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setRequestHandshakeMeta(Map)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.Builder.Builder(org)": "AVRO-1199. Java: Fix SortedKeyValueFile to copy the key used to compare against next.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1409542 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.ValidatingDecoder(Schema,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.TestMailImpl.send(Message)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericData.deepCopyRaw(Schema,Object)": "AVRO-1695. Java: Fix GenericData#deepCopy() to support logical types.\n", "org.apache.avro.thrift.test.Test.bufferForBinaryField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeFixed(byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setSfixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.DoubleBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.items()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.isReserved(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestServiceImplBase.concatenate(String,boolean,long,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.Foo.getInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parse(JsonNode,Names)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.avro.HadoopInput.close()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherRecordReader.createValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.resolve(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.util.WeakIdentityHashMap.clear()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.configure(JsonGenerator)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestAllCodecs.testCodec()": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.Message.toJson(JsonGenerator)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.readValue(org,org)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.reduce(AvroKey,Iterator,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.initializeRecordReader(RecordReader,RecordAdjust)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.Resolver.WriterUnion(Schema,Schema,Action)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.SchemaCompatibility.typeMismatch(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.Transceiver.getRemote()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.NamedSchema(Type,String,String)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.RawMessageEncoder.toBufferWithoutCopy()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.Schema.getAliases(Schema,Map,Map,Map)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.PrimitiveBuilder.end()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parsePartialFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.file.SortedKeyValueFile.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordTest.RecordTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalFloat(String,float)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setResponseCallMeta(Map)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldBuilder.union(Schema,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.setup()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.parsing.Symbol.flatten(Map,Map)": "AVRO-328. Performance improvements Validating encoder/decoder for nested records\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumAdjust.EnumAdjust(Schema,Schema,int)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCollector(String,String,Reporter,String,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.skipChildren()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.DefaultStartAction.DefaultStartAction(Symbol,byte)": "AVRO-383. Optiminzing ResolvingDecoder for default values\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904596 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ValidateCanBeRead.validate(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroRecordReader.AvroRecordReader(JobConf,FileSplit)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addAllSyms(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.checkSerialization(Schema,Object,DatumWriter,DatumReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testRecord()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.flush()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testP4()": "AVRO-1421. Java: Add an @AvroSchema annotation to reflect.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.IdentityWeakReference(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.NestedStandardScheme.write(org,Nested)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.LongDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isCustomCodable(Schema)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.protobuf.Builder.hasString()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeDoesNotAllowStringForGenericEnum()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.tool.CatTool.nextInput()": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.getValueSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getBigIntegerValue()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.DoNothing(Schema,Schema,GenericData)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.TestProtocol.testSplitProtocolBuild()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.LongTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.TestGenericDatumWriter.writeEnum(int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ToTrevniTool.getName()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.checkRPCMetaMap(Map)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.getPipeline()": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMillisConversion()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestDataFileCustomSync.testInvalidSync()": "AVRO-1685. Allow specifying sync in DataFileWriter.create. Contributed by Sehrope Sarkuni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1687559 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFileOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimalConversion.toBytes(CustomDecimal,Schema,LogicalType)": "Change default from joda to jsr310... no sense promoting the use of joda anymore\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.JsonDecoder.overrideCurrentName(String)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.specific.Builder.clearI64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.BlockedValue.BlockedValue()": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BaseDecoder.decode(byte)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.TestSchemaBuilder.testRecord()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.BarRecord.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.MapReader(FieldReader,FieldReader)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.UnionSchema.getIndexNamed(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.DoubleSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.hashCode(byte,int,int,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.setDefaultsGenerated(boolean)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordWriter.initSchema(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withIndexInterval(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.Crc32Checksum.compute(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testUnionWithMapWithUtf8Keys()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.Builder.clearS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.JsonEncoder.setIncludeNamespace(boolean)": "Option to remove the namespace from the JSON encoder\n", "org.apache.avro.Schema.hasEnumSymbol(String)": "AVRO-363. estSchema had two tests disabled; new test for named schemas named\nafter primitives. (philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901919 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiverThreadFactory.newThread(Runnable)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeFloatField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooArrayCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.Builder()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.hadoop.file.Stringy.Stringy(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RecordAdjust.noReorder()": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.RecordSchema.computeHash()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.unionLong(String,long,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Incompatibility.getMessage()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.parsing.Parser.popSymbol()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableInput.read(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaBuilder.testFieldArrayObjectProp()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.mapred.TestAvroMultipleInputs.NamesRecord(int,CharSequence)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection_newmethods_1()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.generic.GenericDatumReader.readInt(Object,Schema,Schema,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.LongTest.genSourceData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReflect.testString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOFHandling()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BooleanTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.GenericDatumReader.addToArray(Object,Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SinkResponder.respond(Message,Object)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.createDecoder(SchemaStore)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.thrift.test.add_result.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BooleanBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.isReadTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtobuf.testMessageWithEmptyArray()": "AVRO-2788: Default Proto repeated fields to empty arrays (#850)\n\nCurrently Avro<->Proto schema conversion could break compatibility\r\nThis PR fixes the issue by assigning empty arrays as default value\r\nFor more details, see the Jira at https://issues.apache.org/jira/browse/AVRO-2788\r\n\r\nCo-authored-by: Tianyu Lang <tianyu@squareup.com>", "org.apache.avro.protobuf.multiplefiles.M.parseDelimitedFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceCollection.getMaxBytes(SortedSet)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.GenTest(File,File)": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testNonStringable()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mojo.TestSchemaMojo.testSchemaMojo()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.io.parsing.Symbol.FieldAdjustAction(int,String,Set)": "AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema (#316)\n\n* AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema\r\n\r\nJsonDecoder doesn't honor aliases\r\n\r\n* No need to wrap aliases to unmodifiableSet, since getter Schema#aliases already does it\r\n\r\n* Remove unused import to pass Checkstyle check\r\n", "org.apache.avro.protobuf.noopt.Foo.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.clearBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificCompiler.enqueue(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestKeyValueWordCount.map(LongWritable,Text,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.M(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflectionUtil.testUnsafeWhenNotExists()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.SchemaBuilder.unionDouble(String,double,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testR3()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Alternative.getSymbol(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testRead(String,String,String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ArrayTest.readInternal(Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.equals(Object)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "avro.examples.baseball.FieldVisibilityTest.Builder(avro)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.Perf.init()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.startInitialization()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.trace.TestSpanTraceFormation.createFullSpan(Long,Long,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestBZip2Codec.testBZip2CompressionAndDecompression()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.XZCodec.createInstance()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.getBlockCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Stringy.hashCode()": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Stopwatch.Stopwatch(Ticks)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readMapKey(Object,Schema,Decoder)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.SleepyResponder.SleepyResponder(Protocol)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDecimalConversion.testToFromFixedRepresentedInLogicalTypeAllowRoundUnneccesary()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.specific.SpecificCompiler.compile(Schema)": "AVRO-221.  Mangle Java reserved words in generated code to avoid name conflicts.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882689 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.ensureIntArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaCompatibility.getLocation()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.util.TestUtf8.testHashCodeReused()": "AVRO-2704: Cache Hashcode of UTF8 Strings (#783)\n\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.TestProtocolSpecific.testRepeatedAccess()": "AVRO-884.  Java: Fix a regression in RPC so that one-way messages fail when the transciever cannot connect.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1166326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.TetherTaskRunner(TetherTask)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.getSchemaName(Object)": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.readDouble()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.generateRepeaterData(Encoder)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SeenPair.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.KeyRecord.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.mkRepeater(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.skip(InputScanner,Decoder,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.RawMessageEncoder.RawMessageEncoder(GenericData,Schema)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.file.DeflateCodec.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.populateDoubleArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testCalcAllArgConstructorParameterUnitsFailure()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.unsetNum2()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.EnumSymbol.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleResult(Void)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.main(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.TestNettyServer.initializeServer(Responder)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.add(E)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RecordCountTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.io.parsing.Symbol.EnumAdjustAction(int,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.write(K,V)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.runTests()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.getConstructorAsSupplier(Class)": "AVRO-2725: Use one ReflectionUtil for utilities. (#797)\n\n* AVRO-2725: Use one ReflectionUtil for utilities.\r\n\r\n* Apply spotless.\r\n", "org.apache.avro.io.BlockingBinaryEncoder.writeBytes(byte,int,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testFieldNullObjectProp()": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.newBuilder()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.EncoderFactory.get()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificData.testGetMapSchema()": "AVRO-1166. Java: Fix bug in SpecificData.getSchema(Map).  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1386807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.buildUnion(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.seek(long)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryEncoderFidelity.generateLegacyData()": "AVRO-1457. Java: Fix Encoder so that offset in non-array-backed ByteBuffers is not altered when written. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.EnumSchema(Name,String,List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasedAccessor.isStringable()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.lastOneWins_Builder()": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalFloat(String,float)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.ColumnMetaData(String,ValueType)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.SmallLongTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.test.Test.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.IntegerHistogram.IntegerHistogram(Segmenter)": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.findClass(String)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.specific.TestSpecificData.getSchema()": "AVRO-1299. Java: SpecificRecordBase implements GenericRecord.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471047 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.fixedType(String,int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.bytesBuffered()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWeather.tearDown()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getValues(int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.data.Jsr310TimeConversions.adjustAndSetValue(String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.trace.Trace.printWithTiming()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testArray()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.hashCode()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getTextCharacters()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.trevni.avro.WordCountUtil.validateCountsFileGenericRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SaslSocketTransceiver.unwrap(byte,int,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.noopt.Foo.clear()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.clearSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.RawMessageEncoder.encode(D,OutputStream)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.mapred.TestReflectJob.toString()": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.HashData()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.iterator()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.record.ValidatingRecordTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.create(Schema,GenericData,CodecFactory,OutputStream,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.io.AvroDeserializer.open(InputStream)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnator.AvroColumnator(Schema)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificCompiler.SpecificCompiler()": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.hasNext()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetheredProcess.close()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericNestedFakeTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(InetSocketAddress)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.Histogram.getBucketLabels()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapSchema.hashCode()": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Referenceable.getIdFieldName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.toBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.hasFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.AvroResponseInputStream.writeResponse(OutputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMillisConversionSecondsUpperLimit()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.ResolvingTable.mkReaderUnionAction(Schema,Schema,Map)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.exceptionCaught(ChannelHandlerContext,Throwable)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.FastReaderBuilder.getSpecific()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.thrift.test.Test.setI16OptionalField(short)": "AVRO-1500. Java: Fix bug in handling of Thrift shorts in unions.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601020 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.validateIncompatibleSchemas(Schema,Schema,List,List,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.writeArrayEnd()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.getWriterSubset()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.map(AvroKey,NullWritable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.channelInactive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.BlockingValueWriter.BlockedValue()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeBytes(byte)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperSerializer.open(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SimpleImpl.SimpleImpl(AtomicBoolean)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.unionEquiv(Schema,Schema,Map)": "AVRO-2274 Improve resolving performance when schemas don't change. (#393)\n\n* AVRO-2274 Improve resolving performance when schemas don't change.\r\n\r\n* AVRO-2274 Break out of field-no-reorder loop as early as possible.\r\n", "org.apache.avro.io.JsonDecoder.setCodec(ObjectCodec)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.mapred.Pair.Pair(Integer,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaType(Schema,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.R4.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.runTests()": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.testMultipleRPCs()": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testHashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setEnum(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnFileWriter.checkColumns(ColumnMetaData)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Builder.getInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.BZip2Codec.decompress(ByteBuffer)": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeInt(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.getSchema()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.create(Completion,NameContext,String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.Perf.getReaderSchema()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getSymsCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.hasString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.Cache.addSchema(Schema)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.io.ValidatingDecoder.arrayNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiverWhenFailsToConnect.testNettyTransceiverReleasesNettyChannelOnFailingToConnect()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestWordCount.testJob(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.TestEncoders.testJsonEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.NullSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.hasFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Field.name()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.addFooArrayBuilder()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.addMultiNamedOutput(JobConf,String,Class,Schema)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkValidateDefaults(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ArraySchema.toJson(Names,JsonGenerator)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.Utf8.toUtf8(String)": "AVRO-1348. Java: Improve UTF-8 to String conversion performance in Java 6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.enumForId(short)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.endRow()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Buffer.set(byte,int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.getIncompatibility()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.mapred.AvroJob.getDataModelClass(Configuration)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapreduce.TestWordCount.map(AvroKey,NullWritable,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testConvertGenericToSpecific()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.ReaderUnion(Schema,Schema,int,Action)": "AVRO-2275 Some name cleanup, plus changes to make it easier to utilize Resolver.Action trees.\n", "org.apache.avro.ipc.SaslSocketTransceiver.isComplete()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.test.BasicState.getBatchSize()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.parsing.LitS2.hashCode()": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.io.parsing.Symbol.DefaultStartAction(Symbol,JsonNode)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.writeRecord(Schema,Object,ValueWriter)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.NullCodec.compress(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.finishOverflow()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.allocNonTerm(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readBytes(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.io.BufferedBinaryEncoder.writeDouble(double)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericOneTimeReaderUse.getReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.equals(zip_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypesInArrayOfRecords()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.SSLChannelFactory.SSLChannelFactory()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clear()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getListFieldIterator()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.deepCopy(Schema,T)": "Revert \"AVRO-1695. Fix deepCopy() to get correct logical type conversion.\"\n\nThis reverts commit 9456db01859dd3619fb09a6d4205ab433b357b02.\n\nIncorrect JIRA key\n", "org.apache.avro.ipc.ByteBufferOutputStream.reset()": "AVRO-578. Java: add payload data to RPC context for use by plugins.  Contributed by Patrick Wendell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@958149 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FixedSchema.FixedSchema(String,String,int)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReflect.testNull()": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.WriterUnion(Schema,Schema,GenericData,boolean,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeByteField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.RepeaterTest()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testBadJsonEncoderInit()": "AVRO-905. Java: Change JsonEncoder to write objects on separate lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179361 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCollector(String,String,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.RawMessageDecoder.RawMessageDecoder(GenericData,Schema,Schema)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.setFields(List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestValidatingIO.doubleValue(Object)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteSource.compactAndFill(byte,int,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testUndeclaredError()": "AVRO-573.  Java: Fix various bugs with undeclared RPC exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980187 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.getBucketLabels()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasF64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.io.DirectBinaryEncoder.configure(OutputStream)": "AVRO-2627: Unify NullPointerException Management\n", "avro.examples.baseball.Builder.clearTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSchemaSplit()": "AVRO-1316. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480808 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Parser.parse(InputStream)": "AVRO-1715. Java: Close files opened by the Schema parser. Contributed by Pavel Safrata.\n\nThis also clarifies the InputStream parse method, which does not own the\nstream that is passed in and does not close it. The tools have been\nupdated to correctly close streams passed to the parser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1707389 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.N(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaBuilder.testNamespaces()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.newArray(Object,int,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.TestDataFileReflect.BazRecord(int)": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadFloat()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertAvroKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.EnumSchema(Name,List)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FieldTypeBuilder(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceableTracker.getId(IndexedRecord,Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.PairCollector.collect(Pair)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.Foo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.TestJodaTimeConversions.testTimeMillisConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.io.InputStreamByteSource.tryReadRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalFloat(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeDouble(double)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.GenericDefault.GenericDefault(FieldBuilder,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithDefaultTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Protocol.getErrors()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testIsUnionOnMap()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.protobuf.noopt.Foo.hasSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.GenericReaderWithPromotionTest.GenericReaderWithPromotionTest()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getT()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Decimal.addToSchema(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getReaderFor(Action,Conversion)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.RecordAdjust(Schema,Schema,Action,Field,int)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Test.getFooBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.UnionAccumulator.endUnion()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.compiler.schema.Schemas.visitTerminal(SchemaVisitor,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.FooOrBar.tupleSchemeWriteValue(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericRequestor.GenericRequestor(Protocol,Transceiver,GenericData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testReflectWithinGeneric()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderBuffer.length()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableFileInput.SeekableFileInput(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.BaseDecoder.decode(InputStream)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.perf.test.basic.BytesTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Schema.parse(JsonParser)": "AVRO-1715. Java: Close files opened by the Schema parser. Contributed by Pavel Safrata.\n\nThis also clarifies the InputStream parse method, which does not own the\nstream that is passed in and does not close it. The tools have been\nupdated to correctly close streams passed to the parser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1707389 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.getInputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.newEncoder()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithPromotionTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.MailImpl.assertAllMessagesReceived()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.testTraceAndCollectionMemory()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniMetadataTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithArray.setRelatedIds(int)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.newBuilderForType()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.DirectBinaryDecoder.configure(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UUIDConversion.getLogicalTypeName()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCreateRandomFileTool.testMissingCountParameter()": "AVRO-1990: CreateRandomFileTool should validate arguments\n\nThis closes #226\n", "org.apache.trevni.ColumnValues.seek(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add.onError(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.UnionSchema.addProp(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.LegacyBinaryEncoder.SimpleByteWriter(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ClassAccessorData.getAccessorFor(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Player.createDecoder(SchemaStore)": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testBinaryToNoPrettyJson()": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createDatumReader(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemasWithVariousFieldTypes()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.thrift.test.add_args.getFieldValue(_Fields)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.Builder.getSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimalConversion.getConvertedType()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.AvroKeySerialization.AvroWrapperDeserializer(DatumReader)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableFileInput.length()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestSequenceFileReader.checkFile(FileReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testAvroDoc()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.MapImpl.map(Utf8)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringConversion.getConvertedType()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.TestCircularReferences.getId(IndexedRecord,Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setFloat(float)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestReflect.checkStringable(Class,String)": "AVRO-1146. Java: Serialize several built-in Java classes as strings, including BigDecimal, BigInteger, URI, URL, Date and File.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383026 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.mergeFrom(org)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.reflect.ReflectDatumWriter.writeString(Object,Encoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testUnionInArray()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.stats.TestHistogram.testBadValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.OutputBuffer.writeFixed64(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.parseFrom(com,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.addAllFooArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.CustomDecimal.CustomDecimal(BigInteger,int)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.io.GenericTest.GenericTest(String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.maybeForceBuilderInitialization()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificCompiler.renderTemplate(String,VelocityContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecimalConversion.getConvertedType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipBytes()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.file.DeflateCodec.compress(ByteArrayOutputStream)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Jsr310TimeConversions.getLogicalTypeName()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Incompatibility.toString()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestProtocolSpecific.testUndeclaredError()": "AVRO-723. Java: Pass error messages for unexpected RPC exceptions through to client.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056499 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testInvalidNameTolerance()": "AVRO-838. Java: Permit invalid characters in record and field names of schemas read from data files, for compatibility with 1.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141677 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredFixed(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.newBuilder()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.thrift.test.ping_resultTupleScheme.write(org,ping_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.reflect.PojoWithList.setRelatedIds(List)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectTest.reset()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPojoWithOptionalTurnedOffByDefault()": "[AVRO-1577] Update couple more methods to use try-with-resources\n", "org.apache.avro.genavro.GenTest.writeFile(File,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.asciiStringWrittenWithUnionSchemaIsConvertedToBytesSchema()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.io.RecordReader.canReuse()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.io.JsonDecoder.readLong()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedSchema.getAliases()": "AVRO-634.  IDL: Add support for aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@996649 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.SymbolTable(Protocol)": "[add] resolution code using new reusable visitor.", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.testFullServerPath()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.ExternalizableInput.markSupported()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ErrorStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.testName()": "AVRO-866. Java: Add support in IDL for documentation in protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1173278 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.recursiveProcess(TraceNode,TraceNodeStats)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferValueWriter.ByteBufferValueWriter()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldTest.hasTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.UnionSchema.equals(Object)": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TetherTool.run(InputStream,PrintStream,PrintStream,List)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaCompatibility.checkFixedSize(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.file.LengthLimitedInputStream.read(byte,int,int)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.hasGeneratedJavaClass(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.EnumBuilder(String,String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificErrorBuilderBase.clearValue()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.compare(Object,Object,Schema,boolean)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.HadoopReducerBase.remove()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.thrift.test.FooOrBar.standardSchemeWriteValue(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.parse(JsonNode)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setD(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.SchemaBuilder.nullBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.SeenPair(Object,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parseFrom(byte)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionSchema.getTypes()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.data.TestJodaTimeConversions.testLossyTimeMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.trevni.avro.TestShredder.testSimpleArray()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.TimestampMicrosConversion.fromLong(Long,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "example.SpecificMain.main(String)": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.ReferenceManager.getConvertedType()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withProgressable(Progressable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setSfixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.length()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.clearFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.unionFloat(String,float,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.getCompatibility(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.getB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Schema.Field(String,Schema,String)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.BaseTypeBuilder.longBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.DataFileReader(SeekableInput,DatumReader,Header)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.HadoopCombiner.collect(Pair)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.ensureFooArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Builder.getTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.SSLChannelFactory()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchema.check(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.generateData()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordWriter.sync()": "AVRO-1418. Java: Add sync support to AvroMultipleOutputs.  Contributed by Deepak Kumar V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556378 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNestedNullNamespaceReferencingWithUnion()": "AVRO-1473. Java: Fix references to names in the empty namespace.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.addRPCPlugin(RPCPlugin)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testToStringEscapesControlCharsInBytes()": "AVRO-2276: Escape Map keys in GenericData.toString to generate valid JSON\n", "org.apache.avro.protobuf.multiplefiles.M.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.getIntArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BarRecord.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.put(String,Object)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.ProtocolMojo.getIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(CharSequence,GenericContainer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.hasCurrentToken()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.data.TimeMicrosConversion.toLong(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.mapred.AvroMultipleInputs.addInputPath(JobConf,Path,Class,Schema)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.hadoop.io.Writer.getBlockSizeBytes()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setInt32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseTypeBuilder.nullBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.SpecificRecordBase.hashCode()": "AVRO-182.  Fix Java's generic and specfic implementations of equals() and hashCode() to be consistent with compareTo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835070 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.NamedSchema.getDoc()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.perf.test.generic.GenericWithPromotionTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ResolvingTable.getReaderUnionIndex(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearSyms()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.NamedBuilder.addAliasesTo(Field)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.create(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMicrosConversion.getConvertedType()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeBoolean(boolean)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.AsyncProcessor(I,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.Jsr310TimeConversions.getRecommendedSchema()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.generic.GenericDatumWriter.getMapSize(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferUnknownSchema()": "AVRO-2265 Remove Guava as a test dependency (#377)\n\n", "org.apache.avro.io.ParsingTable.isEnum(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getRecordReaderFromCache(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.data.TimestampConversion.toLong(DateTime,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ValidateMutualRead.validate(Schema,Schema)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.nullType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.flatten(Symbol,int,Symbol,int,Map,Map)": "AVRO-1667: Fix parser grammar flattening for recursive cases. Contributed by Zoltan Farkas.\n\nRecursive records use a Fixup class to copy sequences of parser Symbols\nbecause the final sequence isn't yet known. But these weren't being\ncopied when the sequences being fixed up were copied, which caused the\nfinal grammar to have nulls in some cases.\n", "org.apache.avro.protobuf.Test.Builder()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isString(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.build()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasedAccessor.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testComplexUnions()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.TestNettyServerWithSSL.initializeConnections()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.endRow()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.hasTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.Perf.ReflectNestedLargeFloatArrayBlockedTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.clientFinishConnect(RPCContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimestampMillisConversion.toLong(Instant,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.compiler.schema.TestSchemas.afterVisitNonTerminal(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertBooleanWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.addFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.PojoWithList.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.CallFuture.await(long,TimeUnit)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(Class)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Float)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseDelimitedFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.FloatTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestResolvingTable.test(String,String,int,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.getBuckets()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.OutputStreamSink(OutputStream)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerializer.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.GenericDatumReader()": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.testEnumDefaultNotAppliedWhenWriterFieldMissing()": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.reflect.ReflectData.setElement(Schema,Type)": "AVRO-241.  In Java, add a union annotation for reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@887439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getAverageTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.AvroRemoteException.AvroRemoteException(Object,Throwable)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReflect.equals(Object)": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRuntimeException.AvroRuntimeException(String,Throwable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectFloatTest.ReflectFloatTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.skip(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.getValueType()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.ReduceCollector.ReduceCollector(OutputCollector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.hasId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_call.ping_call(org,org,org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearSyms()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.addFooArray(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setSetField(Set)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.SchemaPairCompatibility(SchemaCompatibilityResult,Schema,Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestWordCountGeneric.testJob()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.unwrap(byte,int,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.hadoop.io.Writer.getKeyClass()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FooBarSpecificRecord.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(Object,Object,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldTest.setTimestamp(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.generic.GenericData.getFastReaderBuilder()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.Test.getDescriptorForType()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testSchemaCompatibilitySuccesses()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.ThriftData.getSchema(FieldValueMetaData)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperSerializer.AvroWrapperSerializer(DatumWriter)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.checkBinary(ReflectData,Schema,Object,boolean,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RPCMetaTestPlugin.serverReceiveRequest(RPCContext)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_float()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getCompatibility()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getTs()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.BinaryDecoder.getBufferAccessor()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(int,Schema)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.createRecord(String,boolean,Field[])": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.SchemaCompatibilityResult.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NamespacedBuilder.completeSchema(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.flattenedSize()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.message.RawMessageEncoder.initialValue()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.specific.Builder.setT(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.ipc.trace.Trace.getNode(Span,HashMap,HashMap)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.getProgress()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.serializeWithWriterThenDeserializeWithReader(Schema,GenericRecord,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBinaryDecoder.testLongLengthEncoding()": "AVRO-2048: Avro Binary Decoding - Gracefully Handle Long Strings\n", "org.apache.avro.thrift.test.FooOrBar._Fields(short,String)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.requiredInt(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.testFloatHistogram()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.FixedBuilder.aliases(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setIntArray(int,int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.WrongPasswordCallbackHandler.handle(Callback)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.isInitialized()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFileOutputFormat.write(K,V)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeByteField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.reset()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.clientReconnectAfterServerRestart()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.NameContext.get(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordWriterBase.AvroTrevniRecordWriterBase(TaskAttemptContext)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SnappyCodec.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestDataFileSpecific.testSpecificDatumReaderDefaultCtor()": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.generic.GenericDatumWriter.convert(Schema,LogicalType,Conversion,Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.BaseFieldTypeBuilder(FieldBuilder,CompletionWrapper)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R10.R10(String)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BigRecord.BigRecord(Random)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.ValidatingEncoder.isTopEmpty()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.fixed(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.getConvertedType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.TestRecordWithoutLogicalTypes(java,java,java,java,java,java,java,java,java,java)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.TestNestedRecords.testSingleSubRecordExtraField()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.AsyncClient.getAsyncClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.firstMatchingBranch(Schema,Schema,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Test.clearFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.TestConcatTool.testHelpfulMessageWhenNoArgsGiven()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.remove(int)": "AVRO-730. Java: Add set() and remove() methods to GenericData.Array. Contributed by Chase Bradford.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1072217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.LocalTransceiver.LocalTransceiver(Responder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.flush()": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperDeserializer.deserialize(AvroWrapper)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.zip_args.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.TestValidatingIO(Encoding,int,String,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.testBadSingleLineHeredoc()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.test.basic.StringTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.ping_args.write(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithSSL.assertAllMessagesReceived()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.compileInterface(Protocol)": "AVRO-221.  Mangle Java reserved words in generated code to avoid name conflicts.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882689 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BasicState.BasicState()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.AvroDeserializer.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.TestInvocationReporter.afterInvocation(IInvokedMethod,ITestResult)": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.testJob()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestResolvingIO.check(Schema,Schema,byte,String,Object,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumWriter.npe(NullPointerException,String)": "AVRO-615. Java: Improve error message for NullPointerException while writing data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testValidateArrayWriterSchema()": "AVRO-1576. TestSchemaCompatibility is platform dependant. Contributed by Stevo Slavic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1689621 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.append(D)": "AVRO-274.  Make Java's data file sync interval configurable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898966 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testArray()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadToJsonPretty()": "AVRO-1583. Java: Add stdin support to the tojson tool.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1623881 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.run()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.bytes(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.SeekableBufferedInput.read()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.DecimalRecordMapping.read(Object,Decoder)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.WordCountUtil.writeLinesFile()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleResult(Void)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.newBuilderForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FloatBuilder.endFloat()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.getSerializer(Class)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optional()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCount.map(Utf8,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.DataFileRepairTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.DeflateCodec.getOutputBuffer(int)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.setLimit(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericWithDefault.GenericWithDefault()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.type(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.finishInitialization(ExecutionStep,Schema,InstanceSupplier)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.TestSchemaCompatibilityReaderFieldMissingDefaultValue.testReaderFieldMissingDefaultValueSchemas()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.SnappyCodec.compress(ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_resultStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.ReflectionBasedAccessor.isCustomEncoded()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeBytes(byte)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.data.TimeConversions.toLong(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.FieldBuilderBase.requiredArray(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.floatType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Response.Response(Request,BinaryDecoder)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.Protocol()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonElement.JsonElement(JsonToken)": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readFixed(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectAllowNulls.requiredSchema(Class)": "AVRO-1589. Java: Fix ReflectData.AllowNulls to not create unions for primitive types.  Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readString(Object,Schema,Decoder)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.equals(Object)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.Protocol.toString(boolean)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getConversion(int)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.JsonProperties.jsonProps(Map)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.setMap3(LinkedHashMap)": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.protobuf.multiplefiles.M.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolSpecific.ack()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.writeBlockTo(BinaryEncoder,byte)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.setResponse(List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWeather.close()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.prune()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.writeEscapedString(CharSequence,StringBuilder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.aliasesToJson(JsonGenerator)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtoConversions.testDynamicSchemaWithDateTimeConversion()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.reflect.TestReflect.check(Type,String)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromFloat(Float,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleOutputs.close()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.newChannel(ChannelPipeline)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.BlockingSimpleImpl.acquirePermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMinTime(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetI16OptionalField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.ValidatingEncoder(Schema,Encoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearIntArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.hello(String)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.OutputBuffer.size(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.AvroResponseInputStream(Object,Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.BinaryDecoder.ByteArrayByteSource(byte,int,int)": "AVRO-2341: Simplify ByteArrayByteSource Min Buffer Size\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setTs(org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.hadoop.file.Reader.loadIndexFile(Configuration,Path,Schema)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.file.DeflateCodec.decompress(byte)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.readObject(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.mapNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.build()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaNormalization.TestFingerprintInternationalization(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.DecimalConversion.toFixed(BigDecimal,Schema,LogicalType)": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.AvroKeySerialization.deserialize(AvroWrapper)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.DoubleWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonRecordOrdering()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecord.put(int,Object)": "AVRO-1299. Java: SpecificRecordBase implements GenericRecord.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471047 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testNestedRecord()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.multiplefiles.Foo.getIntArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificData.writeExternal(java)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.TestStateDecode.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.TestIOBuffers.testBytes()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.noopt.Builder.getTimestampOrBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestCircularReferences.Referenceable(String)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestSchemaResolver.testIsUnresolvedSchemaError3()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.GenericTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newEncoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.RecordSchema(Name,boolean)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderWithMigrationTest(String,String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Tests.Tests(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.copyAllProperties(Schema,Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.ipc.specific.SpecificRequestor.getRemote(Object)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getIntValue()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.configure(JobConf)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.disconnect()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.writeHeader(OutputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toMap(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.getRemote()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.Encoder.writeString(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericTest.GenericTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.getField(Object,String,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_call.getResult()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.CompressionChannelPipelineFactory.getPipeline()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.Name.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.read(Object,Decoder)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.perf.test.record.TestStateEncode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.data.Jsr310TimeConversions.toLong(LocalTime,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.netty.NettyFrameEncoder.encode(ChannelHandlerContext,Channel,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Iterator.next()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.assertOpen()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilderBase.optionalEnum(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FloatBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.addNamedOutput(Job,String,Class,Schema,Schema)": "AVRO-1215. Java: Fix AvroMultipleOutputs when specifying baseOutputPath.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.binaryToJson(String,String)": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getRecordState(Object,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.XZCodec.decompress(ByteBuffer)": "AVRO-2262 Java compression codec fixes. (#352)\n\nAVRO-2262 Java compression codec improvements", "org.apache.avro.io.TestBlockingIO.scan()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.DataFileReadTool.printHelp(PrintStream)": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.io.TestBinaryEncoderFidelity.generateData(Encoder,boolean)": "AVRO-1457. Java: Fix Encoder so that offset in non-array-backed ByteBuffers is not altered when written. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.Nested(Nested)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_argsStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.skipArray()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.Test.isWriteTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.InMemorySpanStorage.addSpan(Span)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testInitPos()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.reflect.UnsafeCustomEncodedField.write(Object,Encoder)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.mkEnum(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testMain()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInRecordInUnion()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.file.DataFileReader12.getMetaString(String)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeArrayEnd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setUint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getNumberValue()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectRecordTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.setBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.TestGenericDatumWriter.writeArrayEnd()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getName()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getCurrentLocation()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.SchemaBuilder.BytesBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.getProcessMap(Map)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.putAll(JsonProperties)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.Stringy(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_result.write(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.StatCountMapper.setup(Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ExtendedEnumTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.GenericData.getArrayAsCollection(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TaggedInputSplit.getConf()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.containsKey(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.HandshakeMonitor.assertHandshake()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testValidateUnion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.getPairSchema(Schema,Schema)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.noopt.M.parseDelimitedFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnFileWriter.writeValue(Object,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.RecordBuilder(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.writeAndClose(ByteBuffer,OutputStream)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.Array(int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testEquals2()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.FixedBuilder.create(Completion,NameContext,String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BinaryDecoder.inputStream()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.SequenceFileReader(URI,Configuration)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.setSfixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnOutputBuffer.getMeta()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.getSymbol(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DataFileInteropTest.readFiles(DatumReaderProvider)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.compare(Object,Object,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.MapEntry.getKey()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.mapred.TestAvroMultipleInputs.writeNamesFiles(File)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.FieldTest(java,java,java,java,java,java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.message.TestBinaryMessageEncoding.testIdenticalReadWithSchemaFromLookup()": "AVRO-2440: Decode messages by their write schema\n\nThis implements AVRO-2440 by allowing a null value for the readSchema\nfield in the BinaryMessageDecoder. It is interpreted as \"no preference\",\nand makes the decoder use the write schema of an incoming buffer as its\nread schema.\n", "org.apache.avro.generic.GenericData.createString(Object)": "AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields (#703)\n\n* AVRO-2438:SpecificData.deepCopy() cannot be used with java-class fields\r\n\r\n* Update spotless check\r\n\r\n* Modify comment\r\n\r\n* AVRO-2438:Increase the deepcopy support of java-key-class\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.thrift.test.Foo.getClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestFsInput.tearDown()": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.arrayNext()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.doubleBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeByteField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleResult(Integer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.compiler.specific.OutputFile.writeToDestination(File,File)": "AVRO-1471. Java: Permit writing generated code in different character encodings.  Contributed by Eugene Mustaphin.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577670 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.getInputSchema(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.SaslSocketTransceiver(SocketAddress,SaslClient)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_args.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.GenericData(ClassLoader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BulkDataImpl.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testR13()": "AVRO-1421. Java: Add an @AvroSchema annotation to reflect.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readString()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "example.AvroWordCount.main(String)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.specific.Builder.hasB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.Foo.maybeForceBuilderInitialization()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.hasFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.schema.TestVisitor.visitTerminal(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.generic.TestGenericDatumWriter.setItemCount(long)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getPostLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.ReuseByteWriter(ByteBufferOutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ByteBufferTest.writeOneXAsAvro(Schema,ByteArrayOutputStream)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.fireandforget(Message)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteDecimalFixed()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.MailImpl.assertAllMessagesReceived()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.Writer.withValueClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.FileExtensionFilter.FileExtensionFilter(String)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.LockableArrayList(E[])": "AVRO-1628. Java: Add Schema#createUnion(Schema ...) convenience method.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1651831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.ParsingTable(Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.create(String,String,Map,boolean)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.getField(String)": "AVRO-844. Java: Provide better errors for null or missing record fields.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1142048 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.SchemasTest.get()": "[add] resolution code using new reusable visitor.", "org.apache.avro.io.TestBinaryDecoder.newDecoder(byte)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.encodeLong(long,OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.sizeEstimate()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadEquals3Count()": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.RecordSchema.setFields(List)": "AVRO-1355. Java: Reject schemas with duplicate field names.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1515957 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.decodePackHeader(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketServer.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeShortField.UnsafeShortField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testAliases()": "AVRO-1016. Java: Add Field#getAliases() method to better permit copying of schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241665 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.writeLinesBytesFile()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getSymsList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.WriterUnion.resolve(Schema,Schema,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.thrift.test.Foo.Client(org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.IntBuilder.IntBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificRecordBuilder.testManualBuildPerformance()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.HadoopReducerBase.hasNext()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.BlockingBinaryEncoder.startItem()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.CallbackToResponseStreamObserverAdpater(Callback)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.SchemaBuilder.unionType(Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.ensureBounds(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectData.testStaticInnerClasses()": "AVRO-2808: provide details while encountering non-static inner classes (#874)\n\n* AVRO-2808: ReflectData to provide details while encountering non-static inner classes\r\n\r\n* AVRO-2808: provide details while encountering non-static inner classes\r\n\r\n* AVRO-2808: improve tests\r\n\r\nThank you @Fokko for reviewing my code\r\n\r\n* AVRO-2808: improve code readability\r\n\r\n* AVRO-2808: fix Checkstyle violation for member variables", "org.apache.avro.util.Utf8.setByteLength(int)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeInt(int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.respond(Message,Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.compressionCodecOptionWithDefault(OptionParser,String)": "AVRO-2465: Fix wrong defalut values in the avro-tools' usage\n", "org.apache.avro.generic.TestGenericData.testToStringNanInfinity()": "AVRO-1454. Java: Fix GenericData#toString and AvroAsTextRecordReader to generate valid Json for NaN and infinities.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1573670 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestResponder.respond(Message,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testGenericRead()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getTaskAttemptContextClass()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.isConnected()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(Text)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testInt()": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.getResponse()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayOrBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertFloatWritable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Foo.onError(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.TestReflect.testChar()": "AVRO-1458. Java: Setting char record field via reflection affects other fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1572912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadLongSmall(ReadInt)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumReader.ProtobufDatumReader(Schema,Schema)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.add(T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.TestStateEncode.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.MapCollector.MapCollector(OutputCollector,boolean)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.readRequest(Schema,Decoder)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.RecordCompressWriter.RecordCompressWriter(Writer)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testParseEmptySchema()": "AVRO-2120: Fix NullPointerException thrown by Schema.Parser#parse(\"\")\n", "org.apache.avro.SchemaBuilder.values()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.tool.Util.fileOrStdin(String,InputStream)": "AVRO-867. Java: Enable command-line tools to read data files from any Hadoop FileSystem implementation.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1470691 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.readerWithDefaultValueIsApplied()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.SchemaBuilder.doubleBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.getNamespace()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeBytes(ByteBuffer)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairAfterCorruptBlock()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testNoPackageSchema()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1985: Unreleased resources\n\nThis closes #177\n", "org.apache.avro.io.Perf.readTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.recv_add()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.idl.ResolvingVisitor.visitNonTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testReconstructSchemaStringWithoutInlinedChildReference()": "AVRO-2822: Add toString that doesn't inline referenced schemas (#869)\n\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.append(K,V)": "AVRO-1199. Java: Fix SortedKeyValueFile to copy the key used to compare against next.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1409542 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.setDouble(double)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setI64(long)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.mkSchema(String)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ValidatingDecoder.skipBytes()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.updateAndGetFields()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.data.JodaTimeConversions.fromLong(Long,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaUnbox()": "AVRO-1877 restore correct javaUnbox in Specific Compiler.\n\nTime logical types were broken by the patch for AVRO-1847, this\npatch restores correct behavior with some minor refactoring to\nclean up duplicate code.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.file.DataFileWriter.init(OutputStream)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.RecordBuilderBase.fieldSetFlags()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Incompatibility.getWriterFragment()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.SchemaPairCompatibility.getDescription()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSet(_Fields)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestHadoopCodecFactory.testHadoopCodecFactoryGZip()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.Utf8.toString()": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UUIDConversion.fromCharSequence(CharSequence,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.sync(long)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SSLChannelPipelineFactory.getPipeline()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.setBuf(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.getLocations()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.createDatumReader(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.mapreduce.AvroKeyValueRecordReader.getCurrentKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Request.getContext()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(byte,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.TestNettyTransceiverWhenServerStops.createMessage()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.newBuilder(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.configure(InputStream,int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.validateRequiresGenericSymbolForEnumSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.skip(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.addPropsTo(T)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedDefault.FixedDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.schema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.setSchema(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.generic.TestGenericData.testGetEmptySchemaField()": "AVRO-844. Java: Provide better errors for null or missing record fields.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1142048 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.newEncoder(ByteArrayOutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileReader12.getMeta(String)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadNegativeCount()": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.io.BlockingValueWriter.BlockedValue(Schema,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_argsTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.compareTo(add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getSyms(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLong()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferInputStream.ByteBufferInputStream(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BoolTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.V1MessageEncoder.V1MessageEncoder(GenericData,Schema,boolean)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.reflect.EmployeeId.EmployeeId(Integer)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO2.data()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.test()": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getValueDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.ReflectData.getRecordState(Object,Schema)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getConversion(int)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.file.DataFileWriter.create(Schema,OutputStream,byte)": "AVRO-1685. Allow specifying sync in DataFileWriter.create. Contributed by Sehrope Sarkuni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1687559 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.readExternal(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.mapred.AvroUtf8InputFormat.close()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.apply(Field)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.ipc.ByteBufferOutputStream.writeBuffer(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.maybeForceBuilderInitialization()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.DirectBinaryEncoder.writeDouble(double)": "AVRO-2056: DirectBinaryEncoder Creates Buffer For Each Call To writeDouble\n", "org.apache.avro.TestDataFileReflect.addAndReturn(Object)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TextConverter.convert(Text)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testPrimitiveWrapperParam()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOF_bytes()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addFooArray(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.record.RecordWithDefaultTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.M.M(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Reference.getRefFieldName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.LegacyBinaryEncoder(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.stopClientServer()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.isUnion()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.io.BinaryDecoder.init(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceManager.toRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkReaderWriterRecordFields(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.thrift.test.AsyncProcessor.getEmptyArgsInstance()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGenerateExceptionCodeBlock()": "AVRO-2608 Increase test cases\n", "org.apache.avro.protobuf.noopt.Test.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TaggedInputSplit.getInputSplit()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.fromJsonToAvro(String,Schema)": "Add some tests to validate the include namespace functionality\n", "org.apache.avro.mapreduce.TestFsInput.testTell()": "AVRO-1539. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.DataFileReader(SeekableInput,DatumReader,boolean)": "Fix for AVRO-2286 and regression test (#406)\n\n", "org.apache.avro.ipc.HttpServer.HttpServer(ResponderServlet,String,int)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.util.ByteBufferOutputStream.write(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.maybeForceBuilderInitialization()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.Foo(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ArrayDefault.arrayDefault(List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.BasicTest(String,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testWrite()": "AVRO-2117: Cleanup Java - Remove redundant type arguments\n", "org.apache.avro.grpc.AvroGrpcClient.create(Channel,Class,CallOptions)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.Utf8LineRecordReader.getProgress()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.writeString(Utf8)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNamespaceScope()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getNamedOutputsList(JobContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.write(byte,int,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.readInt(byte,int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SocketServer.main(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousServer.getNegotiatedProperty(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.endString()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.bzip2Codec()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteSource.read(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withCompressionCodec(CompressionCodec)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TypeBuilder.TypeBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.setup(Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.FieldBuilderBase.optionalBytes(String,byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.set(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.TestSuiteInterceptor.onFinish(ISuite)": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ResolvingRecordTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.BaseFieldTypeBuilder.floatType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericData.createEnum(String,Schema)": "Java: Fix Trevni to correctly read unions and specific enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480374 13f79535-47bb-0310-9956-ffa450edef68\n", "example.ColorCountReducer.reduce(Text,Iterable,Context)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificErrorBuilderBase.setValue(Object)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testSchemaCompatibilityFailures()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.get(Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.requiredBoolean(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isLevelEnabled(int)": "[AVRO-2228] Bump Apache Velocity to 2.0\n\n- Remove Slf4jLogChute since 2.0 uses SLF4J itself\n- Update $velocityHasNext to $foreach.hasNext because of deprecation\n- Update $velocityCount to $foreach.count because of deprecation\n- 2.0 does not depend on apache-common collections anymore which\n  used to be an old version with security issues\n", "org.apache.avro.protobuf.Foo.hasSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.getLong(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testUnionResolutionNoStructureMatch()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.releasePermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testNamedRecord()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.Codec.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestRpcPluginOrdering.clientStartConnect(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.init(OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeLongField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericStrings.genSourceData()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaCompletion.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parseJson(String)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.set(int,T)": "AVRO-730. Java: Add set() and remove() methods to GenericData.Array. Contributed by Chase Bradford.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1072217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyValueRecordWriter.testUsingReflection()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.TestReflect.testUnionWithMap()": "AVRO-1056. Java: Fix reflect to correctly handle unions containing maps. Contributed by Kevin Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.MailImpl.send(Message)": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testMultiBinaryToNoPrettyJson()": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.JacksonUtils.toObject(JsonNode,Schema)": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.ipc.RPCContext.setResponseHandshakeMeta(Map)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.initializeConnections(Consumer,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.mapreduce.SpecificStatsReducer.reduce(Text,Iterable,Context)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingTable.concat(Object[])": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestProtocolMojo.testProtocolMojoJsr310()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordReaderBase.nextKeyValue()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileConcat.TestDataFileConcat(CodecFactory,CodecFactory,Boolean)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ReaderWriter.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ParsingEncoder.setItemCount(long)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testSimpleOptional()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransportCodec.NettyDataPack(int,List)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaCompatibilityMissingEnumSymbols.testTypeMismatchSchemas()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.ValueReader.skipArray()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Main.printHead(InputStream,int)": "AVRO-1780: Java: Fix NPE in tools. Contributed by Tom White.\n\nChanges for AVRO-1728 moved NOTICE, which was used to create the\nno-argument output for Java's avro-tools. Using the new location fixed\nthe NPE and this also includes an update to show just the top of NOTICE\nsince it is now much longer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1724287 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.mangle(String,Set,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.getTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.specific.SpecificRecordBase.put(String,Object)": "[AVRO-2278] getter semantics confusing. (#864)\n\n* [fix] getter semantics confusing.\r\n\r\nimpossible to distinguish between a correct field with the value null.\r\nand a nonsense field.\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [add] sync up exception behavior for consistency, and better messages.\r\n\r\n* [add] helper method.", "org.apache.avro.Schema.except(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(byte,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryData.set(byte,int,int,byte,int,int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.check(Type,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.testAvroMapOutput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.isIncludeNamespace()": "Option to remove the namespace from the JSON encoder\n", "org.apache.avro.thrift.test.Test.isSetBinaryField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setSfixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.skipLong(byte,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.createDatumWriter(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parsePartialFrom(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaCompatibilityNameMismatch.testNameMismatchSchemas()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestFingerprintInternationalization.TestFingerprintInternationalization(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestFsInput.testSeek()": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.ipc.netty.NettyTransceiver.disconnect()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.trace.TraceClientServlet.collection(PrintWriter,int)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.createDatumReader(Schema,Schema)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.getConstructorAsFunction(Class,Class)": "AVRO-2725: Use one ReflectionUtil for utilities. (#797)\n\n* AVRO-2725: Use one ReflectionUtil for utilities.\r\n\r\n* Apply spotless.\r\n", "org.apache.avro.test.basic.LongTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Foo.getFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceResponder.TraceResponder(SpanStorage)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.newBuilder()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(NullWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.putAll(Map)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.getLastName()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Slf4jLogChute.isLevelEnabled(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.defaultVal()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.SimpleImpl.echoBytes(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.trace.Trace.Trace(TraceNode)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.writeDataPack(NettyDataPack)": "AVRO-1013. Java: NettyTransceiver can hang after server restart.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241761 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.SaslParticipant(SaslServer)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaNormalization.assertEqHex(long,long)": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.Protocol.getResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_argsStandardScheme.read(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestBasicTracing.testRecursingTrace()": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.writeEnum(Schema,Object,Encoder)": "Provide Schema when 'writeEnum' fails\n\nCurrent state:\r\n If datum is null and the schema enum does not accept null, then the exception message is \"Not an enum: null\". This makes it difficult for debugging or failing gracefully with automated solutions if records have multiple schemas using enums.\r\n\r\nWith this change, the schema will be included in the 'AvroTypeException' with the potential to provide acceptable enum values from the schema's properties.", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.echoBytes(ByteBuffer)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.decimal(int,int)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withReplicationFactor(short)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.getRemote(Object)": "AVRO-687. Java: Permit RPC applications to view remote protocol.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.space(String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyTransceiverWhenServerStops.testNettyTransceiverWhenServerStops()": "AVRO-1154. Java: Fix NettyTransciever to not hang when the server is stopped.  Contributed by Bruno Dumon & Karel Vervaeke.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384514 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.setField(Object,String,int,Object)": "AVRO-907. Java: Optimize access to protobuf message fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ConcatTool.printHelp(PrintStream)": "AVRO-1787 Add support of directories & globs to concat and cat. Contributed by Cl\u00e9ment MATHIEU.\n\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testMaxValidParameterCounts()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.buildPartial()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.AbstractAvroMojoTest.setUp()": "AVRO-1207. Java: Add tests for Maven plugins.  Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1411406 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getFieldAccessors(Class,Schema)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.getLogicalTypeName()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getCurrentToken()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.message.BinaryMessageDecoder.addSchema(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.JsonDecoder.error(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordReferenceBuilder.RecordReferenceBuilder(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "example.ColorCount.main(String)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testArrayRemove()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.util.TestCaseFinder.pr(List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.setString(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificCompiler.SpecificCompiler(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceIterable.hasNext()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.perf.test.generic.GenericNestedTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.util.ClassUtils.forName(String,ClassLoader)": "AVRO-987. Java: Make Avro OSGI-ready. Contributed by Ioannis Canellos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556891 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setSfixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.addField(Field)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherDataSerializer.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringBldr.create(Completion,NameContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericData.createFixed(Object,byte,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.createDatumWriter(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.writeLinesFile(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.test.basic.DoubleTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchema.testIsNullableOnUnionWithNull()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.data.DateConversion.getRecommendedSchema()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.trace.SpanAggregator.getTraces(List)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.nullable()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.clearBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.FakeTicks.passTime(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.writeBuffer(ByteBuffer)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ValidatingGrammarGenerator.hashCode()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.parseFrom(byte)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.echoBytes(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.SpecificErrorBuilderBase.hasCause()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.map(AvroKey,AvroValue,Context)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_resultTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingEncoder.writeIndex(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.check(String,boolean)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Terminal.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestBulkData.write(ByteBuffer)": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestIDLProtocolMojo.testIdlProtocolMojo()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.LocalTimestampMillis.LocalTimestampMillis()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.file.NullCodec.equals(Object)": "AVRO-1982: Fix static code analyzer findings. Contributed by Zoltan Ivanfi.\n\nFixed several possible null pointer exceptions and unchecked casts.\nThese triggered security and code health warnings in our static code\nanalyzer tools.\n\nCloses #173.\n\nSigned-off-by: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaCompatibilityResult.incompatible(SchemaIncompatibilityType,Schema,Schema,String)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.Foo.setInt64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericDatumWriter.getRecordSchema(Object)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testMap()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.unsetI16OptionalField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.SchemaBuilder.requiredLong(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.echo(TestRecord)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.compiler.schema.Schemas.copyProperties(JsonProperties,JsonProperties)": "[add] incomplete implementation to use generic schema traverser.", "org.apache.avro.io.GenericReaderTest.createReader()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setListFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeString(String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.PositionFilter.PositionFilter(OutputStream)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnValues.next()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Parser.topSymbol()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getMapField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileStream.getNumEntries()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificRecordBuilder.testSpecificBuilder()": "AVRO-996. Java: SpecificRecord builder pattern object copy fails with unions in some cases.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping.getResult(I,ping_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.rangeAsString(T,T)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.close()": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestTetherTool.test()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.FloatSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.ack()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.Conversion.fromEnumSymbol(GenericEnumSymbol,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NameContext.namespace(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setF64(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Test.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.removeAll(Collection)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompilerTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-263.  Change avroj command line tools to return exit codes.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894499 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.MailImpl.reset()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.TestAvroMultipleInputs.map(NamesRecord,AvroCollector,Reporter)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeArrayStart()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageEncoder.BinaryMessageEncoder(GenericData,Schema)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testGetDeserializerForValue()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.noopt.M.valueOf(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.TestNestedRecordsWithDifferentNamespaces.testNestedRecordsWithDifferentNamespaces()": "AVRO-2386: Make customEncode and customDecode public (#511)\n\n* Make customEncode and customDecode methods public\r\n\r\n* Make methods in superclass public\r\n", "org.apache.avro.ipc.trace.TraceClientServlet.overview(PrintWriter)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceHandler.set(Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.setEnum(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.Names(Names)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testLogicalTypesWithMultipleFields()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.hadoop.file.Writer.Writer(Options)": "AVRO-2711: Use SLF4J Parameterized Logging for Debug Statements (#789)\n\n", "org.apache.avro.reflect.Pair.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyFrameEncoder.getLengthHeader(ByteBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.write(org,add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.filterMetadata(JobConf)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.mapreduce.RecordWriterFactory.create(Schema,GenericData,CodecFactory,OutputStream)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.createTaskAttemptContext(Configuration,TaskAttemptID)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.readInput(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.Field(int,Schema)": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroRequestInputStream.AvroRequestInputStream(Object,Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.test.basic.FloatTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.NettyTransceiverThreadFactory.NettyTransceiverThreadFactory(String)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.skip(long)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecimalConversion.getRecommendedSchema()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificToFromByteArray.testSpecificToFromByteBufferWithLogicalTypes()": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.ipc.stats.StatsServlet.escapeStringArray(List)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.DataFileReader(File,DatumReader)": "Fix for AVRO-2286 and regression test (#406)\n\n", "org.apache.avro.Decimal.getPrecision()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetListField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.cancelPendingRequestsOnTransceiverClose()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ArrayColumnOutputBuffer.writeLength(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.WriteFutureListener.operationComplete(ChannelFuture)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSettersNotCreatedWhenOptionTurnedOff()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.protobuf.multiplefiles.Foo.getTimestampBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.trevni.TestUtil.randomLength(Random)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Utf8LineRecordReader.next(AvroWrapper,NullWritable)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestProtocolSpecific.hello(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testJob(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapreduce.AvroSequenceFileOutputFormat.getOutputCompressionType(Configuration)": "AVRO-2053: Remove Reference To Deprecated Property mapred.output.compression.type\n", "org.apache.avro.mapred.AvroJob.setOutputSchema(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.compileToDestination(File,File)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.TimestampMicros()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.completeField(Schema)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.io.ReflectFloatArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.Pair.Pair(Void,CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.TestAllCodecs.getCodec(String)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.io.parsing.Parser.advance(Symbol)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ParsingTable.appendTo(StringBuffer,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestAllCodecs.testCodecSlice()": "AVRO-2262 Unit test to test codec behavior on sliced buffers (#376)\n\nSee #352 for further reference.", "org.apache.avro.protobuf.Foo.getBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectResponder.ReflectResponder(Class,Object)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.writeBlock()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.flattenedSize(Symbol,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.readError(Schema,Decoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.AvroWrapperSerializer(DatumWriter)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.getBucketLabels()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.doWriteBytes(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseFieldTypeBuilder.longType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getDescriptorForType()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readBytes(ByteBuffer)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.output(ByteBuffer)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.generateGetMethod()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.ReduceCollector.collect(OUT)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNestedFake.writeInternal(Encoder)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectTest.readInternal(Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readFloat()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.name()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.WriteFutureListener.operationComplete(ChannelFuture)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.shortName(ColumnMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SnappyCodec.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericWithDefaultTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Builder.addFooArrayBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificErrorBuilderBase.SpecificErrorBuilderBase(Schema)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit3()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.ConcatTool.getShortDescription()": "AVRO-1250. Add a command-line tool to concatenate data files.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpTransceiver.readBuffers(InputStream)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.SpecificTest.newReader()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.TestAvroOutputFormat.testGZipCodecUsingHadoopClass()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.jetty.StatsPluginOverhead.IdentityResponder(Protocol)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.TestAvroMultipleInputs.CompleteRecord(int,CharSequence,long)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalRecord(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.withCodec(String)": "AVRO-1522. Java: Add support for compression codecs to SortedKeyValueFile.  Contributed by Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.check(Decoder,String,Object,int)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.setMeta(String,long)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRequestor.writeRequest(Schema,Object,Encoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithDefaultTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Foo.clearSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DeflateCodec.decompress(InputStream,Decoder)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.get(Object)": "AVRO-171.  Fix Java's Protocol#toString() to correctly handle forward-references.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835670 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.lock()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableInput.read(byte,int,int)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.readRequest(Schema,Decoder)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.LocalTransceiver.readBuffers()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SchemaFingerprintTool.getShortDescription()": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.SchemaBuilder.enumType(String,String[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.setTypeEnum(org)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.TestReflect.testR2()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcProtocolTool.getShortDescription()": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.hasNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithDefaultTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.LogicalTypes.maxPrecision(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestSpanAggregation.createServerSpan(ID,ID,ID,String)": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.newBuilder(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroMultipleInputs.getInputSchemaMap(JobConf)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Parser.getTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestKeyValueWordCount.testKeyValueMapReduce()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.hadoop.io.Writer.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.NestedRecordTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.isChannelReady(Channel)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.getUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.recordReference(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.testTraceAndCollection()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.get(K)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.Pair.equals(Object)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.trevni.ColumnValues.seek(T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.internal.Accessor.ensureLoaded(Class)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.TestSchema.testRecordWithNullNamespace()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.trevni.ColumnFileWriter.incrementSize(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setTs(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "avro.examples.baseball.FieldVisibilityTest.readExternal(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.Test.toBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimeMicrosConversion.adjustAndSetValue(String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.ipc.netty.NettyTransportCodec.NettyFrameDecoder()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.AvroWrapperConverter.convert(AvroWrapper)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooArrayList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.previousSync()": "AVRO-652. Java: Expose sync points in DataFileReader.  Contributed by Stu Hood.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@992149 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Y.compareTo(Object)": "AVRO-598. Use generic data structures when reading with reflect API and classes are not defined.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989263 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.newBuilderForType()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.accept(Class)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSymsList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.FieldAccessReflect.write(Object,Encoder)": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimal.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.checkRequired(Object,String,Object[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BooleanBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.bytesBuffered()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.addFooArray(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Test.isSetI64Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsUnionOnArray()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.io.Perf.GenericTest(String,String)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ArrayColumnOutputBuffer.flushBuffer()": "AVRO-1259. Java: Improve Trevni's encoding of sparse columns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461896 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.equals(Object)": "AVRO-1076. Java: Fix Protocol#equals() to consider properties.  Contributed by Karthik K.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339867 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testNeedCompile()": "AVRO-150. Java: fix compiler to not re-generate up-to-date code.  Contributed by John Yu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.TestColumnFile(String,String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.equals(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaCompatibility.getReader()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.hashCode()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.reflect.PojoWithList.hashCode()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testReservedEnumSymbol()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectionUtil.resolveTypeVariables(Class,Map)": "AVRO-2357: Allow generic types in reflect protos (#490)\n\nAdds support for generic types in ReflectData for\r\nProtocols.", "org.apache.avro.io.BlockingBinaryEncoder.init(OutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeId2.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.write(org,Error)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(Schema,Schema,SpecificData)": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readIndex()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.getDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TestFileSpanStorage.testRangeQuery1()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.checkBinary(Schema,Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.assertAllMessagesReceived()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.endDouble()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.ensureSymsIsMutable()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.Test(boolean,byte,short,long,double,String,Map,List,Set,E,Nested)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Writer.getConfigurationWithAvroSerialization()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.getCompatibility(String,Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.LongWritableConverter.LongWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getLongAverage(Collection)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.bytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReflect.testEnum()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeCachedField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Writer.setSchema(Schema)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.io.DecoderFactory.configureDecoderBufferSize(int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getListClass(Schema)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readRecord(Object,Schema,Schema,Decoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.doubleType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.CompleteRecord.setId(int)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.AvroJob.setInputSpecific(JobConf,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFsData.testFsRead()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolverTest.getDecoder()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testMangleIfReserved()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.newArray(Object,int,Schema)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getStringBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceTiming.compareTo(TraceTiming)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.init(String)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setFloat(float)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.ServiceInvocationHandler.unaryRequest(String,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Field.defaultValue()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.setLastName(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.LogicalTypes.hasProperty(Schema,String)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteUUIDList()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimalConversion.fromBytes(ByteBuffer,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.ensureUnlocked()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.Checksum.get(MetaData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServer.testMixtureOfRequests()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteBufferInputStream.reset()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.mapred.AvroSerialization.getDeserializer(Class)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testUnionResolutionFullNameMatch()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ResolvingTable.getFieldIndex(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.ensureIntArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingEncoder.init(OutputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestProtocolNetty.getExpectedHandshakeCount()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaAnnotations(JsonProperties)": "AVRO-1186. Java: Extend specific compiler to emit Java annotations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1405903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.writeReplace()": "AVRO-1852: Make Java org.apache.Schema serializable (#589)\n\n* [add] [AVRO-1852]\r\n\r\n* AVRO-1852: Update unit tests with feedback.\r\n", "org.apache.avro.io.ResolvingDecoder.skipAction()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.consumeAvroAliasAnnotation(Class,Schema)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readFieldName()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.IntTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.TestFsInput.testFileSystemConstructor()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearS()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Builder.setBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.generic.TestStateEncode.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.SaslSocketTransceiver.evaluateChallenge(byte)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestProtocolSpecificMeta.testStartServer()": "AVRO-683. Java: Fix RPC proxy factories to not require casting.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1027741 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaTypeWithDecimalLogicalTypeDisabled()": "Change default from joda to jsr310... no sense promoting the use of joda anymore\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.AvroJob.getOutputValueSchema(Configuration)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.ProtobufData.toCamelCase(String)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.RecordSchema.getName()": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeInt(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.StringSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.NullChecksum.compute(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Double)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.hasNext()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.M.parseFrom(java,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.Nested.getX()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList8()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.Accessor.defaultValue(Field)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.mapred.tether.TetherPartitioner.getPartition(TetherData,NullWritable,int)": "AVRO-512.  Fix typo in file name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolParsing.testParsing()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.getHandshakeRequest()": "AVRO-761. Java: Fix Requestor to not send client's protocol redundantly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1079060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getI16Field()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLongAsDoubleDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.io.GenericReaderWithMigrationTest.getReader()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputFile.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.setReflect(JobConf)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R2.equals(Object)": "AVRO-237.  More improvements to Java reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@884249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.ThriftDatumReader.ThriftDatumReader()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectAllowNulls.testAllowNullWithNullableAnnotation()": "AVRO-1604. Java: Fix ReflectData.AllowNull to work with @Nullable annotations. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641896 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.getFirstIntDatum(File)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Builder.getIntArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.FooOrBar.standardSchemeReadValue(org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.record.ResolvingRecordTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Foo.clearString()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetBoolField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.add_call(int,int,org,org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.testGenericWrite()": "AVRO-158.  Permit appending to a data file from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@833621 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeString(String)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordWriter.AvroKeyRecordWriter(Schema,GenericData,CodecFactory,OutputStream,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SimpleImpl.add(int,int)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.size()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.Avro14SpecificCompiler.type(Schema)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.allocUnion(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator.testRecordMissingRequiredFieldError()": "AVRO-1397. Java: Improve error message when missing field has no default.  Contributed by David Carr.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.clearId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageEncoder.getWriteHeader(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.context()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.ReflectResponder(Protocol,Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithPromotionTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestResolvingIOResolving.testResolving()": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.InduceSchemaTool.getName()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Ipc.createServer(Responder,URI)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaPairCompatibility.equals(Object)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.initializeServer(Responder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteUUID()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampConversion.getLogicalTypeName()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testFixed()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceClientServlet.collectRangedSpans(List,long,long)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.FieldAdjustAction.FieldAdjustAction(int,String,Set)": "AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema (#316)\n\n* AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema\r\n\r\nJsonDecoder doesn't honor aliases\r\n\r\n* No need to wrap aliases to unmodifiableSet, since getter Schema#aliases already does it\r\n\r\n* Remove unused import to pass Checkstyle check\r\n", "org.apache.avro.specific.TestSpecificCompiler.compileWithSpecificCompiler(Schema)": "AVRO-167.  Refactor Java SpecificCompiler to simplify testing, and add some tests.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@828117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceInvocationHandler.CallbackToResponseStreamObserverAdpater(Callback)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.DoubleTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setInt32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBinaryEncoderFidelity.generateComplexData(Encoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Fixup(Symbol,int)": "AVRO-328. Performance improvements Validating encoder/decoder for nested records\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.Array(int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.setField(Object,String,int,Object,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testValidateNullableEnum()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.message.TestCustomSchemaStore.testIncompatibleReadWithSchemaFromSchemaStore()": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.io.GenericWithOutOfOrder.GenericWithOutOfOrder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestParsingTable.data()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.entrySet()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.io.BinaryDecoder.readLong()": "AVRO-765. Java: Improvement to BinaryDecoder readLong performance\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1070613 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeObjectField.supportsIO()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedDefault.fixedDefault(ByteBuffer)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleError(Throwable)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.getInputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.builder(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.addNamedOutput(Job,String,Class,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.close()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.ColumnValues.nextLength()": "AVRO-1229. Add support for booleans to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435314 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.removeFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.TestAvroOutputFormat.testBZip2CodecUsingAvroCodec()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.Foo.setUint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.resolve(IdentityHashMap,Schema,Protocol)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.trevni.ColumnFileWriter.getMetaData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataBlock.DataBlock(long,int)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getIndexInterval()": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addFooArray(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.TestWordCount.testAvroGenericOutput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaBuilder.testFieldShortcuts()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.testGenericAppend()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeShortField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.UnionAdjustAction.UnionAdjustAction(int,Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setT(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestSchema.testFixed()": "AVRO-22.  When parsing schemas in Java, do not permit anonymous.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777718 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.size()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getCountersEnabled(JobContext)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getTimestampOrBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.tool.RpcReceiveTool.run()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.multiplefiles.Foo.getStringBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.MapReader.MapReader(FieldReader,FieldReader)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.ipc.trace.TraceCollection.compareTo(TraceTiming)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.add(List)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileRepairTool.recoverPrior(String,String,PrintStream,PrintStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.getMapFieldSize()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SimpleByteWriter.write(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.LongBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolSpecific.testConnectionRefusedOneWay()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.thrift.test.Foo.getAsyncClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.Buffer.data()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.TestSpecificCompiler.createCompiler()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.configureAvroOutput(JobConf)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.ResolvingRecordTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.parsing.Alternative.Alternative(Symbol,String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addAllIntArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.writeTo(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.trevni.avro.WordCountUtil.validateCountsFile()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.AvroWrapperConverter(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestGeneratedCode.setUp()": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.TestSchema.testArray()": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.RandomData(Schema,int,long)": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.file.LengthLimitedInputStream.skip(long)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.add(int,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.data.Json.read(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.SaslSocketTransceiver.hasInitialResponse()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaUnboxNullToVoid()": "AVRO-2569:Deprecated annotation usage does not conform to the Java specification\n", "org.apache.avro.SchemaBuilder.StringBldr(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumWriter.ProtobufDatumWriter(Class)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TimestampMillisConversion.fromLong(Long,Schema,LogicalType)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.specific.Builder.setF64(double)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.thrift.test.Test.isSetByteField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.toInt(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.Names.put(String,Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.ValidatingRecordTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.TrevniRuntimeException.TrevniRuntimeException(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getSymsCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Client.Client(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testSimpleEnumSchema()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(Schema,String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.TetherOutputService(OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.readInt(Object,Schema,Schema,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.check(String,Decoder,String,Object,int)": "Applied splotless for reformatting sources\n", "org.apache.avro.ipc.NettyTransceiver.operationComplete(ChannelFuture)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.end()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnDescriptor.findBlock(long)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.testAvroInput()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.hadoop.io.AvroSerialization.accept(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getFooArrayFieldBuilder()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.specific.SpecificErrorBuilderBase.hasValue()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificDatumReader.serializeRecord(StringablesRecord)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.BlockingSimpleImpl.BlockingSimpleImpl()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit12()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setStringBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroDeserializer.AvroDeserializer(Schema,Schema,ClassLoader)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Test.clearBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.JsonProperties.put(String,JsonNode)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.message.TestBinaryMessageEncoding.testBufferReuse()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.Test.setStructFieldIsSet(boolean)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.fromLong(Long,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.RecordMapping.getRecordClass()": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.Counter.map(GenericRecord,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.nullableBoolean(String,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.createCompiler()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.trevni.avro.TestShredder.testSimpleUnion()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ReferenceableTracker.getLogicalTypeName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ErrorTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOF_boolean()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonEncoderWhenIncludeNamespaceOptionIsTrue()": "Add some tests to validate the include namespace functionality\n", "org.apache.avro.ipc.trace.TestSpanAggregation.createServerSpan(ID,ID,ID,Utf8)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.IntDefault.IntDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericConcreteEnum.serializeRecord(FooBarSpecificRecord)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.tool.Util.createFromFS(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.setFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withInputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.HttpServer(Responder,Connector)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.ipc.NettyTransportCodec.decodePackBody(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.checkReaderEnumContainsAllWriterEnumSymbols(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.reflect.ReflectData.getMessage(Method,Protocol)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.close()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Test.parsePartialFrom(com,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.readBoolean()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BooleanBuilder.endBoolean()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestBulkData.stopServer()": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStopwatch.testSystemStopwatch()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.readExternal(java)": "AVRO-1814: Generated java code fails on variables with a TLD name like 'org'\n", "org.apache.avro.hadoop.file.HadoopCodecFactory.fromHadoopString(String)": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testConversionInstanceWithDecimalLogicalTypeDisabled()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Test.clearEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testDifferentCodecFail()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.unionEquiv(Schema,Schema,Map)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.io.UnchangedUnionResolveTest.UnchangedUnionResolveTest()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.util.IdentityWeakReference.equals(Object)": "[merge] marge with latest changes", "org.apache.avro.ipc.Responder.Responder(Protocol)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Stringy.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilder.aliases(String[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestUtil.resetRandomSeed()": "AVRO-1597. Java: Random data tool writes corrupt files to standard out.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1637494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.recv_ping()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.Schema.NamedSchema(Type,String,String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.isBytes(Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.InteropTest.testClient()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.generic.GenericRecordBuilder.GenericRecordBuilder(GenericRecordBuilder)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolHttps.getExpectedHandshakeCount()": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPluginOverhead.main(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.hasNext()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadFloat.ReadFloat()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.clearLastName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.hashBytes(int,HashData,int,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecific.assertHandshake()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.TestStateDecode.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "avro.examples.baseball.FieldVisibilityTest.writeExternal(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.BaseTypeBuilder.booleanType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.setParent(ColumnMetaData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.setSyms(int,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.resolve(Schema,Schema,Map)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.Builder.addFooArray(int,org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteLocalTimestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.io.GenericWithDefault.getReaderSchema()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getFullName()": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readString(Utf8)": "AVRO-1533. Java: In schema resolution, permit conversion between bytes and string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607197 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.setNumber(int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.hadoop.io.Options.withKeyClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setInputValueSchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testPrimitiveArrays(boolean)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.IntSchema.toJson(Names,JsonGenerator)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readMapStart()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromBytes(ByteBuffer,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyServer.initializeTransceiver(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_result.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRequestor.readResponse(Schema,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericOneTimeUse.getReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojoTest.assertFilesExist(File,String[])": "AVRO-1207. Java: Add tests for Maven plugins.  Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1411406 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LongTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.serialize(AvroWrapper)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompiles(File,Schema,boolean)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.getUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.setSyms(int,org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.buildParsed()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testArrayConstructorNullSchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.tool.BinaryFragmentToJsonTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMicrosConversion.fromLong(Long,Schema,LogicalType)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.generic.GenericData.instanceOf(Schema,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BasicState.newEncoder(boolean,OutputStream)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.BlockingBinaryEncoder.configure(OutputStream,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroUtf8InputFormat.Utf8LineRecordReader(Configuration,FileSplit)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.writeMapEnd()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.fromMap(Map,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificData.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.TestCaseFinder.SimpleCases(String,String,Object)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testEsc()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getSymsList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.hasF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Schema.Field(Field,Schema)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaValidatorBuilder.canBeReadStrategy()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.getTypeEnum()": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.setNicknames(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SerializableSchema.readResolve()": "AVRO-1852: Make Java org.apache.Schema serializable (#589)\n\n* [add] [AVRO-1852]\r\n\r\n* AVRO-1852: Update unit tests with feedback.\r\n", "org.apache.avro.util.RandomData.main(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingBinaryEncoder.writeFixed(ByteBuffer)": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.specific.Builder.hasI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.tool.TestTextFileTools.fromText(String,String[])": "AVRO-799. Java: Add support for --codec parameter to the 'fromtext' command.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095207 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.internalGetValueMap()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Foo.zip()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMillisConversion.toInt(LocalTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.reflect.ReflectDatumWriter.remove()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.AvroColumnWriter(Schema,ColumnFileMetaData,GenericData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.renderTemplate(String,VelocityContext)": "AVRO-935. Java: Update dependency versions for 1.6.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1188005 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.calcAllArgConstructorParameterUnits(Schema)": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.grpc.AvroRequestMarshaller.drainTo(OutputStream)": "AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0 (#635)\n\n* AVRO-2543: Bump grpc.version from 1.19.0 to 1.23.0\r\n\r\n* Import it from Guava instead\r\n", "org.apache.trevni.avro.TestEvolvedSchema.testAvroEvolvedRead()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.Foo.getDescriptor()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.doc(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.isKeyClassEnabled()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.io.BlockingValueWriter.doWriteBytes(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.writeFile(File,String)": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.fields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.Writer.getMetadata()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createRecord(String,String,String,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestBuilderCopy.testBuilderCopy()": "AVRO-2139: Add Test for Decimal @java-class Annotated Generated Classes (#909)\n\n", "org.apache.avro.TestSchemaBuilder.testUnionAndNullable()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.compiler.idl.SchemaResolver.getUnresolvedSchemaName(Schema)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.protobuf.Foo.setBool(boolean)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.next()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Decoders.Decoders()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.readRequest(Schema,Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessor.isStringable()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.read(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.protobuf.multiplefiles.Foo.setTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mapred.HadoopReducer.collect(OUT)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.getData()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeShortField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setT(org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.Pair.Pair(Object,GenericContainer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.encodeGenericBlob(GenericRecord)": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.compiler.specific.SpecificCompiler.addStringType(Protocol)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestRpcPluginOrdering.clientReceiveResponse(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.UnchangedUnionTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.ReflectData.createClassSchema(Class,Map)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestSaslAnonymous.test(byte)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.JsonEncoder.writeFloat(float)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.flush()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDecimalConversion.testToFromFixedMaxPrecision()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.echo(TestRecord)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearDec()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Schema.FloatSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Container.Container(Schema,Schema,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.perf.test.basic.IntTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Test.addFooArrayBuilder(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.SnappyCodec.createInstance()": "AVRO-788. Java: Add Snappy compression.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1089550 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeLong(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherReducer.configure(JobConf)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.ValueWriter(OutputStream)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.BaseFieldTypeBuilder.stringBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.readObject(java)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAvroEncodeIO()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(Schema)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.netty.NettyServer.run()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchemaCompatibility.getDatum()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.getSpansInRange(long,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createUnion(Schema[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiverThreadFactory(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.parsing.LitS.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.Histogram.TreeMapSegmenter(SortedSet)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.close(Reporter)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.type(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Test.getStringBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonRecordOrderingWithProjection2()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ResolvingTable.mkResolverAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.put(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.SchemaBuilder.unionEnum(String,Schema,CharSequence,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.ReuseByteReader(ByteBufferInputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeBoolean(boolean)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.createInnerSchema(String)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.nextKeyValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.nullableInt(String,int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.get()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.NullDefault.NullDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readArray(Object,Schema,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.removeFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.idl.SchemaResolver.getResolvedSchema(Schema,Map)": "[add] resolution code using new reusable visitor.", "org.apache.avro.protobuf.noopt.Test.ensureIntArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDecimalConversion.testToFixedRepresentedInLogicalTypeErrorIfRoundingRequired()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.ipc.trace.NonRecursingResponder.respond(Message,Object)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.SpecificCompiler.setOutputCharacterEncoding(String)": "AVRO-1471. Java: Permit writing generated code in different character encodings.  Contributed by Eugene Mustaphin.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577670 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getPreNetworkTime()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO2.TestBlockingIO2(int,int,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeBoolean(boolean)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.readInternal(Decoder)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.protobuf.Foo.hasFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.flatten(Map,Map)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestSchemaMojo.testSchemaMojoJsr310()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.tool.TrevniMetadataTool.getName()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add.getResult(I,add_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.StatsServer.stop()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.remove()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.validateInputStreamSkips(InputStream,InputStream)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.respond(Message,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getRequest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.RecordWithPromotion.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.accept(Class)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.Utf8.Utf8(Utf8)": "AVRO-2654: Use JDK Arrays.copyOf (#743)\n\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.readExternal(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapreduce.CombineAvroKeyValueFileInputFormat.AvroKeyValueFileRecordReaderWrapper(CombineFileSplit,TaskAttemptContext,Integer)": "AVRO-2354: Add CombineAvroKeyValueFileInputFormat in avro-mapred to combine small avro keyvalue files into combineSplit\n", "org.apache.avro.ByteBufferRecord.getPayload()": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.trevni.TestColumnFile.testLongs()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileCorruption.testCorruptedFile()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.hadoop.io.Options.getProgressable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompiles(File,Protocol,boolean)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.noopt.M.writeTo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.WordCountUtil.getDir()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherJob.setExecutable(JobConf,File,List,boolean)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Request.getBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Reader.getKeySchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeString(Utf8)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.parseFrom(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList1()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Reader.setSchema(Schema)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.protobuf.noopt.Foo.parseDelimitedFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherJob.setExecutable(JobConf,URI)": "AVRO-847. Java: Add a unit test for Java MapReduce tether.  Contributed by Jeremy Lewi.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141975 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyClientAvroHandler.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCanonical.TestCanonical(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.create(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.GenericResponder(Protocol)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver()": "AVRO-1154. Java: Fix NettyTransciever to not hang when the server is stopped.  Contributed by Bruno Dumon & Karel Vervaeke.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384514 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Factory.Factory(org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.defaultValueEquals(JsonNode)": "AVRO-1037. Problems using Avro 1.6.2 with Hadoop (CDH3 or 1.0)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1293464 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.collect(String,Reporter,Schema,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.RecordBuilderBase.isValidValue(Field,Object)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.setDefaults(MetaData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SchemaTask.doCompile(File,File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordReader.nextKeyValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testJsonToBinary()": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.Reader(Options)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.SingleBucketSegmenter.size()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificFixed.bytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.RPCContext.setResponse(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Schema.Names(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.readCollection(Collection,Schema,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TracePlugin.serverConnecting(RPCContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Builder.hasNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,Integer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.getFiles(List)": "Initialize the buffer area for Stringbuilder/List\n", "org.apache.avro.NamedSchema.getName()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.executionPathHash()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeMapStart()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testAllTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.XZCodec.XZCodec(int)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.equals(Object)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hasBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.ByteBufferInputStream.ByteBufferInputStream(List)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_argsTupleScheme.write(org,add_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecificMeta.createServer(Responder)": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withValueClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R3.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Builder.clearEnum()": "AVRO-1445. Java: Fix protobuf support to correctly handle enums with default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1561875 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.join()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Client.add(int,int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setEnum(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.mergeFoo(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumWriter.ThriftDatumWriter(Schema,ThriftData)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getValidate()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeFloatField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.mergeFrom(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.IntDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPublicFieldVisibility()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_call.write_args(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.publish(RPCContext,Stopwatch)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.put(int,java)": "Fix failing test\n", "org.apache.avro.Schema.BooleanSchema()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampConversion.getRecommendedSchema()": "AVRO-1957: TimeConversions do not implement getRecommendedSchema()\n\nThis closes #154\n\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.create(Schema,CodecFactory,OutputStream)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testTimeMicrosConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.zip(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.Builder.getDec()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.SchemaBuilder.prop(String,Object)": "AVRO-2067: Add object-value attrs to PropBuilder\n\nAdd object-value attribute support to SchemaBuilder.PropBuilder:\n        public final S prop(String name, Object value)\n\nJsonProperties supports object-valued attributes through its\naddProp() and getObjectProps() methods.  Extend SchemaBuilder.PropBuilder\nto also support object-valued attributes so that schemas with non-string\nattributes can be created programmatically.\n", "org.apache.avro.FooRecord.equals(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaUnboxDateTime()": "AVRO-2569:Deprecated annotation usage does not conform to the Java specification\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.trevni.avro.AvroColumnWriter.writeTo(OutputStream)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.BaseDecoder.initialValue()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.mapreduce.AvroKeyRecordReader.getCurrentValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.unaryRequest(String,Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.parser()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.basic.FloatTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.createReader()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.clearTs()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.tool.SpecificCompilerTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.DecimalRecordMapping.write(Object,Encoder)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.hello(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection1()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BytesTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.DatagramTransceiver.writeBuffers(List)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.mapred.TestWeather.testMapOnly()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.noopt.Builder.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.TestInduceMojo.testInduceProtocol()": "AVRO-1749 Java: Introduce induce Maven plugin goal (#70)\n\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseTypeBuilder.longType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_resultTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.BytesSchema()": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.fromSchemaIgnoreInvalid(Schema)": "AVRO-1781: Use Guava for a thread-safe weak identity cache.\n\nThis adds avro-guava-dependencies to minimize just Guava classes that\nare shaded without minimizing classes from other dependencies. This\nfiltered artifact is then shaded and relocated in the avro module to\navoid leaking Guava classes to downstream consumers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1724473 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.setFieldValue(_Fields,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordReader.getCurrentKey()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.getBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getIntArrayCount()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testDynamicSchemaWithTimeMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.io.BlockingValueWriter.check()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readArray(Object,Schema,Schema,ValueReader)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectRequestor.ReflectRequestor(Protocol,Transceiver)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Options.getKeySchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.XZCodec.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReflectTest.ReflectTest(String,T,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.parsing.Symbol.hasErrors(Symbol,Symbol,Set)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericDatumWriter.writeNull()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.addIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testNeedCompile()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.util.WeakIdentityHashMap.entrySet()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Schema.validateDefault(String,Schema,JsonNode)": "AVRO-1652. Java: Do not warn or validate defaults if validation is off. Contributed by Michael D'Angelo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1670516 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.start()": "AVRO-544.  Java: Add start() and join() methods to Server interface.  Contributed by hammer & cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@965658 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setInt64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.endNull()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.maybeForceBuilderInitialization()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getF32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "avro.examples.baseball.Player.Builder()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayBlockedTest.populateFloatArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.netty.TestNettyTransceiverWhenFailsToConnect.testNettyTransceiverReleasesNettyChannelOnFailingToConnect()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.LockableArrayList.LockableArrayList(List)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testRecordNameInvariance()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestSchema.testInvalidLongAsIntDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.Schema.getFieldAlias(Name,String,Map)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MigrationWithDefaultTest.MigrationWithDefaultTest()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.convert(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(Responder,ConnectionFactory,String,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.AnonymousServer.wrap(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMinBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFsData.respond(Message,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldTypeBuilder.unionOf()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.DelegatingMapper.map(AvroWrapper,NullWritable,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testR6()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingBinaryEncoder.writeMapStart()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.AvroColumnReader(Params)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ArraySchema.toString(Map)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordReaderBase.getCurrentRecord()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroKeyDeserializer.testDeserialize()": "AVRO-1103. Java: Fix SpecificData and mapreduce to use correct classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1368249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.valueOf(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.idl.GenTest.write()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getFooOrBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableByteArrayInput.SeekableByteArrayInput(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.FieldOrderAction(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.getBuilderForRecordWithNullRecord()": "AVRO-1967: Java: Fix NPE when calling getXyzBuilder on instance where the xyz is null\n", "org.apache.avro.TestSchemaNormalization.altFingerprint(String)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.timeMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.compareTo(zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRecordBase.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroAsTextRecordReader.getProgress()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasI64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "avro.examples.baseball.FieldTest.setTimeMillis(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Test.clearSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetEnumField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityMissingEnumSymbols.data()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.setI16Field(short)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.writeRawBlock(DataBlock)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.writeEnum(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testDecimalToFromBytes()": "AVRO-2592: Avoid consuming ByteBuffer for decimal.\n", "org.apache.avro.file.DataFileStream.getMetaString(String)": "AVRO-2308: Use Java StandardCharsets\n", "org.apache.avro.tool.RpcReceiveTool.SinkResponder(Protocol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readFixed(Object,Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.IdentityResponder.IdentityResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaValidatorBuilder.valid()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherDataSerializer.open(OutputStream)": "AVRO-847. Java: Add a unit test for Java MapReduce tether.  Contributed by Jeremy Lewi.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141975 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.Sequence(Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.basic.ExtendedEnumTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.tether.TetherTask.status(String)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.IntTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.SyncableFileOutputStream.SyncableFileOutputStream(String,boolean)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testDecimalRecordMapping()": "Revert r1584605. AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1586265 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanAggregation.testSpanCompletion1()": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.codec.CustomCodec.compareDecompress(Codec,ByteBuffer)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.generic.GenericData.deepCopy(Schema,Object)": "AVRO-1045. Java: Fix a bug in GenericData#deepCopy() of ByteBuffer values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1301818 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.getLengthHeader(ByteBuffer)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeIntField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testJsonDecoder(String,byte,T)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.newBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.LegacyBinaryEncoder.encodeFloat(float,OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLockedArrayList7()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.makePrimitiveTestData(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableByteArrayInput.tell()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingTable.makeRecordTestData(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumReader.ThriftDatumReader(Schema,Schema,ThriftData)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.initializeClientServer()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testEchoBytes()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.Test(Test)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Schema.addTypes(Map)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.create()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalType.LogicalType(String)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BasicArrayState.getArraySize()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.NettyTransportCodec.encode(ChannelHandlerContext,Channel,Object)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestResolvingIO.performTest(Encoding,int,String,String,String,String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_fixed()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputStreamByteSource.InputStreamByteSource(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.setFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.Protocol(Protocol)": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.protobuf.noopt.M.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.newBuilder(TestRecordWithLogicalTypes)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.WordCountUtil.validateSortedFile()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeDouble(double)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setSint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestImpl.hello(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NameContext.getFullname(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.WordCount.WordCount(String,long)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setDec(BigDecimal)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.stats.SingleBucketSegmenter.getBucketLabels()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecord.getSchema()": "AVRO-1299. Java: SpecificRecordBase implements GenericRecord.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471047 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testOverloadedMethod()": "AVRO-499. Java: Fix protocol reflection to reject interfaces with multiple methods of the same name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944035 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testTimeMillisConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.lookupWriterField(Schema,Field)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Test.parseFrom(java,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.escapeForJavadoc(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServer.test()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.AvroMultipleOutputs(JobConf)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Conversion.adjustAndSetValue(String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.specific.Builder.setT(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.specific.SpecificData.getEnumSchema(Object)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.writeExternal(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.generic.GenericData.Fixed(Schema,byte)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.startServer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.ExtendedEnumTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Foo.setStringBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Message.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyDataPack.NettyDataPack(int,List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.mergeFrom(org)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testSkip2()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getKeyType()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.clear()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestAvroMultipleInputs.setId(int)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.AvroInputStream.flush()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapreduce.AvroJob.getMapOutputValueSchema(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopReducerBase.next()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.UnsafeShortField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.flushBuffer()": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.FieldAssembler.requiredBytes(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testCloningError2()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.compiler.specific.SpecificCompiler.validateRecordForCompilation(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherTask.Collector(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.JsonProperties.writeProps(JsonGenerator)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getNewRecordSupplier(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.noopt.Builder.mergeTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.generic.GenericResponder.writeResponse(Schema,Object,Encoder)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeString(Utf8)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.reflect.ReflectRequestor.ReflectRequestor(Protocol,Transceiver,ReflectData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.ping_args.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificRecordBuilder.testBuilderPerformance()": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.toString(Map)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.nullableDouble(String,double)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.isEof()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testString()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.TestProtocolSpecific.echo(TestRecord)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.InduceMojo.parseFileName(Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Writer.getPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UUIDConversion.getRecommendedSchema()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.createAvroFileReader(SeekableInput,DatumReader)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.M.clear()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setInt32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.TestProtocolMojo.testProtocolMojoJoda()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.data.DateConversion.getLogicalTypeName()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.data.LocalTimestampMillisConversion.toLong(LocalDateTime,Schema,LogicalType)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.tool.IdlToSchemataTool.getName()": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.NettyServer.getPort()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.MapDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.error()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.file.ZstandardCodec.createInstance()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestRpcPluginOrdering.serverSendResponse(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeInt(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestResult.update(long)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.reflect.EmployeeInfo2.EmployeeInfo2(String)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(ByteWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryEncoder.writeZero()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.writeResponse(Schema,Object,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.order()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificExceptionBase.SpecificExceptionBase(Throwable)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testCopyDecimalRaw()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.add(int,int,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestIdlToSchemataTool.testSplitIdlIntoSchemata()": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.DelegatingInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.createMessage(String,String,Map,Schema)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BulkDataImpl.write(ByteBuffer)": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RecordCountTool.getShortDescription()": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.file.SeekableInputStream.SeekableInputStream(SeekableInput)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.JoinableRecord(CharSequence,int,CharSequence,long)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.TestValidatingIO.convertTo2dArray(Object[])": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.writeRequest(Schema,Object,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.getOutputSchema(Configuration)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.TestReadingWritingDataInEvolvedSchemas(EncoderType)": "AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema (#316)\n\n* AVRO-2184: Unable to decode JSON data file if a property is renamed in reader schema\r\n\r\nJsonDecoder doesn't honor aliases\r\n\r\n* No need to wrap aliases to unmodifiableSet, since getter Schema#aliases already does it\r\n\r\n* Remove unused import to pass Checkstyle check\r\n", "org.apache.avro.mapred.tether.TetherRecordReader.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.serialize(Encoder,JsonParser,ByteArrayOutputStream)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherMapRunner.configure(JobConf)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.addIntArray(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.ack()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.Schema.RecordSchema(Name,String,boolean,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.TestStateDecode.randomString()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.StringTest.writeInternal(Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.ReadInt()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestLogicalTypeForStringType.shouldUseUUIDAsType()": "AVRO-2548: Handle logicalTypes with stringType (#655)\n\nWhen using 'stringType', logical types whose\r\nAvro type was string would not have that conversion\r\napplied.", "org.apache.avro.ipc.trace.TraceNode.getRequestPayloadSize()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.Foo(com,com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.TestCompare.check(String,T,T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.hasNext()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.unwrap(byte,int,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.trevni.InputBuffer.readFixed64()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.EntryIterator.remove()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getPosition()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemasUsingString()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Stopwatch.ticks()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.StatsServlet(StatsPlugin)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setI64(long)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.Pair.of(X,Y)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.ArrayDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.nullable(Schema)": "AVRO-2349: Review Usage of Arrays.asList\n", "org.apache.avro.ipc.SaslSocketTransceiver.readFrame()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectData.testWeakSchemaCaching()": "AVRO-2117: Cleanup Java - Remove redundant type arguments\n", "org.apache.avro.io.BinaryData.encodeInt(int,byte,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.nextValue()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.io.BoolTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Order()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.readInt()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.EnumSymbol.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestNamespaceSpecific.echo(TestRecord)": "AVRO-1214 Use void instead of Void for RPC methods\n\n- one-way message use void but two-ways messages might use java.lang.Void\n", "org.apache.avro.ipc.Connection.run()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.getSpansInRange(long,long)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(String,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFooArrayOrBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestCreateRandomFileTool.testDefaultCodec()": "AVRO-2465: Fix wrong defalut values in the avro-tools' usage\n", "org.apache.trevni.avro.TestCases.runCase(File)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.writeEnum(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testDefaultTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.create(String,String,boolean)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.newBuilderForType(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.AvroWordCount.run(String)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.enumeration(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.of(X,Y)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.type(Schema,String)": "AVRO-83. In generated Java code, elide unions with null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805610 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addSyms(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingEncoder.writeBytes(byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.InvalidNumberEncodingException.InvalidNumberEncodingException(String)": "AVRO-2127: throw more specific exceptions from DataFileStream#initialize (#323)\n\n* AVRO-2127: throw more specific exceptions from DataFileStream#initialize\r\n\r\n* AVRO-2127: throw more specific exceptions from DataFileReader12\r\n", "org.apache.avro.generic.TestGenericDatumWriter.writeDoesNotAllowJavaEnumForGenericEnum()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.io.AvroKeyDeserializer.AvroKeyDeserializer(Schema,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setBinaryFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.init(int,InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FloatDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.hasMatchError(Symbol)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setI32(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Schema.FixedSchema(String,String,int)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.Foo(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.AvroColumnReader.close()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getI16OptionalField()": "AVRO-1500. Java: Fix bug in handling of Thrift shorts in unions.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601020 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonRecordOrderingWithProjection()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.booleanBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.TestNettyServer.fireandforget(Message)": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.SpecificCompiler(File)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.KeyRecord.KeyRecord(int)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestServiceImplBase.echo(TestRecord)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getBufferSizeBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Builder.Builder()": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.generic.GenericDatumReader.setExpected(Schema)": "AVRO-743 Java: Performance Regression and memory pressure with GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasedAccessor.toString()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestBinaryMessageEncoding.testCompatibleReadWithSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseTypeBuilder.type(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.trace.TraceNodeStats.getTraceTimingsSorted()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapperDeserializer.AvroWrapperDeserializer(DatumReader)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroValueDeserializer.AvroValueDeserializer(Schema,Schema,DatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testNullableByteArrayNullValue()": "AVRO-1401: @Nullable does not work with byte[]\n\nThis closes #229\n", "org.apache.avro.protobuf.Builder.hasEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.WordCountTask.reduceFlush(WordCount,Collector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.addSyms(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.getDatumWriter(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.writeString(Schema,Object,Encoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.calculateCompatibility(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.TimestampMicrosConversion.getRecommendedSchema()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.BlockingValueWriter.compact()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(char,Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestCompare.render(T,Schema,DatumWriter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificLogicalTypes.newReader(Schema)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectResponder.writeError(Schema,AvroRemoteException,Encoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicState.getNullOutputStream()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestSchema.testDefaultRecordWithDuplicateFieldName()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.io.ParsingTable.generate(Schema,Map)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setSint64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.skip(Schema,Decoder)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecimalConversion.fromFixed(GenericFixed,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeNull()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createFixed(String,String,String,int)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setError(AvroRemoteException)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.unsetMessage()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.testAvroMapOutput()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.JsonDecoder.readString(Utf8)": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SchemaTask.doCompile(File,File)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.mapred.TestWordCount.runTestsInOrder()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.data.DateConversion.toInt(LocalDate,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler(DateTimeLogicalTypeImplementation)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificErrorBuilderBase.setCause(Throwable)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.findLabel(String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BazRecord.equals(Object)": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setD(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.file.BufferedFileOutputStream.tell()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithArray.hashCode()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.DefaultStartAction(byte)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.makeRecordProduction(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.clearNumber()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.GenericOneTimeUse.GenericOneTimeUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificFixed.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.ping_args.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.isEmpty()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testrecordConstructorNullSchema()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.getInputValueSchema(Configuration)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestResolvingTable.checkProduction(int,ResolvingTable,int,BitSet,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.run(Tool,String[])": "AVRO-1583. Java: Add stdin support to the tojson tool.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1623881 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectDatumWriter.writeObjectArray(Schema,Object,Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.basic.MapTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Test.hasFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.TestInvocationReporter.beforeInvocation(IInvokedMethod,ITestResult)": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.initialize(InputStream,Header)": "AVRO-757. Java: Permit data files to be re-opened without re-reading the header.  Contributed by Stu Hood.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.createSeekableInput(Configuration,Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.addFooArrayBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.NettyServer.initChannel(SocketChannel)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.thrift.test.AsyncClient.write_args(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.longestTraces(int)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.write(JsonGenerator)": "AVRO-601.  Java: Add per-field property support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982058 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldBuilder.UnionFieldBuilder(FieldBuilderBase,String,Schema,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryEncoder.bytesBuffered()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testRecordIO()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.ReflectData.getField(Class,String)": "AVRO-78.  Fix Java reflect to work on non-public fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@794837 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.getMetaLong(String)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.endFloat()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getClassProp(Schema,String)": "AVRO-241.  In Java, add a union annotation for reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@887439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.typeMismatch(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.mapred.Pair.Pair(Long,Long)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSerializedSize()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectBigRecordTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasF32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.compiler.specific.SpecificCompiler.main(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.put(String,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherKeySerialization.serialize(TetherData)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setSfixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnDescriptor.findBlock(T)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.flush()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.ServiceDescriptor.getMethod(String,MethodDescriptor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.fixed(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Test.setFooArray(int,org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedLargeFloatArrayBlockedTest.newEncoder(ByteArrayOutputStream)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.setSuccess(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithOutOfOrderTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ReadFloat.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Container.Container(Schema,Schema,GenericData,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.specific.TestSpecificCompiler.assertCompiles(Protocol,boolean)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestInduceMojo.testInduceMojoExists()": "AVRO-1749 Java: Introduce induce Maven plugin goal (#70)\n\n", "org.apache.avro.mapreduce.GenericStatsReducer.setup(Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Builder.hasFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.TestSpecificRequestor.testHashCode()": "AVRO-1591. Java: Fix specific RPC so that proxies implement hashCode(), equals() and toString(). Contributed by Mark Spadoni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.valueToJson(ColumnMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.CallFuture()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TransceiverCallback.TransceiverCallback(Request,Callback)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeFloatField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testUnionWithBytes()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testSyncInHeader()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testPairRecord()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeLongField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.send_ping()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.AvroTypeException.AvroTypeException(String,Throwable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.acquireEnterPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.DatagramServer.getPort()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificDatumWriter.writeRecord(Schema,Object,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.set(int,T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReflect.compareTo(Object)": "AVRO-598. Use generic data structures when reading with reflect API and classes are not defined.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989263 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredBytes(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.DoubleWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeMapEnd()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.RPCContext.setRequestSessionMeta(Map)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompilerTool.getShortDescription()": "AVRO-233.  Elaborate Java tool API.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@883819 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.TestCaseFinder.testBadDocLabel2()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Error.read(org,Error)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolHttps.createServer(Responder)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.mapred.AvroUtf8InputFormat.isSplitable(FileSystem,Path)": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler(Schema,DateTimeLogicalTypeImplementation)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.thrift.test.zip.getEmptyArgsInstance()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.newRandom()": "AVRO-355. io.Perf test harness uses different random number seeds for each run\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@902735 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemas.list(E[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.NullableCompletion.NullableCompletion(Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.LengthLimitedInputStream.read()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setOutputGeneric(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.ArrayCompletion(ArrayBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.newArray(Object,int,Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testGetRecordWriter(Configuration,CodecFactory,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.NullBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.Utf8.length()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Decimal.getInt(Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReaderUnion.ReaderUnion(Schema,Schema,GenericData,int,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.trevni.InputBuffer.read()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BooleanTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.Test.getByteOptionalField()": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.completeField(Schema,JsonNode)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.induce(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.put(int,java)": "[AVRO-2278] getter semantics confusing. (#864)\n\n* [fix] getter semantics confusing.\r\n\r\nimpossible to distinguish between a correct field with the value null.\r\nand a nonsense field.\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [add] sync up exception behavior for consistency, and better messages.\r\n\r\n* [add] helper method.", "org.apache.avro.perf.test.BasicState.newDecoder(byte)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.Array.iterator()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnMetaData.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflect.testStringables()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readFloat()": "Fixed AVRO-706. Java: Type promotion not succeeding for long -> float\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1041903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.isNonTerminal(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.OutputStreamSink.OutputStreamSink(OutputStream)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.Foo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.basic.DoubleTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.AvroKeyValue.getValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.type()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestProtocolHttp.testTimeout()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.optionalString(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testArrayReversal()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileReflect.testNew()": "Multiple static analysis fixes and code modernization\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordReader.getCurrentValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.validate()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.newBuilder(org)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.RecordWithDefault.RecordWithDefault()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaPairCompatibility.SchemaPairCompatibility(SchemaCompatibilityType,Schema,Schema,String)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.add_result(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BufferedBinaryEncoder.configure(OutputStream,int)": "AVRO-2627: Unify NullPointerException Management\n", "org.apache.avro.thrift.test.Test.compareTo(Test)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.ack()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ValidatingRecordTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.HashData.HashData()": "AVRO-1175. Java: Clear thread local reference in BinaryData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1414980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithOutOfOrderTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "example.MapredColorCount.run(String)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.findValueByNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.reduce(Text,Iterable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.hasToken(JsonToken)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.io.ValueWriter.writeBoolean(boolean)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.createInstance()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ToTrevniTool.getShortDescription()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.hashCode()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setReducerClass(JobConf,Class)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testAdd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Jsr310TimeConversions.fromLong(Long,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.file.DataBlock.getBlockSize()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.isAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.doAction(Symbol,Symbol)": "AVRO-383. Optimizing ResolvingDecoder for default values (\"skipping default values\", which was't handled correctly in the previous commit)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905516 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestProtocolHttp.createServer(Responder)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.noopt.Builder.getSyms(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.CustomEncoding.read(Decoder)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCount.testJob()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.reflect.ArrayAccessor.writeArray(float,Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.trace.TraceTiming.getPreLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.WordCountReducer.setup(Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyServer.getPipeline()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumWriter.ThriftDatumWriter(Class)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherTask.fail(String)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.readRequest(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueFileRecordReaderWrapper.AvroKeyValueFileRecordReaderWrapper(CombineFileSplit,TaskAttemptContext,Integer)": "Fix spotify errors after merge\n", "org.apache.avro.protobuf.Test.hasSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCustomEncodedField.UnsafeCustomEncodedField(Field,CustomEncoding)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.skipBytes()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.setRemote(HandshakeResponse)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.ProtocolTask.compile(File)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.Message.getProps()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeFloat(float)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileReflect.write(DataFileWriter,T,CheckList)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testStartServer()": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ErrorAction.toString()": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.TestProtocolParsing.oneWay()": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ArrayTest.writeInternal(Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.setOutputMeta(JobConf,String,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.close()": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.protobuf.Foo.setDouble(double)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BazRecord.toString()": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parse(String,String[])": "AVRO-1316. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480808 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.testOneway()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.HadoopInput.read(long,byte,int,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.ping_call(org,org,org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.writeLength(int,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.copyFixups(List,Symbol,int,Symbol)": "AVRO-1667: Fix parser grammar flattening for recursive cases. Contributed by Zoltan Farkas.\n\nRecursive records use a Fixup class to copy sequences of parser Symbols\nbecause the final sequence isn't yet known. But these weren't being\ncopied when the sequences being fixed up were copied, which caused the\nfinal grammar to have nulls in some cases.\n", "org.apache.avro.SchemaValidationException.SchemaValidationException(Schema,Schema,Throwable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.read(byte,int,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyValue.Iterator(java)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyFrameDecoder.decode(ChannelHandlerContext,ByteBuf,List)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.specific.SpecificDatumReader.getClass(String)": "Remove some redundant code.  Inherited methods are identical.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaCompatibilityResult.SchemaCompatibilityResult(SchemaCompatibilityType,SchemaIncompatibilityType,Schema,Schema,String)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.io.FastReaderBuilder.createDatumReader(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.thrift.test.AsyncProcessor.add()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanTraceFormation.testSpanEquality3()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.error()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setI32(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.TestSchema.testIntAsLongDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testMangleIfReserved()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroAsTextRecordReader.AvroAsTextRecordReader(JobConf,FileSplit)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testGetDeserializerForKey()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.getPostLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.skipFullArray(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testDocs()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FloatDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapreduce.IndexReducer.reduce(Text,Iterable,Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.ValidatingDecoder.getSymbol(Schema)": "AVRO-2627: Unify NullPointerException Management\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ReflectIntArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseDelimitedFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestWordCountSpecific.close()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.put(int,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.setDouble(double)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.util.internal.Accessor.setAccessor(JsonPropertiesAccessor)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.initializeConnections()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.reflect.ReflectDatumReader.readString(Object,Schema,Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.getI64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.generic.GenericDatumWriter.getArraySize(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.invoke(Object,Method,Object)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferAccessor.setPos(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.Builder()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateMethodName(Schema,Field,String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testLogicalTypes()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.TestReflect.R10(String)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectLongArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericWithDefaultTest.randomString(Random)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.codegentest.CustomDecimal.toByteArray(int)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.compiler.TestSpecificCompiler.testCanReadTemplateFilesOnTheFilesystem()": "AVRO-1150. Java: Fix tests to create all temporary files in target directories.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1386824 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.writeBuffers(List)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.M.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Builder.clearFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Buffer.buf()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.type(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestLocalTransceiver.testSingleRpc()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateHasBuilderMethod(Schema,Field)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJsr310TimeConversions.testTimeMicrosConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.IdlToSchemataTool.print(Schema,File,boolean)": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addAllIntArray(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testVoid()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.UnionFieldTypeBuilder(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertAvroValue()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.Pair.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonEncoder.doAction(Symbol,Symbol)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.reset()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setResponsePayload(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeFixed(byte,int,int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordWriter.write(AvroKey,NullWritable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestParsingTable.makeMapTestData(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordReader.startInitialization()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.specific.SpecificErrorBuilderBase.getCause()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSymsCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaParseException.SchemaParseException(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addFooArrayBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.setInt64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getRecordWriter(TaskAttemptContext,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.SpecificTest.SpecificTest(String,String)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getMessage(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isArray(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferInputStream.readBuffer(int)": "AVRO-3.  Fix ValueReader to throw an exception at EOF.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764104 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.RecordSchema(Name,String,boolean,List)": "AVRO-1655. Java: Fix NPE in RecordSchema#toString. Contributed by Lars Francke.\n\nThis also adds a variant of Schema.createRecord with a field list to\nallow callers to create valid record schemas in a single call.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1674398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRpcProtocolTool.tearDown()": "AVRO-1248. Avro Tool to dump protocol of a remote RPC Service\n\nContributed by Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444584 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.JodaTimeConversions.getLogicalTypeName()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaEscape(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.optionalFixed(String,Schema,byte)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Entry.Entry(B,int)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestLogicalTypesWithDefaults.testWithValues()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestResolvingIO.dataForResolvingTests()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.generic.GenericStringTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.ping.onError(Exception)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LogicalTypes.TimeMicros()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.apply(String)": "[add] resolution code using new reusable visitor.", "org.apache.avro.protobuf.Test.clearSyms()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader12.next(D)": "AVRO-692. Java: Permit Avro 1.2 format files to be read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1044111 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.M(Builder)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestSaslCallbackHandler.handle(Callback)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.Utf8(byte)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.flushBuffer()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.keySet()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificFixed.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.createEnum(String,Schema)": "AVRO-1592. Java: Fix handling of Java reserved words as enum constants in generated code.  Contributed by Lukas Steiblys.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1637493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCreateRandomFileTool.checkMissingCount(String[])": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.file.DataFileReader.SeekableInputStream(SeekableInput)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Writer.getOutputPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.CustomDecimal.signum()": "AVRO-2836 Generated java includes logical type conversions (#883)\n\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nIf the logical type is used for a Fixed type (potentially also Enum)\r\nthen it should check if there are any conversions used, and\r\ninclude in the generated java source\r\n\r\n* AVRO-2836 Generated java includes logical type conversions\r\n\r\nMove enum and fixed to use the javatype method, as if there is a\r\nlogical type conversion it will be picked up and remove a\r\ncode path", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.DecoderFactory.getConfiguredBufferSize()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testP1()": "AVRO-1421. Java: Add an @AvroSchema annotation to reflect.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAnnotationDuplicateTypeAvroMeta()": "AVRO-2375: Allow repeating AvroMeta use (#506)\n\n", "org.apache.avro.protobuf.Foo.hasString()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableInputStream.read()": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateGetOptionalMethod(Schema,Field)": "Squashed commit of the following:\n\ncommit 6a919437bff0977926b33cd56165994b22fbdf74\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Fri Nov 25 10:31:40 2016 +0100\n\n    AVRO-1961: Extra flag to replace the regular getters with getters that return an Optional\n\ncommit 91d58b5dba7562240a84f6885037f9c74dc973e6\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Tue Nov 22 17:23:18 2016 +0100\n\n    AVRO-1961: Java: Generate getters that return a Java 8 Optional.\n\nCloses #162\n", "org.apache.avro.thrift.test.Foo.getResult()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.resolveUnion(Schema,Object)": "AVRO-946. Java: Optimize union resolution when writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197768 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.getRemote()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJodaTimeConversions.getReflectedSchemaByName(String,Conversion)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.TestProtocolDatagram.getExpectedHandshakeCount()": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testProtocolWithDocs()": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.calculateCompatibility(Schema,Schema)": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.file.DataFileWriter.appendTo(File)": "AVRO-1090. Java: Permit appending to files besides java.io.File, e.g., files in HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339841 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojoTest.assertFilesExist(File,Set)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.io.TestValueReader.testEOF_bytes()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.read(ByteBuffer,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.add(int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaCompatibility.hashCode()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.jetty.StaticServlet.getResource(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.OrderPlugin.serverConnecting(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getFieldSchemas()": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.getBlockSize()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setI32Field(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.removeFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.StaticServlet.getResource(String)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.hadoop.file.TestHadoopCodecFactory.testHadoopCodecFactoryFail()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestFsInput.testConfigurationConstructor()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.io.TestEncoders.testBadJsonEncoderInitOS()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.nullableInt(String,int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUIDList()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.reset()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.MapSchema.MapSchema(Schema)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.BinaryDecoder.skipMap()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValueWriter.write(ByteBuffer)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.hashCode()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.schemaFile(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.Test.setFoo(org)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.FakeTicks.ticks()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.hasNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.HijackingIndexedRecord(IndexedRecord,int,Object)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testCopyUuid()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.SeekableBufferedInput.tell()": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.unionFixed(String,Schema,byte,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.channelClosed(ChannelHandlerContext,ChannelStateEvent)": "AVRO-1151. Netty Avro server should expose the number of connections currently open. Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383359 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.next()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordDefault.RecordDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.configure(TaskType,CharSequence,CharSequence)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.getProp(String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseFrom(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.flush()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.TestReflect.testR5()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.file.Writer.withIndexInterval(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeInt(int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "avro.examples.baseball.Builder.clearTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.compiler.schema.CloningVisitor.toString()": "[add] resolution code using new reusable visitor.", "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(T)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.compiler.schema.Schemas.getJavaClassName(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.io.TestValidatingIO.make(Schema,String,Vector,boolean)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooArrayBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NamedSchema.addAlias(String)": "AVRO-634.  IDL: Add support for aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@996649 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferOutputStream.write(ByteBuffer)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.checkType(_Fields,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.Request.getMessageName()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createArrayReader(Schema,Container)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.noopt.M.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.BytesWritableConverter.convert(BytesWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.complete()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectionUtil.loadClass(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.Builder.setI32(int)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.Tests.scan()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.XZCodec.writeAndClose(ByteBuffer,OutputStream)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.failOnIncompleteTree()": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(SpecificData)": "AVRO-1240. Java: Fix SpecificDatumReader(Class) constructor to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442612 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMillisConversion.getConvertedType()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.echo(TestRecord)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTest.mkSchema(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.InMemorySpanStorage.getSpansInRange(long,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseFrom(java,com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.testRead_SpecificDataRecord()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_argsStandardSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTest.readInternal(Decoder)": "AVRO-2269 Make Perf.java more usable.\n", "avro.examples.baseball.FieldVisibilityTest.clearFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.addFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyTransceiver.connect()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.testWrite()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Nested.isSetX()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.Builder.clearD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.AvroMultipleOutputs.getRecordWriter(String,String,Reporter,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Writer.withOutputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.setMaxSpans(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testDecimalFixed()": "AVRO-2143. Fix Java reflect to stop using dollar sign in namespaces of nested classes.\n", "org.apache.avro.reflect.ByteBufferTest.before()": "AVRO-1150. Java: Fix tests to create all temporary files in target directories.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1386824 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.Names(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TaggedInputSplit.getLength()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeCachedField.getField()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.KeyRecord(int)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.build()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.nullToEmpty(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.setMap1(HashMap)": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.tool.TestConcatTool.generateData(String,Type,Map,CodecFactory)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.tool.GenAvroTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearI64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.compiler.specific.TestSpecificCompiler.testConversionInstanceWithDecimalLogicalTypeEnabled()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Error.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setD(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.hadoop.io.BlockCompressWriterBase.BlockCompressWriterBase(FileSystem,Configuration,Path,Class,Class,int,short,long,CompressionCodec,Progressable,Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestBasicTracing.EndpointResponder(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toRecord(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.BooleanBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.testRead_PojoWithArray()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.data.LocalTimestampMicrosConversion.getLogicalTypeName()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.protobuf.noopt.Foo.getBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Foo.Factory(org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroKeyRecordWriter.AvroKeyRecordWriter(Schema,GenericData,CodecFactory,OutputStream)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(String,Schema)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.mapred.AvroWrapper.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.testIOFormat()": "AVRO-1254. Fix Trevni mapreduce tests to not depend on order, which is no longer guaranteed under Java 7.  Committed to the right place this time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1448804 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericRequestor.GenericRequestor(Protocol,Transceiver)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.doc(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.evaluateChallenge(byte)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.grpc.CountingOutputStream.write(byte,int,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.TestValidatingIO.testOnce(Schema,String,int,Encoding)": "AVRO-1427. Java: Improve ResolvingDecoder tests. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556934 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.buildParsed()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ResolverTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeByteField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNode.getRequestorHostname()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.FloatFoo(Random,boolean)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withProgressable(Progressable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.responseSessionMeta()": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseMarshaller.AvroResponseMarshaller(Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ReaderWriterCompatibilityChecker.typeMismatch(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferBadVersionByte()": "AVRO-2265 Remove Guava as a test dependency (#377)\n\n", "org.apache.avro.TestSchemaCompatibility.testValidatePrimitiveWriterSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Builder.hasId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.Pair.Pair(Void,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.MapReduceAvroWordCount.main(String)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.processTrailingImplicitActions()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaBuilder.optionalArray(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.fixed(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestValidatingIO.cartesian(Object[])": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testRepairAllCorruptBlock()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,Long)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.removeField(Object,String,int)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.XZCodec.getName()": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.AccessorTestClass.validate(FieldAccess)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getStringBytes()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.TestSchemaCompatibility.getWriterSchema()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.writeTo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.UnionBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Builder.hasFoo()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.hasD()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapreduce.TestWordCount.reduce(AvroKey,Iterable,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.isEnum(Object)": "AVRO-948. Java: Fix to more correctly handle Thrift optional and nullable fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190627 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeySerialization.open(InputStream)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setUint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.add.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.hashCode()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getProp(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.usage()": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.Processor(I,Map)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReflectNestedLargeFloatArrayTest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileReflect.testMultiReflectWithUnionBeforeWriting()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.getRootNode()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.check(Schema,byte,String,Object,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testCloningError1()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "avro.examples.baseball.Builder.hasTimeMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.tool.RecodecTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.util.internal.Accessor.setAccessor(ResolvingGrammarGeneratorAccessor)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearFooArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.thrift.test.Foo.setSuccessIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.floatBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.BaseTypeBuilder.map()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parser()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SaslSocketTransceiver.getRemoteName()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.serverSendResponse(RPCContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getField(Object,String,int,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.unsetSuccess()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setI64(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.trace.TraceCollection.getMinBytes(SortedSet)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setStringBytes(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.LocalTimestampMillisConversion.getLogicalTypeName()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.file.DataFileReader.tell()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.skipMap(JsonParser,Decoder,int)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOFString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRecordBase.hashCode(SpecificRecord)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectDoubleTest.ReflectDoubleTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPojoWithOptionalOnlyWhenNullableCreatedTurnedOnAndGettersReturnOptionalTurnedOff()": "[AVRO-2639] Grab unit test from #726, Rest was already done as part of #817\nCloses #726\n", "org.apache.hadoop.io.SequenceFileBase.BlockCompressWriterBase(FileSystem,Configuration,Path,Class,Class,int,short,long,CompressionCodec,Progressable,Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestKeyValueWordCount.reduce(Text,Iterable,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.testReadSequenceFile()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestValidatingIO.check(Schema,byte,String,Object,int,Encoding)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericOneTimeReaderUse.GenericOneTimeReaderUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.SingletonTestingTracePlugin.SingletonTestingTracePlugin(TracePluginConfiguration)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getAccessorForField(Object,String,int,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.hashCode()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.OutputBuffer.size(byte)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.setFavoriteNumber(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.thrift.test.add_result.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.Counter.map(AvroKey,NullWritable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.record.TestStateDecode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestValidatingIO.generate(Encoder,String,Object)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.setUp()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.multiplefiles.Foo.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.Util.codecFactory(OptionSet,OptionSpec,OptionSpec)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testGlobPatternConcat()": "[merge] marge with latest changes", "org.apache.avro.generic.GenericData.prune()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroKey.AvroKey(T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.validate(Schema,Object)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificExceptionBase.hashCode()": "AVRO-182.  Fix Java's generic and specfic implementations of equals() and hashCode() to be consistent with compareTo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835070 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.cur()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,Double)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.WordCount(String,long)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.BulkDataImpl.write(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.AvroTestConverter.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCollector(String,Schema,Reporter,String)": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.mapreduce.ReflectStatsReducer.reduce(Text,Iterable,Context)": "AVRO-1108. Java: Add support for reflect API to newer mapreduce API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1350810 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.newRecord(Object,Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.Test(String,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBaseTest.testIsValidValueWithUnion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.sync()": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.NettyDataPack.setSerial(int)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.HttpServer(Responder,int)": "AVRO-701 + AVRO-772: Extensions to HttpServer to let you specify bind address as well as add arbitrary Jetty connectors (useful for Avro HTTP RPC over SSL).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.addProp(String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.JsonToBinaryFragmentTool.getShortDescription()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestPair.testCollectionFailure()": "AVRO-1183. Java: Provide a better error message when the schema for a Pair cannot be inferred.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1409395 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.getClassSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiver.getChannel()": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testProps()": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.tool.DataFileGetMetaTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(Class,ReflectData)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.createSchemas()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_call.write_args(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.newBuilderForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericData.isBoolean(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.exceptionCaught(ChannelHandlerContext,Throwable)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.TestResolvingIO.testSkip_2(String,String,String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.remove()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setI64(long)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestProtocolParsing.testMessageCustomProperties()": "AVRO-1819, AVRO-1820: Java: Add aliases, custom properties to Protocol. Contributed by Konstantin Usachev.\n", "org.apache.avro.generic.TestGenericDatumWriter.writeLong(long)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtoConversions.testTimestampMicrosConversionSecondsUpperLimit()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.reflect.ReflectResponder.getDatumReader(Schema)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.addFooArrayBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherKeySerialization.close()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReflectNestedFloatArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.equals(add_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.TestOutputInterceptor.onTestFailure(ITestResult)": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.ensureIntArrayIsMutable()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.inputStream()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkBinary(Schema,Object,DatumWriter,DatumReader,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJsr310TimeConversions.testTimestampMicrosConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericWithOutOfOrderTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.tether.TetherOutputService.error()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.echo(TestRecord)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testSchemas()": "AVRO-166.  Improve error checking in Java schema parser.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@828110 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.mkNonTerm(int,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipFloat()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testGetSerializerForKey()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.Pair.Pair(Long,ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableBufferedInput.seek(long)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearIntArray()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Referenceable.Referenceable(String)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testOneWayRpc()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.trevni.InputBytes.read(long,byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.specific.SpecificResponder.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getClient(Class,ReflectRequestor)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.SyncableFileOutputStream.SyncableFileOutputStream(FileDescriptor)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.ColumnFileReader(Input)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ValidatingGrammarGenerator.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.record.TestStateDecode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.LockableArrayList.retainAll(Collection)": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithOutOfOrderTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Foo.getFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.getEncoder()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.ipc.reflect.ReflectResponder.getDatumWriter(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.type(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Foo.Foo(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteUUIDMissingLogicalType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.escapeForJavadoc(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.run()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificRecordBuilder.buildWithoutSettingRequiredFields1()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.symbols(String[])": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.RandomData.RandomData(Schema,int,long)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.randomString(Random)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestCircularReferences.toRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRecodecTool.assertLessThan(long,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FloatSchema.FloatSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.ReflectDatumWriter.writeField(Object,Field,Encoder,Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.testRead(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.items(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionFieldBuilder(FieldBuilderBase,String,Schema,JsonNode,Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestResponder.TestResponder()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.createMapOutputDataModel(Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeObjectField.get(Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalInt(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanTraceFormation.testSpanEquality()": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestMain.testToolNameLength()": "AVRO-1939: Add missing Apache license header (#399)\n\nAdd missing Apache license header and fix failing test case for schema normalization tool", "org.apache.avro.ipc.reflect.ReflectRequestor.ReflectRequestor(Class,Transceiver)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ParsingTable.mkRepeater(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.xzCodec(int)": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.CheckList.assertEquals(Object,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.type(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.test_identical()": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.getCompressionType()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Foo.setFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Conversion.toFixed(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransportCodec.getSerial()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testNullableStringableField()": "AVRO-1153. Java: Fix reflect to be able to write unions that contain stringable schemas.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384163 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Encoder.writeFixed(ByteBuffer)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearFooArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDataFile.readFile(File,DatumReader)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_args.getFieldName()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readRecord(Object,Schema,ResolvingDecoder)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.hello(CharSequence)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestToTrevniTool.test()": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "avro.examples.baseball.FieldVisibilityTest.getName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.Perf.ExtendedEnumResolveTest()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.BytesDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSequenceFile.testReadAvroWithoutReaderSchemas()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.TestSpecificData.testClassTypes()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SSLChannelFactory.newChannel(ChannelPipeline)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSerialization.getSerializer(Class)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.specific.SpecificRequestor.SpecificRequestor(Protocol,Transceiver)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testJob_noreducer()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.stats.Stopwatch.start()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.getKey()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getCompatibility(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.SaslSocketTransceiver.SaslSocketTransceiver(SocketAddress)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.deepCopy()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransportCodec.decode(ChannelHandlerContext,ByteBuf,List)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.LogicalTypes.Decimal(int,int)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.readString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericNestedFakeTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.zip.getResult(I,zip_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.LocalTimestampMicrosConversion.getRecommendedSchema()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.Names.contains(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.ToTextTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.isNonStringMapSchema(Schema)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.compactAndFill(byte,int,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountGeneric.reduce(GenericRecord)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.makeArrayTestData(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.executeCompiler(SpecificCompiler,Optional,StringType,boolean,File,File)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Foo.addAllSyms(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.AvroMissingFieldException.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_args.setNum2(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LitS2.LitS2(Schema,Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TimestampMicros.TimestampMicros()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parsePartialFrom(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaPairCompatibility.toString()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.protobuf.Builder.getInt64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getStringBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroValueDeserializer.createAvroWrapper()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.hadoop.io.Options.getFileSystem()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeValue(Object,ValueType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumReader.readMapKey(Object,Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseTypeBuilder.array()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.MailImpl.reset()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.parsing.LitS2.LitS2(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.ColumnOutputBuffer.writeLength(int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumReader.createEnum(String,Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcSendTool.getName()": "AVRO-267.  Add two new avroj commands: rpcsend and rpcreceive.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapCompletion.MapCompletion(MapBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.writeResponse(Schema,Object,Encoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SocketTransceiver.isConnected()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchemaBuilder.testArray()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.SingleBucketSegmenter.getBoundaryLabels()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getKeySchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Json.setSchema(Schema)": "AVRO-924. Java: Support reading & writing arbitrary JSON data using an efficient Avro binary representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1185364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.BasicArrayState.getBatchSize()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.Fixed.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.Field(String,Schema,String,JsonNode,Order)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.protobuf.multiplefiles.Builder.getEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestDataFile.makeFile()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.set(int,Object)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.PropBuilder.prop(String,JsonNode)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalBoolean(String,boolean)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getClassSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.toByteBuffer()": "AVRO-1704: Java: Add toByteArray and fromByteArray to specific.\n", "org.apache.avro.TestSchema.createDefaultRecord()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.io.BinaryData.encodeFloat(float,byte,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.read(ByteBuffer,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testR2()": "AVRO-237.  More improvements to Java reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@884249 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Props.Props(Set)": "AVRO-601.  Java: Add per-field property support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982058 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingEncoder.push()": "AVRO-1066. ArrayIndexOutOfBoundsException in ParsingEncoder when trying to use a json encoder to serialize a deep object graph\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1337322 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.enumLabelsAction(List)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.setTypes(Collection)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SnappyCodec.compress(ByteBuffer)": "AVRO-856. Java: Update Snappy to 1.0.3-rc4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1145360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.setItemCount(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BooleanSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.RecordBuilder(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyInputFormat.createRecordReader(InputSplit,TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.jetty.SleepyResponder.respond(Message,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.EnumSymbol.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessReflect.isStringable()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.test()": "AVRO-1008. Java: Improve support for forcing connection handshakes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424699 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Company.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.print(Encoding,int,Schema,Schema,Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.Record(Record,boolean)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalLong(String,long)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalInt(String,int)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.escapeForJavaDoc(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.generic.GenericDatumWriter.writeEnum(Schema,Object,ValueWriter)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setInt64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroWrapperConverter.AvroWrapperConverter(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.getDecoder()": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.ipc.trace.TraceNodeStats.getChildren()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBaseTest.testIsValidValueWithPrimitives()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.CustomEncoding.getSchema()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.getRecordSchema()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.mergeFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.data.Json.toString(Object)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.writeDataPack(NettyDataPack)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.JsonEncoder.writeBoolean(boolean)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.generic.GenericDatumWriter.isRecord(Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testCopy(Schema,Object,GenericData)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.generic.GenericWithOutOfOrderTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.FastReaderBuilder.createFieldSetter(Field,FieldReader)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.trevni.ColumnOutputBuffer.getBuffer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.Fixed.compareTo(Fixed)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.write(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.TestValidatingIO.testRead_blocking(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordReader.nextKeyValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.file.DataFileWriter.setSyncInterval(int)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Void)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestAllCodecs.generateTestData(int)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.TestProtocolHttp.createServer(Responder)": "AVRO-708. Java: Fix Netty-based RPC to keep connection open.  Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056494 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.nextToken()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.protobuf.noopt.Test.clearUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.newRandom()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R4.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.getConfiguration()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiverWhenFailsToConnect.newChannel(ChannelPipeline)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.TestGenericDatumWriter.writeFixed(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.SleepyResponder(Protocol)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.read(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeIntField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.LitS2(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BufferedBinaryEncoder.writeLong(long)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStopwatch.testNotStarted1()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompilerTool.run(List)": "AVRO-149.  Add Java command-line executable 'avroj'.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@830407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.disconnect(boolean,boolean,Throwable)": "AVRO-1293. Java: Fix potential deadlock in NettyTransceiver. Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499035 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.mergeFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(String,Object,Object,String)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.validateBrowsingOptionals()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherRecordReader.getPos()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeZero()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R11.equals(Object)": "AVRO-432.  Add @Nullable annotation to Java reflect API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918770 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderUnion.resolve(Schema,Schema,Map)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.tearDown()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.SchemaValidatorBuilder.validateLatest()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setBool(boolean)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeBoolean(boolean)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setOutputMeta(JobConf,String,byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.EncoderFactory.binaryEncoder(OutputStream,BinaryEncoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Rec1.Rec1(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.tether.TetherPartitioner.configure(JobConf)": "AVRO-512.  Fix typo in file name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.getCountersEnabled(JobConf)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.write(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readInt(Object,Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BytesSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.TestAvroOutputFormat.testSnappyCodecUsingAvroCodec()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.trevni.avro.AvroColumnator.getColumns()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.Message(String,String,Schema,Schema,Schema)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.GenTest.writeFile(File,String)": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.doc()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.setLogicalType(LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testZero()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.ipc.netty.NettyTransportCodec.decodePackBody(ChannelHandlerContext,Channel,ChannelBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.ipc.stats.RenderableMessage.getNumCalls()": "AVRO-587. Add Charts and Templating to Stats View\n(Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980173 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolHttp.testStartServer()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.IntTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.perf.test.basic.MapTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.IntTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMicrosConversion.getLogicalTypeName()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.Decimal.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.setSint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroMultipleOutputs.close(Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.WordCountUtil.WordCountUtil(String)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemas.getReader()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.Field.addAlias(String)": "AVRO-634.  IDL: Add support for aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@996649 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getProps()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.compile(Schema)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getFieldDescriptor(Descriptor,int)": "AVRO-907. Java: Optimize access to protobuf message fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getClassAccessorData(Class)": "Remove use of guava by utilizing java8 lambdas and collections\n", "org.apache.avro.io.TestBinaryDecoder.testEOFLong()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ArrayTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.Builder.getFooArray(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroUtf8InputFormat.getProgress()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getTimestampOrBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.ValidatingDecoder.ValidatingDecoder(ParsingTable,Decoder)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SimpleImpl.echo(TestRecord)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.getString(String)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeBytes(byte,int,int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.SchemaCompatibilityResult(SchemaCompatibilityType,SchemaIncompatibilityType,Schema,Schema,String)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.data.TimeConversion.getRecommendedSchema()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.io.ValueWriter.flush()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.CloningVisitor.afterVisitNonTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.DoubleTest.DoubleTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.getMetaLong(String)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Long,Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FieldBuilder.type(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.getNumActiveConnections()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.write(AvroWrapper,NullWritable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Encoder.writeBytes(byte)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.completion(Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.ping()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.BalancesRecord.BalancesRecord(int,long)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIntAsFloatDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.thrift.test.zip_args.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.pushProduction(Symbol,Symbol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createEnumReader(EnumAdjust)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.ReflectDatumReader.getField(Object,String,int)": "AVRO-11.  Re-implement specific and reflect datum readers and writers to leverage AVRO-6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764989 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.dropMicros(long)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.pruneArray(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReadDouble.readInternal(Decoder)": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testReflectFieldError()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Decimal.getScale()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testLossyTimeMicrosConversion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.hasFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.BaseFieldTypeBuilder.array()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.BlockedValue()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRuntimeException.AvroRuntimeException(Throwable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.getString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FooBarSpecificRecord.setId(int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.Schema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.writeError(Schema,AvroRemoteException,Encoder)": "AVRO-433.  Fix exceptions in Java reflect RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918783 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.key(K)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BufferedBinaryEncoder.writeFixed(ByteBuffer)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.LocalTimestampMillis()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.Conversions.toCharSequence(UUID,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.initializeTransceiver(int)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectAllowNulls.testPrimitives()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.getUnknownFields()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.getFooBuilder()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroUtf8InputFormat.getPos()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.ping()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readMapStart()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.validateName(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.removeField(Object,String,int)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setString(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Name.toString()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FloatSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.run()": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.write(Status,String)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.ipc.ResponderServlet.ResponderServlet(Responder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.ack()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.GenericDatumReader.getStringClass(Schema)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.NamesRecord.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingDecoder.skipAction()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readLong()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeZero()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.PositionFilter(SeekableInput)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.ImplicitAction(boolean)": "AVRO-313. Default values for fields or records and array (or map) don't work with ResolvingDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newEncoder(ByteArrayOutputStream)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.StringTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Test.clearSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.schema.CloningVisitor.visitTerminal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.readFully(byte)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getField(Object,String,int,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.send_zip()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.ContainerAction(Schema,Schema,Action)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.FooOrBar.getStructDesc()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.readResponse(Schema,Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.fromCharSequence(CharSequence,Schema,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setRequestPayload(List)": "AVRO-578. Java: add payload data to RPC context for use by plugins.  Contributed by Patrick Wendell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@958149 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroTestUtil.tempFile(Class,String)": "AVRO-1150. Java: Fix tests to create all temporary files in target directories.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1386824 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setStringFieldIsSet(boolean)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.NullDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkReaderEnumContainsAllWriterEnumSymbols(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearI32()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.M.writeReplace()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.isStringable(Class)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.remove()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.toString()": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.ipc.trace.TraceCollection.getMinTime(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.getPayloadSize(List)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.isStringable(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader()": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setInt64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.BlockingSimpleImpl.hello(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.tether.WordCountTask.reduce(Pair,Collector)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Resolver.EnumAdjust(Schema,Schema,int)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Foo.getTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.Promote.resolve(Schema,Schema,GenericData)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.thrift.test.ping_argsTupleScheme.read(org,ping_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.JsonDecoder.getValueAsTree(JsonParser)": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.TestFingerprint.cases()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testProtocolSplit()": "AVRO-1316. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480808 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.Utf8.subSequence(int,int)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.ensureSymsIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.doSkipBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.IntTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO.testSkip_3(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.addAllSyms(java)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.addReferenceTypes()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withValueClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.message.BinaryMessageEncoder.BinaryMessageEncoder(GenericData,Schema,boolean)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.protobuf.multiplefiles.Builder.getInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestValidatingIO.skip(char,int,Decoder)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.ensureBounds(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.equals(Object)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "example.MapReduceAvroWordCount.reduce(Text,Iterable,Context)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getRecordSchema(Object)": "AVRO-805.  Fix to work with either protobuf 2.3 or 2.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1170003 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Long)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.getDefaultInstance()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TimestampMillisConversion.getRecommendedSchema()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.trevni.avro.mapreduce.WordCountMapper.setup(Context)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroTextOutputFormat.close(Reporter)": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getAverageTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.testNonAvroReducer()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.generic.GenericDatumReader.readEnum(Schema,Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojo.getDateTimeLogicalTypeImplementation()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.io.DirectBinaryEncoder.writeBoolean(boolean)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.TestStateDecode.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.Writer.withReplicationFactor(short)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ExtendedEnumTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroUtf8InputFormat.createValue()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSyms(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestResolvingTable.primitiveTestData()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecodingTestCase.getReaderSchema()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.StatsPlugin(Ticks,Segmenter)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getDescription()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testRecursiveEquals()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.getId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MigrationTest.MigrationTest()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.openReader(SeekableInput,DatumReader,Header,boolean)": "AVRO-757. Java: Permit data files to be re-opened without re-reading the header.  Contributed by Stu Hood.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadStdin()": "AVRO-1583. Java: Add stdin support to the tojson tool.  Contributed by Cl\u00e9ment Mahtieu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1623881 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCatTool.testOffsetBiggerThanInput()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ErrorTupleScheme.read(org,Error)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.getValueSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setB(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.Schema.put(Name,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroRecordReader.getProgress()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler(Protocol,DateTimeLogicalTypeImplementation)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.tool.DataFileReadTool.getHeadCount(OptionSet,OptionSpec,List)": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.data.TimeMicrosConversion.getLogicalTypeName()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.unaryRequest(String,Object,Callback)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Parser.getValidate()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ParsingTable.mkNonTerm(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeArrayEnd()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.writeFixed(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getSymsList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testArrayObjectProp()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.mergeFrom(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.SequenceFileReader.convert(Writable)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaCompatibility.SchemaPairCompatibility(SchemaCompatibilityType,Schema,Schema,String)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroRequestMarshaller.AvroRequestInputStream(Object,Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.specific.SpecificData.createClassSchema(Class,Map)": "AVRO-225.  In generated Java, use dollar-sign, not underscore, to prevent name conflicts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882707 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumReader.ProtobufDatumReader(Schema)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.build()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.newBuilder(TestRecordWithoutLogicalTypes)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.AvroMultipleOutputs.getNamedOutputs()": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BooleanTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.zip_argsTupleScheme.write(org,zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.aliases()": "AVRO-1016. Java: Add Field#getAliases() method to better permit copying of schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241665 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.isOneWay()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BytesBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.NonAvroMapper.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestEncoders.testBlockingBinaryEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.makePath(String,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.resolvingDecoder(Schema,Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add.start(I,add_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.EnumSchema.toJson(Names,JsonGenerator)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testNullableLogicalTypesJavaUnboxDecimalTypesEnabled()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Options.getValueClass()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.UnchangedUnionTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.zip_args.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBaseTest.testIsValidValueWithNullField()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.GenericReaderOneTimeUseReaderTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getFavoriteColor()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.file.DataFileWriter.DataFileWriter(DatumWriter)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.checkResolvingDecoder()": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.protobuf.Foo.setFooArray(int,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.MigrationTest.getDecoder()": "AVRO-383. Optiminzing ResolvingDecoder for default values\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904596 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.getRecentAdditions()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.unresolvedSchema(String)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.Resolver.SkipAction(Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.thrift.ThriftDatumReader.newArray(Object,int,Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.newBuilder()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.Perf.ReflectLongArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestParsingTable.reverse(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.getFooOrBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestAvroOutputFormat.testSetSyncInterval()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.protobuf.Builder.clearInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.getName()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestValidatingIO.printSchemaAndValues(String,Schema,Object)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.tool.RpcReceiveTool.run1(InputStream,PrintStream,PrintStream,List)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TestWordCountTether.testhtp()": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.performanceTest()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.getClient(Class,Transceiver,SpecificData)": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.io.TestParsingTable.checkSymbol(int,ParsingTable,int,BitSet,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.initializeTransceiver(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TracePlugin.TracePlugin(TracePluginConfiguration)": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.recordSchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.FastReaderBuilder.createPromotingReader(Promote)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.mapreduce.AvroSequenceFileOutputFormat.setOutputCompressionType(Job,CompressionType)": "AVRO-2053: Remove Reference To Deprecated Property mapred.output.compression.type\n", "org.apache.avro.protobuf.ProtoConversions.fromLong(Long,TimestampPrecise)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.thrift.test.add_args.findByThriftIdOrThrow(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.mangle(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testValidatorPasses(SchemaValidator,Schema,Schema[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.Fixed.setSchema(Schema)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.getDatumWriter(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.Requestor.Request(String,Object,RPCContext,BinaryEncoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificLogicalTypes.testAbilityToReadJodaRecordWrittenAsJsr310Record()": "[AVRO-2290] Truncate to millis for the timestamps as that's what the converter will use\n", "org.apache.avro.protobuf.Foo.clearFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestServiceImplBase.ping()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.tool.Main.printStream(InputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadDouble()": "AVRO-315. Performance improvements to BinaryDecoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899182 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericWithOutOfOrder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.getTypeEnum()": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumAdjust.resolve(Schema,Schema)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.compiler.schema.PrintingVisitor.get()": "[add] resolution code using new reusable visitor.", "org.apache.avro.NameContext.NameContext()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.incompatible(SchemaIncompatibilityType,Schema,Schema,String,List)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.error()": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.hasI64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.test.reflect.ReflectNestedFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.BinaryEncoder.encodeFloat(float,OutputStream)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.test(Encoding,int,String,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.skip(int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.checkBinary(ReflectData,Schema,Object,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCompare.check(String,Object,Object,boolean)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.check(File,String,String,Object)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.trevni.TestIOBuffers.testFloat()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.BlockingSimpleImpl.echo(TestRecord)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.generic.GenericNestedTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.Test.isSetI16Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.clearName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "avro.examples.baseball.Builder.hasName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.generic.GenericDatumWriter.isEnum(Object)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMaxBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Main.Main()": "[AVRO-1738] add java tool for outputting schema fingerprints\nPatch from Sean Busbey applied (with modifications for current code formatting and other updates)\n", "org.apache.avro.perf.test.BigRecord.BigRecord(Random)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.TestReflectJob.Text(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.clear()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.InputStreamByteSource.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.skipSync()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.TestUtil.testRandomLength()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaParseException.SchemaParseException(Throwable)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setStringBytes(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.setRemote(Protocol)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.addFooArrayBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.getConversions()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.testAvroSpecificOutput()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.trevni.avro.AvroColumnator.isSimple(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherTaskRunner.partitions(int)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMillisConversion.fromLong(Long,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.protobuf.noopt.Foo.getStringBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.setFooArray(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Builder.setSint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.mapNext()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testFailureOnWritingPartialJSONValues()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFooArrayFieldBuilder()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaNormalization.fingerprint(String,byte)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readEnum()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testObjectProps()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericResponder.writeResponse(Schema,Object,Encoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamespacedBuilder.context()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getNumber()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.TestProtocolSpecific.hello(Utf8)": "AVRO-123.  Fix Java's specific protocol compiler so that parameters and return types are unboxed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819021 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteReader.read(ByteBuffer,int)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.ipc.trace.TraceNodeStats.TraceNodeStats(TraceNode)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.size(int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.noopt.M.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.get(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteNullableUUID()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "example.ColorCount.reduce(CharSequence,Iterable,AvroCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.HadoopReducer.ReduceCollector(OutputCollector)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setFloat(float)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificExceptionBase.SpecificExceptionBase(Object)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.DelegatingMapper.configure(JobConf)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.addFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.getSymsCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemaBuilder.testFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimeMicrosConversion.getRecommendedSchema()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.ipc.SocketTransceiver.readBuffers()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.size()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.protobuf.Builder.mergeFrom(com,com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyValueRecordWriter.testWriteRecords()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BoolTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.testToFromFixedMatchScaleAndPrecision()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.tether.TetherKeyComparator.compare(TetherData,TetherData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedObjectArrayTest.Foo(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NamedBuilder.aliases(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.version()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.IntDefault.intDefault(int)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriter.hashCode()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.EnumSchema(Name,String,LockableArrayList,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.getRecordSchema(Object)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.resolve(Schema,Schema)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.error()": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.Writer(Options)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.perf.test.basic.StringTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Foo.getBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestAvroMultipleOutputs.map(Utf8,AvroCollector,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsServer.StatsServer(StatsPlugin,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(Class)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.generate(Resolver,Map)": "AVRO-2415 - Union resolver regression when dealing with arrays (#537)\n\n\r\n", "org.apache.avro.TestReflect.testP0()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testPrimitiveSchemaGeneratesNothing()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withInputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.SpecificRequestor(Class,Transceiver)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.DoubleTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Builder.clearString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ReaderUnion.ReaderUnion(Schema,Schema,int,Action)": "AVRO-2275 Some name cleanup, plus changes to make it easier to utilize Resolver.Action trees.\n", "org.apache.avro.JsonProperties.addProp(String,JsonNode)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyRecordWriter.testWrite()": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.getRequestPayload()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.HttpServer.HttpServer(ResponderServlet,Connector)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.protobuf.noopt.Foo.hasInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.RecordMapping.getSchema()": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.AbstractSpecificRecordTest.verifySerDeAndStandardMethods(T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServer.createMessage()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FloatTest.reset()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.initDecoder(BinaryDecoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(Schema,JsonNode)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.netty.LastChannelRememberingChannelFactory.newChannel(ChannelPipeline)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.TestCycle.testCycleGeneration()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.file.DataBlock.getAsByteBuffer()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.newBuilder(avro)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testAliases()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.addAliasesTo(Field)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.RecordWithUUIDArray.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.longType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestProtocolHttp.testTimeout()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.acquirePermit()": "AVRO-842. Java: Fix Netty-based IPC client to provide better errors when attempting to use a closed connection.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1141980 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCanonical.cases()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericDatumReader.readFixed(Object,Schema,Schema,Decoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.getRecordSchema(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.doc()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.Params.Params(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,GenericContainer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.createSampleRecordSchema(int,int)": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit9()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Nested.clear()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testShort()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.makeContext()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.zip_args.write(org,zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testDifferentSeparatorsBetweenJsonRecords()": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.protobuf.Test.mergeFoo(org)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.key()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestTextFileTools.toText(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Field.createField(String,Schema,String,JsonNode)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.add()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestResolvingTable.makeUnionTestData(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroOutputFormat.configureDataFileWriter(DataFileWriter,JobConf)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.ResolvingDecoder.readFieldOrder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BooleanDefault.booleanDefault(boolean)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.put(int,java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Builder.Builder(TestRecordWithoutLogicalTypes)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.Json.parseJson(String)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalDouble(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testEmptyRecordSchema()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "avro.examples.baseball.FieldVisibilityTest.get(int)": "Fix failing test\n", "org.apache.avro.io.GenericReaderOneTimeUseTest.getDecoder()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiverWhenFailsToConnect.newChannel(ChannelPipeline)": "AVRO-1407: Java: Fix infinite loop on slow connect in NettyTransceiver.  Contributed by Gareth Davis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641894 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.setField(Object,String,int,Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.GenerateBlockingData.main(String)": "AVRO-142.  Remove some Java unused fields and imports.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(byte)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBinaryDecoder.testEOFBoolean()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Stringy.compareTo(Stringy)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.FailingOutputStream.write(int)": "AVRO-2109: Reset buffers in case of IOException\n\nCloses #260\n\nSigned-off-by: Zoltan Ivanfi <zi@cloudera.com>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.mapred.tether.TestWordCountTether._runjob(String)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordReader.getCurrentValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.removeFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceCollection.TraceNodeStats(TraceNode)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithList.getRelatedIds()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.tearDownConnections()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.file.TestSeekableByteArrayInput.testSerialization()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.create(Schema,File)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.SSLChannelFactory()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readMapStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyRecordWriter.AvroTrevniKeyRecordWriter(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestParsingTable.getUnionSchema(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.createKey()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.setStructField(Nested)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.NonParameterized.testUnterminatedHeredoc()": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.getCurrentValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testRead()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericWithPromotionTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.DefaultEncoderFactory.configureBufferSize(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordTest.writeInternal(Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.CallFuture.getError()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasD()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "example.MapredColorCount.reduce(CharSequence,Iterable,AvroCollector,Reporter)": "AVRO-1225. Java: Add guide for MapReduce API.  Contributed by Brock Noland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1552425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.isEnd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.getAsByteBuffer()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeArrayStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ValidatingRecordTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.Perf.populateIntArray(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.read(ByteBuffer,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getNameForNonStringMapRecord(Type,Type,Schema,Schema)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.FieldBuilder(FieldBuilderBase,String,Schema,boolean,JsonNode)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getListFieldSize()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Decimal.maxPrecision(Schema)": "AVRO-2620: Use log power rule for max precision.\n", "org.apache.avro.protobuf.noopt.Foo.Foo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.hasSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.SaslSocketTransceiver.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.RandomData.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.FastReaderBuilder.createStringReader(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.generic.GenericDatumWriter.writeWithoutConversion(Schema,Object,Encoder)": "AVRO-2070 tolerate any numbers in GenericDatumWriter while writing primitives in java\n", "org.apache.avro.grpc.TestServiceImplBase.error(boolean)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.HttpTransceiver.readBuffers()": "Multiple static analysis fixes and code modernization\n", "org.apache.trevni.TestColumnFile.testEmptyFile()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,Void)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(ResponderServlet,Connector)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.trevni.ColumnMetaData.getNumber()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.getDefaultInstance()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingEncoder.writeEnum(int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampMillisConversion.getLogicalTypeName()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.test.basic.BytesTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.ValueReader.doReadBytes(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.add_result(add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getNamespace()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.MapSchema.toString(Map)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.fail(Utf8)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo2.setCompanyMap(HashMap)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaNormalization.toParsingForm(Schema)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parseName(JsonNode)": "AVRO-34.  Upgrade to Jackson version 1.0.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777671 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestIDLProtocolMojo.testIdlProtocolMojoJsr310()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.TestVisitor.visitNonTerminal(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.testMultipleRPCs()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.tool.SchemaNormalizationTool.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufData.getNamespace(FileDescriptor,Descriptor)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Protocol.parse(File)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getResult(I,add_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.Date()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.drain()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDecimalConversion.setup()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.tether.TetherReducer.reduce(TetherData,Iterator,OutputCollector,Reporter)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.except(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.writeExternal(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BasicTest.readTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ValidateAll.validate(Schema,Iterable)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.generic.GenericData.compareTo(GenericEnumSymbol)": "AVRO-1327. Java: Make GenericEnumSymbol implement Comparable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480769 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testGetClassSchema()": "AVRO-1223. Java: Add a static method to generated classes that returns its schema, getClassSchema().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TwoWayMessage.TwoWayMessage(String,String,Schema,Schema,Schema)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.BZip2Codec.compress(ByteBuffer)": "[AVRO-2589] Trevni codec and test fixes\n\n* Unit test improvements\n* Fix handling of sliced ByteBuffers in codecs\n\nSame as changes for AVRO-2245\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.getCurrentKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setFooOrBarIsSet(boolean)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericStringTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.GenericRecordBuilder.has(int)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.Record(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.nullBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.FooBarSpecificRecord.FooBarSpecificRecord(java,java,org)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.CompleteRecord.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.props()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.except(String)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.getField(Object,String,int)": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapSchema.computeHash()": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.MapTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.tool.DataFileWriteTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumBuilder.build()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.newArray(int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityTypeMismatch.data()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.LogicalTypes.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.TestBlockingIO.skipArray(JsonParser,ValueReader,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setFixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.next(D)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.RenderableMessage.RenderableMessage(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Processor.add()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolReflect.echoBytes(byte)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.configureSingleton(TracePluginConfiguration)": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Builder.getFooArrayFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.record.TestStateDecode.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.grpc.UnaryMethodHandler.getMethod()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.mapred.MapImpl.map(Text,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.TestSequenceFileReader.file()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMaxTime(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.LitS2(Schema,Schema)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.requiredString(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.NestedTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceNodeStats.getResponsePayloads()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtoConversions.toLong(Timestamp,TimestampPrecise)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.SocketTransceiver.setRemote(Protocol)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isBytes(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.RandomData.generate(Schema,Random,int)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.protobuf.noopt.Builder.getEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.toString(Names,boolean)": "AVRO-2822: Add toString that doesn't inline referenced schemas (#869)\n\n", "org.apache.avro.protobuf.Test.newBuilderForType(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.compileProtocol(File)": "Fix so that specific code generation works under Eclipse.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764978 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.wrap(byte,int,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestSchemaBuilder.testUnionFieldBuild()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Player.Builder(avro)": "AVRO-1814: Generated java code fails on variables with a TLD name like 'org'\n", "org.apache.avro.mapred.Pair.Pair(Integer,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.hasSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.MapSchema.getValueType()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testPrimitiveArray()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Json.writeObject(Object,Encoder)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.writeDouble(double)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Protocol.parseDoc(JsonNode)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withMetadata(Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testWriteDecimalBytes()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BaseDecoder.decode(byte,D)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.thrift.test.add_args.setNum1IsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.Parser.pushProduction(Symbol)": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeInt(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaPairCompatibility.getWriter()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Date.Date()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericStringTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.GenericDatumWriter.writeFixed(Schema,Object,ValueWriter)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ReusableByteBufferInputStream.read(byte,int,int)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.thrift.test.AsyncProcessor.onComplete(Void)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingValueWriter.ensure(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.sync(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.serverSendResponse(RPCContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.toString(Names)": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferOutputStream.write(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getReaderSubset()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.ipc.jetty.TestStatsPluginAndServlet.respond(Message,Object)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.SameMapSignature.setMap2(HashMap)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferInputStream.read(byte,int,int)": "AVRO-3.  Fix ValueReader to throw an exception at EOF.  Contributed by Pat Hunt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764104 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.SingleBucketSegmenter.segment(Float)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Player.getClassSchema()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.addToListField(int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.Encoder.writeString(CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.OptionalCompletion(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.setFieldValue(_Fields,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.setMap4(TreeMap)": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.io.TestBlockingIO.S(long,boolean)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeFixed(byte)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parseMessages(JsonNode)": "Update Jackson to 2.9.7.  This changes a LOT of API's due to Jackson's package rename, but for the most part it's search/replace type changes\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testUnionResolutionFirstStructureMatch3d()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Processor.getResult(I,ping_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanAggregation.testInvalidSpanCompletion()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.RecursingResponder.respond(Message,Object)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Field(String,Schema,String,JsonNode,boolean,Order)": "[AVRO-2369] Add a way to specify a null default for unions with a null.\n", "org.apache.avro.Schema.setFields(Map)": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.timestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.tool.RpcReceiveTool.respond(Message,Object)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setDouble(double)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestJsonDecoder.testFloat()": "AVRO-1099. Java: Fix JsonDecoder to permit floats and doubles to be read from JSON values without decimal points, and for ints and longs to be read from JSON values with decimal points.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1347779 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeString(Utf8)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooArrayFieldBuilder()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.stats.Histogram.getSegmenter()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_resultTupleScheme.write(org,add_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.FieldAccessUnsafe.getAccessor(Field)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.UnionSchema.UnionSchema(List)": "AVRO-361. Specific Compiler fails to handle union with two fixed branches\n(Scott Carey via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.nextKeyValue()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetFooOrBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.get(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.visit(Schema,SchemaVisitor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransportCodec.decode(ChannelHandlerContext,Channel,ChannelBuffer)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaBuilder.orderAscending()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.getUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.SyncableFileOutputStream.SyncableFileOutputStream(String)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testEOFFixed()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.setXIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.clientReceiveResponse(RPCContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableOutput.ExternalizableOutput(ObjectOutput)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RecordDefault.recordDefault(GenericRecord)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.writeObject(java)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFingerprintInternationalization.testCanonicalization()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.DataFileInteropTest.testGeneratedSpecific()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.JsonDecoder.getTokenLocation()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.io.FooBarSpecificRecordTest.genSingleRecord(Random)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.setup(Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificData.hashCode(Object,Schema)": "AVRO-182.  Fix Java's generic and specfic implementations of equals() and hashCode() to be consistent with compareTo().\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835070 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.fromByteBuffer(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.skipBytes()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.defaultValue(Field)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.trevni.ArrayColumnOutputBuffer.ArrayColumnOutputBuffer(ColumnFileWriter,ColumnMetaData)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.setCreateOptionalGetters(boolean)": "Squashed commit of the following:\n\ncommit 6a919437bff0977926b33cd56165994b22fbdf74\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Fri Nov 25 10:31:40 2016 +0100\n\n    AVRO-1961: Extra flag to replace the regular getters with getters that return an Optional\n\ncommit 91d58b5dba7562240a84f6885037f9c74dc973e6\nAuthor: Niels Basjes <nbasjes@bol.com>\nDate:   Tue Nov 22 17:23:18 2016 +0100\n\n    AVRO-1961: Java: Generate getters that return a Java 8 Optional.\n\nCloses #162\n", "org.apache.avro.TestProtocolGeneric.testError()": "AVRO-573.  Java: Fix various bugs with undeclared RPC exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980187 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Terminal(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.FieldBuilderBase.unionFixed(String,Schema,byte,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.newBuilder()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseInputStream.AvroResponseInputStream(Object,Protocol)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.tool.DataFileReadTool.getShortDescription()": "Add four new avroj commands for converting data between JSON and binary encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894740 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.getResult()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.InputBuffer(Input,long)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.initializeServer(Responder)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.reflect.FieldAccessReflect.read(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.Array.clear()": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.encodeFloat(float,byte,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePluginConfiguration.equals(Object)": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestEndToEndTracing.respond(Message,Object)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMapper.map(AvroWrapper,NullWritable,OutputCollector,Reporter)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.collect(Object)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.FixedSchema(Name,String,int)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.SchemaBuilder.optionalMap(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.floorSecond(long)": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.getThriftFieldId()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.getEnumMax(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.UnsafeLongField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Action(Schema,Schema,GenericData,Type)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.add(int,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.Encoder.writeFixed(byte)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getMaxTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(String,Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.avro.RandomData.remove()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Integer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkBinaryJson(String)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.getResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestValidatingIO.testSkip_0_blocking(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.Builder(BuilderParent)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setStringField(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.setTimestampMicros(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.TestSchemaBuilder.testUnion()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.open(InputStream)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.transceive(List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Foo.getResult(I,zip_args)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.requestHandshakeMeta()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.codegentest.CustomDecimalConversion.getLogicalTypeName()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.data.TestTimeConversions.testLossyTimestampMicrosConversion()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericResolving.newReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLongAsFloatDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.io.ValidatingDecoder.skipFixed()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setEnum(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FieldAssembler.nullableDouble(String,double)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.WordCountUtil.validateSortedFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TimestampMicrosConversion.getRecommendedSchema()": "AVRO-1957: TimeConversions do not implement getRecommendedSchema()\n\nThis closes #154\n\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.parsing.Symbol.error(String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.getOneArgConstructorAsSupplier(Class,Class,V)": "AVRO-2725: Use one ReflectionUtil for utilities. (#797)\n\n* AVRO-2725: Use one ReflectionUtil for utilities.\r\n\r\n* Apply spotless.\r\n", "org.apache.avro.mapred.WordCountUtil.validateCountsFile()": "AVRO-586.  Java: Permit specification of MapReduce output file metadata properties.  Contributed by Ken Krugler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984625 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalInt(String,int)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.optionalLong(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.assertAllMessagesReceived()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.AsyncProcessor.zip()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.ensureFooArrayIsMutable()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clearInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.NamedSchema.NamedSchema(Type,Name)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testValidatingEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getAccessorsFor(Schema)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.writeValue(Object)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getArrayAsCollection(Object)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.EnumAdjust(Schema,Schema,GenericData,int,Object)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.Protocol.createMessage(String,String,JsonProperties,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testMultiJsonToBinary()": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testDecimalRecordMappingUnion()": "Revert r1584605. AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1586265 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.arrayError(Class,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestFixed.testFixedDefaultValueDrop()": "[merge] marge with latest changes", "org.apache.avro.protobuf.M.internalGetFieldAccessorTable()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.TwoWayMessage(String,String,Schema,Schema,Schema)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TextConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addSyms(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroJob.setInputReflect(JobConf)": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Void,ByteBuffer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FieldAssembler.requiredInt(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.readInternal(Decoder)": "AVRO-316. Optiminzing inner loop functions of Avro io\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899720 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_call.write_args(org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.setValidateDefaults(boolean)": "AVRO-1449. Java: Optionally validate default values while reading schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564571 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Float,Double)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.fromAvroToJson(byte,Schema,boolean)": "Add some tests to validate the include namespace functionality\n", "org.apache.avro.thrift.test.AsyncProcessor.getResultHandler(AsyncFrameBuffer,int)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetByteOptionalField()": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.writeFile(File,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestRpcProtocolTool.testRpcProtocol()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.getListField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.toString()": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.clearLastName()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.StringDefault.StringDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testReportCorruptBlock()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.newDecoder(InputStream)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.OutputStreamSink.innerWrite(ByteBuffer)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newEncoder(OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestStaticServlet.testEmptyQueryString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ProtocolTask.execute()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithList.setId(int)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooArrayBuilder(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValidatingEncoder.writeArrayEnd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isDouble(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.calculateCompatibility(Schema,Schema,Deque)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(Schema,Schema,GenericData)": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestProtocolHttp.createTransceiver()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeCharField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.readResponse(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericRecordBuilder.set(Field,int,Object)": "AVRO-951. Java: Fix generated code to not conflict with fields named 'data'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setMapOutputSpecific(JobConf,Schema)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Terminal.Terminal(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getIntArrayCount()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.parseFrom(com,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.ObjectReader.setSchema(Schema)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesBuilder.endBytes()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFooArrayFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.Symbol.resolve(Symbol,Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcUtils.getServiceName(Class)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.clearF64()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ReflectDatumReader.readJavaArray(Object,Schema,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.seq(Symbol[])": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Reader.getValueSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeBytes(byte,int,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.reduce(KeyRecord,Iterable,AvroCollector,Reporter)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.getSchema()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.ExternalizableInput.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.newBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.initializeTransceiver(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericLogicalTypes.testReadDecimalBytes()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.isRecord(Object)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.testRequestResponse()": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.toJsonNode(Object)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.TestThrift.testOptionals()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.TestColumnFile.testSeekLongs()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.unionRecord(String,Schema,GenericRecord,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testHasGeneratedJavaClass()": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.TestBulkData.read()": "AVRO-1214 Use void instead of Void for RPC methods\n\n- one-way message use void but two-ways messages might use java.lang.Void\n", "org.apache.avro.NamedBuilder.names()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.PropBuilder.addPropsTo(T)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBytes.InputBytes(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setUint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.FieldTest.getSpecificData()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Builder.getInt32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.GenericOneTimeDecoderUse.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CatTool.hasNextInput()": "AVRO-1307. Java: Add 'cat' tool to append and sample data files.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.getNumber()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyClientAvroHandler.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readBytes(ByteBuffer)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.getData()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.testSendAfterChannelClose()": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Incompatibility.equals(Object)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.hadoop.file.Writer.getKeySchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readString(Object,Schema,Schema,Decoder)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.EnumSymbol(Schema,Object)": "AVRO-997. Java: For enum values, no longer sometimes permit any Object whose toString() names an enum symbol, but rather always require use of distinct enum types.  Contributed by Sean Busbey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readMap(Object,Schema,Schema,ValueReader)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyComparator.compare(byte,int,int,byte,int,int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testHashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.OrderPlugin.serverReceiveRequest(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNull()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryData.Buffer()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.SameMapSignature.getMap3()": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.hadoop.file.Options.getPath()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.LineCountMapper.map(LongWritable,Text,Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.test.generic.GenericWithPromotionTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.generic.GenericDatumReader.readBytes(Object,Decoder)": "AVRO-790 Java: GenericDatumReader can fail when reusing objects with unions containing 'bytes' fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1094812 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Incompatibility.getReaderFragment()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestSchemaNormalization.altExtend(long,int,long,byte)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardCodec.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.Name(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.fields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.createDatumWriter(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.readRequest(Schema,Decoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.getFiles(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.buildDefaultBootstrapOptions(Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.compare(Object,Object,Schema)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.UnchangedUnionTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPrivateFieldVisibility()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.ipc.TestNettyServerWithCompression.getPipeline()": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.LongTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testEnum()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.copyBuilder()": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValueReader.testEOF_double()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.conversionInstance(Schema)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.Schema.equalNames(NamedSchema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroKeyValue.hasNext()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordReader.nextKeyValue()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.stats.Histogram.add(T)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.equals(Object)": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.handleResult(CharSequence)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.value()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericLogicalTypes.testReadLocalTimestampMicros()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ipc.trace.FileSpanStorage.DiskWriterThread(BlockingQueue,TreeMap,boolean,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericLogicalTypes.testCopyUuidRaw()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_result.readObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.compareTo(Stringy)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversions.getLogicalTypeName()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getWrapper(Schema)": "AVRO-2700: Change Java Collection Usage (#780)\n\n* AVRO-2700: Change Java Collection Usage\r\n\r\n* Apply spotless\r\n\r\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.thrift.ThriftDatumWriter.ThriftDatumWriter(ThriftData)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.testWrite()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversion.fromInt(Integer,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.ReuseByteReader.ReuseByteReader(ByteBufferInputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestCustomCodec.testCustomCodec()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.ReflectRequestor.writeRequest(Schema,Object,Encoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkParseError(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericNestedTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Protocol.getProps()": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.flush()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testFSync(boolean)": "AVRO-1985: Unreleased resources\n\nThis closes #177\n", "org.apache.avro.test.reflect.ReflectNestedObjectArrayTest.populateRecordArray(Random,int)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Builder.getFooArrayList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createBytesPromotingToStringReader(Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.TestLogicalType.testDecimalFailsWithNegativeScale()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolSpecific.testHello()": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnator.addArrayColumn(String,Schema,ColumnMetaData)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.LongTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.BogusTrustManager.getAcceptedIssuers()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.getMapOutputSchema(Configuration)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testDirConcat()": "[merge] marge with latest changes", "org.apache.avro.EnumSchema.EnumSchema(Name,String,List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapSchema.MapSchema(Schema,Schema)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.M(com,com)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestLogicalType.assertEqualsFalse(String,Object,Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getDefaultInstance()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.hashCode()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestBulkData.stopServer()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.Transceiver.isConnected()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.TextConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.BlockDescriptor.read(InputBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.setReserved(String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.configureSource(int,ByteSource)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.useCustomCoders()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransportCodec.NettyDataPack(int,List)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaUnbox(Schema,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.BaseFieldTypeBuilder.doubleBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.Field(String,Schema,String,JsonNode)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.mapreduce.RecordWriterWithCounter.close(TaskAttemptContext)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.MapTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.netty.NettyServer.getPipeline()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleResult(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolSpecific.getExpectedHandshakeCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.LongTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReadUUIDArray()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataBlock.compressUsing(Codec)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_resultStandardScheme.read(org,ping_result)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonEncoder.configure(OutputStream)": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.handleResult(TestRecord)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.hadoop.io.Options.getCompressionCodec()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.basic.TestStateDecode.mkSchema(String)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.SaslSocketTransceiver.transceive(List)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMillisConversion.fromInt(Integer,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.reflect.NullableBytesTest.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeFloatField.UnsafeFloatField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestLogicalType.testDecimalDefaultScale()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.UnionFieldTypeBuilder.bytesType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeObjectField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.map(AvroKey,NullWritable,Context)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.Accessor.setAccessor(FieldAccessor)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.io.JsonEncoder.writeRootValueSeparator(JsonGenerator)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.setItemCount(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.Builder()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.protobuf.noopt.Test.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.getIntArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.readString(Utf8)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.getInflater()": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.RawMessageDecoder.RawMessageDecoder(GenericData,Schema)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.test.reflect.ReflectIntArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.test.basic.ArrayTest.decode(TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.ThriftData.isRecord(Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(DoubleWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Fixed.Fixed(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BadHeaderException.BadHeaderException(String)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.ipc.SaslSocketTransceiver.readBuffers()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Foo.setDouble(double)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.setup(Context)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.setRepeatedField(com,int,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalType.addToSchema(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.getCurrentKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.getRecommendedSchema()": "AVRO-1957: TimeConversions do not implement getRecommendedSchema()\n\nThis closes #154\n\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.perf.test.basic.ArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.test.basic.LongTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.netty.NettyFrameDecoder.decodePackHeader(ChannelHandlerContext,Channel,ChannelBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.Perf.FloatTest(String,String)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setDataModelClass(Job,Class)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BytesTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.BooleanWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileRepairTool.reportOnly(String,PrintStream,PrintStream)": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.toLong(DateTime,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyValueRecordWriter.testSyncableWriteRecords()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Builder.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.clientReconnectAfterServerRestart()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_args.add_args(add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.Pair.Pair(K,Schema,V,Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.initializeServer(Responder)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectBigRecordTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Test.parseDelimitedFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.NettyTransceiver.getRemoteName()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.protobuf.Builder.setFooArray(int,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.ColumnValues.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificRecordBase.readExternal(ObjectInput)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Field.equals(Object)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testCallbackInterface()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.LocalTransceiver.writeBuffers(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getEncodedValue(Field)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.thrift.test.Foo.read(org,zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.M(Builder)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.getValueDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificCompiler.compileProtocol(File,File)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.FloatHistogram.add(Float)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.clientSendRequest(RPCContext)": "AVRO-587. Add Charts and Templating to Stats View\n(Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980173 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferedBinaryEncoder.writeByte(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.RandomData.next()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.ensureFooArrayIsMutable()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.equals(Object)": "AVRO-1982: Fix static code analyzer findings. Contributed by Zoltan Ivanfi.\n\nFixed several possible null pointer exceptions and unchecked casts.\nThese triggered security and code health warnings in our static code\nanalyzer tools.\n\nCloses #173.\n\nSigned-off-by: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.data.RecordBuilderBase.data()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.readArrayStart()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.InduceSchemaTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-236.  Add protocol support to avroj induce tool.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@883884 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.prop(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setUint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.fixedDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.resolveExpected(Schema,Schema)": "AVRO-28.  Add Python support for default values.  Contributed by sharad.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@790264 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftDatumReader.readInt(Object,Schema,Decoder)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyDataPack.getSerial()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RandomData.randomUtf8(Random,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherData.buffer(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNestedNonNullNamespace2()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.M.getSerializedSize()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.testSeekStrings()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.zip_argsTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readRecord(Object,Schema,Decoder)": "AVRO-29. Reverting changes to GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788481 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setInt32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Schema.space()": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.initializeServer(Responder)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.BlockedValue.BlockedValue(Schema,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testMultipleAliasAnnotationsOnClass()": "AVRO-2421 Allow multiple @AvroAliases annotations on classes and fields (#544)\n\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getDatumReader(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.testSkip_1(String,String,String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Protocol.Message(String,Schema,Schema,Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputStreamByteSource.trySkipBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadEqualsZeroCount()": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.TestNamespaceSpecific.testStopServer()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.collect(String,Reporter,Object)": "AVRO-1266. Java: Fix mapred.AvroMultipleOutputs to support multiple different schemas.  Contributed by Ashish Nagavaram.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1467543 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.LegacyBinaryEncoder.writeEnum(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessReflect.supportsIO()": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testFloat()": "AVRO-972. Java: Add support for Infinity and NaN as default values for float and double.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212611 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.FloatWritableConverter.convert(FloatWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.parse(InputStream)": "AVRO-971. Java: Permit IDL imports from classpath in Maven.  Contributed by Victor Chau.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242140 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasUint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.AsyncProcessor(I)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.hashCode()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.hasSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearIntArray()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.printWithTimingRecurse(List,int)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.init(Decoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.isClosed()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Util.openSeekableFromFS(String)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Test.clearFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.V1MessageEncoder.getWriteHeader(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.BasicState.newDecoder(byte)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.M.mergeFrom(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSequenceFile.RecordCompressWriter(Writer)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.getResolver(Schema,Schema)": "AVRO-743 Java: Performance Regression and memory pressure with GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemaSingleFile()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadDefaultCount()": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.io.parsing.Alternative.getLabel(int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.MapSchema(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.clearUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericResponder.GenericResponder(Protocol)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testPrimitiveArray(Class,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.GenTest.writeFile(File,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.generateSync()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.multiplefiles.M.internalGetValueMap()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.GenericTest.getReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.put(int,java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateGetBuilderMethod(Schema,Field)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toInt(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.populateFloatArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Field.defaultValueEquals(JsonNode)": "Update Jackson to 2.9.7.  This changes a LOT of API's due to Jackson's package rename, but for the most part it's search/replace type changes\n", "org.apache.avro.io.RecordWithOutOfOrder.RecordWithOutOfOrder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RepeaterTest.RepeaterTest(String)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setI32(int)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.hadoop.io.Writer.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setUint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordWriterBase.filterMetadata(Configuration)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.compiler.schema.CloningVisitor.CloningVisitor(Schema)": "Added more tests and fixed a couple of bugs. Also formatted the code\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(ReflectData)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestTraceCollection.testRecursingTrace()": "AVRO-643. Java: Fix intermittent failures in TestTraceCollection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileRepairTool.recoverAll(String,String,PrintStream,PrintStream)": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.name(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestTimeConversions.testDynamicSchemaWithDateTimeConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.RecordBuilder.updateAndGetFields()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.BufferedFileOutputStream.PositionFilter(OutputStream)": "AVRO-82.  Add checkstyle to Java compilation.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798646 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.DataFileWriter(Schema,OutputStream,DatumWriter)": "AVRO-134. Update data file format specification to include reserved metadata keys 'codec' and 'sync'.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@822827 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.TestIdl.writeTests()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroUtf8InputFormat.configure(JobConf)": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredDouble(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.join()": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.clearBuf()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.getNumber()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.CallbackToResponseStreamObserverAdpater.onNext(Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit2()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.Json.read(Decoder)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.TestParsingTable.checkProduction(int,ParsingTable,int,BitSet,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.intBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.compiler.specific.SpecificCompiler.SpecificCompiler(Protocol)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.util.Utf8.getLength()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.genavro.TestGenAvro.loadTests()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testManglingForProtocols()": "AVRO-221.  Mangle Java reserved words in generated code to avoid name conflicts.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882689 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.add_args(int,int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificBuilderTree.copyBuilderWithNullables()": "AVRO-1966: Java: Fix NPE When copying builder with nullable record.\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypesInMapOfRecords()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.SchemaBuilder.unionType(String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_argsTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.testCompileSchemaFileAndDirectory()": "AVRO-1551. Java: Add an output encoding option to the compiler.  Contributed by Keegan Witt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1627083 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Options.withValueSchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testUnionWithCompatibleElements()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.Avro14SpecificCompiler.compile(Schema)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.genSourceData()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeArrayEnd()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.FloatHistogram.getMean()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.maybeForceBuilderInitialization()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.SpecificCompiler.javaUnbox(Schema)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.mapred.WordCountUtil.setMeta(JobConf)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkJson(Schema,Object,DatumWriter,DatumReader)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.checkRead(Schema)": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.getTransformingStringReader(String,FieldReader)": "AVRO-2725: Use one ReflectionUtil for utilities. (#797)\n\n* AVRO-2725: Use one ReflectionUtil for utilities.\r\n\r\n* Apply spotless.\r\n", "org.apache.avro.ipc.netty.CompressionChannelFactory.CompressionChannelFactory()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.util.SimpleCases.cases()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.Array.remove(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.getLogicalType()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountGeneric.testAvroUtf8InputFormat()": "AVRO-577. Java: add MapReduce InputFormat for plain-text files.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@955064 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPojoWithOptionalCreatedWhenOptionTurnedOn()": "[AVRO-1577] Update couple more methods to use try-with-resources\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.LegacyBinaryEncoder.writeInt(int)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCompression.CompressionChannelFactory()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.io.BinaryDecoder.available()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Test.isSetStringField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputScanner.InputScanner(char)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalEnum(String,Schema,CharSequence)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestIDLProtocolMojo.testSetCompilerVelocityAdditionalTools()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.Client.recv_add()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.TestBinaryMessageEncoding.testCompatibleReadWithSchemaFromLookup()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.specific.SpecificResponder.getDatumWriter(Schema)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordWriter.write(AvroKey,NullWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTaskRunner.abort()": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withFileSystem(FileSystem)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.data()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testGetUsedConversionClassesForNullableLogicalTypes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.Histogram.getHistogram()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroDatumConverterFactory.testConvertLongWritable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversion.getLogicalTypeName()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Repeater.flatten(Map,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryEncoder.writeFixed(byte,int,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setMapOutputValueSchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileWriter.getColumnCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getTs()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(Protocol,Object)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.create(Completion,NameContext,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.SpecificCompiler.addStringType(Schema,Map)": "AVRO-2548: Handle logicalTypes with stringType (#655)\n\nWhen using 'stringType', logical types whose\r\nAvro type was string would not have that conversion\r\napplied.", "org.apache.avro.io.ResolvingTest.writeInternal(Encoder)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.trace.InMemorySpanStorage.getAllSpans()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.toBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.SmallLongTest.readInternal(Decoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.length()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getResult()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.FooBarSpecificRecord.clearRelatedids()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.IntTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.test.generic.GenericNestedFakeTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Test.hasSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.getData()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileWriter.close()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.idl.GenTest.write()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testJavaTypeWithDateTimeTypes()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.util.TestCaseFinder.testUnterminatedHeredoc()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.check(String,String,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.computeHash()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.ReflectNestedObjectArrayTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.BinaryEncoder(OutputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAnnotationAvroIgnore()": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.readDouble()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ErrorStandardScheme.write(org,Error)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRecordBase.getConverion(String)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.message.BaseDecoder.decode(ByteBuffer)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.mapred.tether.TetherKeySerialization.getDeserializer(Class)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.clientStartConnect(RPCContext)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getTextLength()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.mapred.AvroJob.newDataModelInstance(Class,Configuration)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileWriteTool.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.ack()": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.A(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.getSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.getLim()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.data1()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolSpecific.testClient()": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestHadoopCodecFactory.testHadoopCodecFactorySnappy()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testReaderWriterDecodingCompatibility()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.JodaTimeConversions.toLong(DateTime,Schema,LogicalType)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.reflect.R7.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getText()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.compiler.idl.GenTest.run()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.getPort()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.tool.DataFileRepairTool.printInfo(PrintStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.writeArrayEnd()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.cleanUp()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.noopt.Test.hasInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.IdlTool.getShortDescription()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.iterator()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Avro14SpecificCompiler.errors(Schema)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "avro.examples.baseball.FieldVisibilityTest.hasFavoriteNumber()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.noopt.Builder.hasEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.Foo.hasSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnMetaData.getType()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.getEnumSchema(Object)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyFrameEncoder.getPackHeader(NettyDataPack)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.reflect.ReflectRequestor.getClient(Class,Transceiver)": "AVRO-2117: Cleanup Java - Fix spelling errors\n", "org.apache.avro.protobuf.noopt.Test.getInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestCompare.testLong()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.RecordBuilder.RecordBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getParanamer()": "AVRO-2192: Remove paranamer dependency from Avro (#400)\n\n", "org.apache.avro.TestSchemaValidation.testAllPriorCompatible()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceIterable.iterator()": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.get()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.M.mergeFrom(org)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.appendEncoded(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordReader.getCurrentKey()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooRecord.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.input(ByteBuffer,long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.ProtobufDatumWriter.ProtobufDatumWriter(Schema)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredLong(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.write(byte,int,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.getPackHeader(NettyDataPack)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testStringableMapKeys()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.testLockedArrayList9()": "AVRO-261. Allow Schemas to be immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@907913 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.depth()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Parser.getValidateDefaults()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.getProgress()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.StringTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setSyms(int,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.generic.GenericNestedTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.trace.TraceNode.getProcessTimeString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcReceiveTool.getName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.FieldBuilder(FieldBuilderBase,String,Schema)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimestampConversion.fromLong(Long,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.size()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.NamesMapImpl.map(NamesRecord,AvroCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.netty.BogusTrustManager.getAcceptedIssuers()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.TestGenericRecordBuilder.testGenericBuilder()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.codegentest.TestNestedLogicalTypes.testNullableLogicalTypeInRecordInMap()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.ipc.TestNettyServer.verifyResponse(CharSequence)": "Avro-815. Netty Transceiver fails processing one-way messages\n\nImplemented writeBuffers call in the NettyTranceiver to send a NettyDataPack similar to the request/response call. Added one-way \nmessage definition to the test mail.avpr protocol file and updated unit test to verify the one-way behavior.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1099257 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.doc(StringBuilder,int,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalString(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.getUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.idl.TestIdl.runTests()": "AVRO-372.  Rename GenAvro to be Avro IDL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@956103 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testUnionWithMap()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestRpcPluginOrdering.clientFinishConnect(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.test_compatible()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.initializeConnections()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Protocol.parseDocNode(JsonNode)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.ByteWritableConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DecodingTestCase.getDecodedDatum()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.tearDown()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.AvroAsTextRecordReader.next(Text,Text)": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.withPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.hasTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.SchemaBuilder.floatBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.equals(java)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.noopt.Test.clearFooArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaCompatibility.toString()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TwoWayMessage.isOneWay()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NullableCompletionWrapper.wrap(Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchema.checkDirectBinary(Schema,Object,DatumWriter,DatumReader)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.MapTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.endInt()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.getPrefix(Class)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.NettyServer(Responder,InetSocketAddress,ChannelFactory,ChannelPipelineFactory,ExecutionHandler)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add.getEmptyArgsInstance()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToFloatDoubleUnionSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.TestLogicalType.testUnknownFromJsonNode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.addFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestTemplatedCompilerFidelity.writeToFile(File,String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.equals(zip_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.TestResolvingIO.testOnce(String,String,String,String,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter()": "AVRO-717. Java: Fix SpecificDatumWriter default constructor to correctly reference SpecificData.  Contributed by Joe Crobak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1055215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificRecordBuilder.testBuilderPerformanceWithDefaultValues()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Builder.getSymsList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroMapper.map(IN,AvroCollector,Reporter)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.intWrittenWithUnionSchemaIsReadableByFloatSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.thrift.test.Test.unsetDoubleField()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestSequenceFileReader.map(LongWritable,Text,OutputCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.ensureFooArrayIsMutable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.TestValidatingIO.testSkip_1(String,String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testNestedNullNamespace()": "AVRO-1295. Java: Fix printing of a non-null namespace within a null namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1468677 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericWithOutOfOrderTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.TestNettyTransceiverWhenServerStops.run()": "AVRO-1154. Java: Fix NettyTransciever to not hang when the server is stopped.  Contributed by Bruno Dumon & Karel Vervaeke.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1384514 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.Test(String,String)": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getConversionTo(Class,LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toDouble(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.createSchemaDefaultValue(Type,Field,Schema)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.codegentest.TestCustomConversion.testNonNullValues()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearB()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestSchemaBuilder.fields(Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.addNamedOutput(JobConf,String,boolean,Class,Schema)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflectLogicalTypes.fromSchema(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testDifferentMetadataFail()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.TestNettyServerWithSSL.send(Message)": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.RenderableMessage.getname()": "AVRO-587. Add Charts and Templating to Stats View\n(Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@980173 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjectionNewMethodsOne(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Builder.hasRelatedids()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.setCollectionClass(Schema,Class)": "AVRO-241.  In Java, add a union annotation for reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@887439 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.clearTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.protobuf.Builder.getUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.read(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.randomString(Random)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.idl.TestSchemaResolver.testResolving()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.setSint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.clearIntArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.TestIOBuffers.testSkipFixed32()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.multiplefiles.Builder.ensureFooArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.RecordTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadLong()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.checkBinary(Schema,Object)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetListField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.error()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.generic.TestGenericLogicalTypes.addLogicalTypes()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.reflect.ClassAccessorData.ClassAccessorData(Class)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGenericMeta.testStartServer()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.getNamedOutputFormatClass(JobConf,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.addTrace(Trace)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.testEsc()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.namespaceDefinitionOnFieldAliasMustThrowException()": "AVRO-1971: Allow alias annotation on fields\n\nThis closes #175\n", "org.apache.avro.mapred.Pair.Pair(Utf8,Double)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Company2.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.CodecFactory.fromString(String)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getClient(org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.addAlias(String)": "AVRO-634.  IDL: Add support for aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@996649 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.validateCountsFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericRecordBuilder.get(int)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getParameterNames(Method)": "AVRO-2192: Remove paranamer dependency from Avro (#400)\n\n", "org.apache.avro.ipc.TestNettyServerWithSSL.testRequestResponse()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearFooArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.TestStopwatch.testTwiceStarted()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.hashCode()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.RecordWithUUID.hashCode()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LongSchema.toString()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getIntArrayList()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.reflect.ReflectResponder.ReflectResponder(Protocol,Object,ReflectData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.parseDelimitedFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.Symbol.ImplicitAction()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNamesFailRedefined()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumWriter.write(Schema,Object,Encoder)": "AVRO-2514:Making Avro serialization error message more actionable with... (#685)\n\n* AVRO-2514:Making Avro serialization error message more actionable with field name\r\n\r\n* Update GenericDatumWriter.java\r\n\r\nUpdate to runtime exception\r\n\r\n* Update ReflectDatumWriter.java\r\n\r\n* AVRO-2514:Update GennericDatumWriter method", "org.apache.avro.protobuf.noopt.Foo.hasSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setF32(float)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.LogicalTypes.TimeMillis()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setSint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyTransceiver.close()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.schema()": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.Builder()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.multiplefiles.Builder.getTimestampFieldBuilder()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Foo.getDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.createWriter(Writer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.readMapStart()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.DelegatingInputFormat.getSplits(JobConf,int)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.RandomData.RandomData(Schema,int)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestSpanAggregation.testTraceFormation1()": "AVRO-962. Java: Fix Maven plugin to support string type override.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1210703 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.R2.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.NettyTransceiverWhenFailsToConnect.testNettyTransceiverReleasesNettyChannelOnFailingToConnect()": "AVRO-1407: Java: Fix infinite loop on slow connect in NettyTransceiver.  Contributed by Gareth Davis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641894 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.TestProtocolMojo.testProtocolMojo()": "AVRO-1207. Java: Add tests for Maven plugins.  Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1411406 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.contains(Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.updateAndGetFields()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.specific.SpecificResponder.writeResponse(Schema,Object,Encoder)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setS(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.Decoders.clear()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.tool.TestCreateRandomFileTool.before()": "AVRO-1990: CreateRandomFileTool should validate arguments\n\nThis closes #226\n", "org.apache.avro.Conversions.getRecommendedSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.UnsafeIntField.read(Object,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.clearName()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.Message.toString()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit13()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.GenericOneTimeUse.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestEvolvedSchema.setUp()": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.create(Schema,GenericData,CodecFactory,OutputStream)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.hasUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.Text.toString()": "AVRO-669. Java: Make MapReduce to work with reflection-based data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1053749 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.DataFileGetMetaTool.escapeKey(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Root.makeProduction(Symbol)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificLogicalTypes.read(Schema,File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.CallFuture.releaseSemphore()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeFixed32(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.NonCopyingByteArrayOutputStream.getByteArrayAsByteBuffer()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServer.join()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.SpecificRequestor(Class,Transceiver,ReflectData)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.R10(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.Processor(I,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.NamedSchema.getFullName()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "avro.examples.baseball.Builder.hasTimestamp()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.ValidatingEncoder.startItem()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Decimal.Decimal(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFooArrayBuilder(int)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testLong()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(Responder,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.ResolvingTable.allocWriterUnionAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectRecordTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.BinaryEncoder.encodeLong(long,byte,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ClassUtils.forName(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestResolvingTable.checkSymbol(int,ResolvingTable,int,BitSet,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo2.setName(String)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_args.getThriftFieldId()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.addConnector(Connector)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.SpecificCompiler.run(InputStream,PrintStream,PrintStream,List)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.createMessage(String,String,Schema)": "AVRO-2700: Change Java Collection Usage (#780)\n\n* AVRO-2700: Change Java Collection Usage\r\n\r\n* Apply spotless\r\n\r\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.BaseFieldTypeBuilder.booleanType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result._Fields(short,String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.mangle(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.line(int,String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.Foo(com,com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.ipc.stats.StatsServlet.renderMethod(Message)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.parseDelimitedFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.HadoopMapper.MapCollector(OutputCollector)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.assureCurrentWriter()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.computeValue(Class)": "Remove use of guava by utilizing java8 lambdas and collections\n", "org.apache.avro.io.BinaryEncoder.writeFloat(float)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection1(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.generic.GenericDatumWriter.isArray(Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearOneof(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.readFixed(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.write(int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.Perf.Rec1(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeString.hashCode()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.Schema.add(E)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordReferenceBuilder.build()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.intBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.Options.withConfiguration(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesSchema.BytesSchema()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.compareTo(zip_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.compareTo(Array)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.type(Schema)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnOutputBuffer.size()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.StatCountMapper.map(AvroKey,NullWritable,Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.SchemaBuilder.NestedCompletion(PropBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Tester.checkUnsafe()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyDataPack.getSerial()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.SequenceFileReader.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.internal.Accessor.addProp(JsonProperties,String,JsonNode)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.mapreduce.AvroOutputFormatBase.getAvroFileOutputStream(TaskAttemptContext)": "AVRO-1106. Java: Add AvroMultipleOutputs for newer mapreduce API.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1349492 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageDecoder.getDecoder(long)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.EnumDefault.EnumDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.setItemCount(long)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.getSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Builder.ensureFooArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Builder.setFixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory,Long)": "AVRO-943. Java: Fix an intermittent deadlock in TestNettyServerWithCallbacks.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1196217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.compareTo(Error)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NameContext.NameContext(HashMap,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.UnchangedUnionTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestImpl.error()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RPCMetaTestPlugin.serverConnecting(RPCContext)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.test.generic.GenericStringTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.Foo.setFixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestSortedKeyValueFile.hashCode()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.mapNext()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.codec.CustomCodec.compress(ByteBuffer)": "AVRO-970. Java: Make Codec API public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getFixedSize()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNestedFake.readInternal(Decoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testAliasesSelfReferential()": "AVRO-2383: NPE during Schema.applyAliases (#510)\n\n", "org.apache.trevni.avro.MapImpl.map(String,AvroCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.BlockingBinaryEncoder.check()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroInputStream.close()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.Test.hasUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getIndexNamed(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.RandomData.generate(Schema,Random,int)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.LengthLimitedInputStream.available()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestLogicalType.testDecimalScaleBoundedByPrecision()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.StringDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.read(Object,Schema,ResolvingDecoder)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.DoubleTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapreduce.TestAvroKeyValueRecordReader.testReadRecords()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericLogicalTypes.testDecimalToFromFixed()": "AVRO-2592: Avoid consuming ByteBuffer for decimal.\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.Symbol.root(Symbol[])": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedLargeFloatArrayTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setResponseSessionMeta(Map)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibilityResult.getReaderSubset()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.thrift.test.FooOrBar.FooOrBar(_Fields,Object)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ArrayAccessor.readArray(Object,Class,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.toBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.SnappyCodec.decompress(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.protobuf.Foo.mergeFrom(org)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.Protocol.createMessage(String,String,Map,Schema,Schema,Schema)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectRequestor.readResponse(Schema,Decoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Buffer.Buffer()": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsServer.stop()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.Foo.equals(ping_args)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.protobuf.Foo.clearFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.getS()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.DecoderFactory.createBinaryDecoder(InputStream,BinaryDecoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.setRequestCallMeta(Map)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.WordCountUtil.WordCountUtil(String,String)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificData.testSpecificWithinGeneric()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.DecoderFactory.binaryDecoder(byte,BinaryDecoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionBuilder(Completion,NameContext,List)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AnotherSampleRecord.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.generateRepeatData(Encoder,Random,int)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransportCodec.NettyFrameDecoder()": "AVRO-1111. Malformed data can cause OutOfMemoryError in Avro IPC. Contributed by Mike Percy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.checkField(Schema,Schema,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.Builder.setTimeMillis(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.InputStreamByteSource.skipSourceBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.UnionSchema(LockableArrayList)": "AVRO-946. Java: Optimize union resolution when writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197768 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withCompressionCodec(CompressionCodec)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.ResolvingRecordTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.data.Json.write(JsonNode,Encoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.TestInduceMojo.setUp()": "AVRO-1749 Java: Introduce induce Maven plugin goal (#70)\n\n", "org.apache.avro.thrift.test.add.add()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.writeHandshake(ValueWriter)": "AVRO-2.  Optimized Java RPC handshake protocol.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@781125 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.printableTime(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.writeDouble(double)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getSerializedSize()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.Fixed.bytes(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCircularReferences.read(GenericData,Schema,File)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.tupleSchemeReadValue(org,short)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.BlockingSimpleImpl.add(int,int)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.convert(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.addAllFooArray(java)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.file.Options.withCodec(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.SpecificTest.getReader()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.file.BZip2Codec.getName()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectData.validateSchema(Meta)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.TestDecimalConversion.testToFixedScaleError()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.specific.SpecificCompiler.esc(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.clearId()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getMetadata()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getConversionFor(LogicalType)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getI64Field()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.getEncoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingRecord.getEncoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.setProp(String,String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleOutputs.setCountersEnabled(JobConf,boolean)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.convert(FloatWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.intWrittenWithUnionSchemaIsConvertedToDoubleSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.protobuf.Test.clearFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testNull()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CreateRandomFileTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2267 Removed copies of RandomData (#385)\n\nAVRO-2267 Removed copies of RandomData", "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(Schema,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.mapDefault(Map)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createMap(Schema)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.GenericStatsReducer.cleanup(Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.tool.TrevniMetadataTool.getShortDescription()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.TestSpecificCompiler.setUp()": "AVRO-988, AVRO-1209: Add options to make fields in generated classes private and to make generated classes immutable, without setters.  Contributed by Jeff Kolesky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1415407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.HadoopInput.HadoopInput(Path,Configuration)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.withInputPath(Path)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericReaderWithOutOfOrderTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.DatagramServer.run()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.RecordSchema(String,String,Map,boolean)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testGeneratedReflect()": "AVRO-5. Add java versus python RPC interoperability tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@765053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Fixed.Fixed(Schema,byte)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.add(int,int)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.toJson(JsonGenerator)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Transceiver.lockChannel()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldTest.getTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.thrift.test.Client.getClient(org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServer.send(Message)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeDouble(double)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.BZip2Codec.getOutputBuffer(int)": "AVRO-1253. Java: Add support for bzip2 file compression to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446320 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceCollection.getAverageTime(SortedSet)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.ProtocolMojo.getTestIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.setUpServerAndClient(TestService)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.SaslParticipant.evaluate(byte)": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileOutputFormat.getRecordWriter(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.jetty.HttpServer.close()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.parsing.Symbol.skipAction(Symbol)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.InduceSchemaTool.getShortDescription()": "AVRO-236.  Add protocol support to avroj induce tool.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@883884 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.create(Channel,Class)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.reflect.TestReflect.checkStringable(Class,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.initialValue()": "AVRO-12.  Fix recursive schemas so that equals() and hashCode() do not cause stack overflow.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777705 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.OutputStreamSink.innerFlush()": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.FsInput.read(byte,int,int)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getRecordState(Object,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericData.testArrayAddAtLocation()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.SchemaBuilder.optionalDouble(String,double)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.isCancelled()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetI32Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Symbol(Kind,Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.mapred.TestAvroInputFormat.testIgnoreFilesWithoutExtension()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericData.newMap(Object,int)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testReflectedSchemaLocalDateTime()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearI32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferMissingFullHeader()": "AVRO-2265 Remove Guava as a test dependency (#377)\n\n", "org.apache.avro.thrift.test.add_result.equals(add_result)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.reflect.ReflectDatumReader.readBytes(Object,Schema,Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.MailImpl.awaitMessages()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaPairCompatibility.hashCode()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.thrift.test.FooOrBar.foo(String)": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroDatumConverterFactory.AvroDatumConverterFactory(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroOutputFormat.close(Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clearInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReadBoolean.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.TestProtobuf.testMessage()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getDecoder()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.mapred.NamesRecord.NamesRecord(int,CharSequence)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.count(String,String,long)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(Schema,String,JsonNode)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.RawMessageEncoder.encode(D)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeFrom(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.getUnknownFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.basic.SmallLongTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestEncoders.someBytes(int)": "AVRO-1857: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state\n\nThis closes #198\n", "org.apache.avro.protobuf.noopt.Test.hasEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileReader.skipSync()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.seek(long)": "AVRO-1259. Java: Improve Trevni's encoding of sparse columns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461896 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputScanner.next()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.space()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.IdentityResponder.respond(Message,Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldDefault.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectRecordTest.doSetupInvocation()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchema.testNullPointer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestTraceSingletons.clearSingleton()": "AVRO-1152. Java: Fix TestTraceSingletons for Java 7.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithNullCodec()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testCreateAllArgsConstructor()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.Requestor.handshake()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getDecoder(ObjectInput)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferOutputStream.write(int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.tool.InduceSchemaTool.run(InputStream,PrintStream,PrintStream,List)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeyComparator.setConf(Configuration)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.length()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericNestedFake.GenericNestedFake()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.setField(Object,String,int,Object)": "AVRO-2663: Record inside of Union is not resolved properly (#752)\n\n* [AVRO-2663] Bug with nested record\r\n\r\n* Compare the names as well\r\n\r\n* Apply stylecheck\r\n\r\n* Fix some docs\r\n\r\n* Make spotless happy\r\n\r\n* Remove unused statement\r\n\r\n* Fix Spotless error\r\n", "org.apache.avro.specific.SpecificRecordBase.writeExternal(ObjectOutput)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.getSfixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.GenericDatumWriter.isMap(Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Record.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.sortFiles(File)": "AVRO-2644: Fix deterministic directory compilation\n", "org.apache.avro.RecordSchema.RecordSchema(String,String,Map,boolean)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.InputStreamByteSource.readRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.endLong()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.completion(Completion)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaCompatibility.recursionInProgress()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.reflect.AnotherSampleRecord.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericRequestor.request(String,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.encodeFloat(float,byte,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.next(AvroWrapper,NullWritable)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.write(Object,Object,Schema,Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueReader.ValueReader(InputStream)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TextConverter.TextConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.setSint32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.addProp(String,String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.SchemaCompatibilityResult(SchemaCompatibilityType,List)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testManglingForRecords()": "Change the default for generated fields to \"private\" so we aren't generated @Deprecated code by default\n", "org.apache.avro.ipc.ByteBufferOutputStream.getBufferList()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.enumeration(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapreduce.TestWordCount.testAvroReflectOutput()": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.ipc.netty.NettyServer.channelInactive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.thrift.test.add_argsTupleScheme.read(org,add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.getFieldSchemas()": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.setTimestamp(java)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.SchemaBuilder.and()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroSerialization.getSerializer(Class)": "AVRO-944. Java: Fix mapred so that reduce-side combines use correct serializer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190636 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingRecord.newEncoder(ByteArrayOutputStream)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBinaryDecoder.testEOF_double()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.getField(Object,String,int)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.Protocol(String,String,String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestLocalTransceiver.TestResponder(Protocol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.JacksonUtils.toObject(JsonNode)": "AVRO-1585. Java: Deprecate Jackson classes in public API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Foo.writeTo(com)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldAssembler.optionalInt(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(Schema,Schema,ReflectData)": "AVRO-1240. Java: Fix SpecificDatumReader(Class) constructor to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442612 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Date.validate(Schema)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testInt()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.HttpServer.HttpServer(ResponderServlet,ConnectionFactory,String,int)": "AVRO-1213 Update to latest release of Jetty\n\nCloses #244\n\nSigned-off-by: sacharya <suraj@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\n", "org.apache.avro.Builder.setRelatedids(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Builder.hasFloat()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.setI32(int)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.hadoop.io.AvroKeyDeserializer.createAvroWrapper()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.Foo.setFieldValue(_Fields,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.OutputBuffer.writeString(String)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.thrift.test.Foo.add_args(int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectRequestor.writeRequest(Schema,Object,ValueWriter)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRequestor.request(String,Object)": "AVRO-433.  Fix exceptions in Java reflect RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918783 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testNameReserved()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Integer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBlockingIO.testScan(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.FooBarSpecificRecord(java,java,java,java,org)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniOutputFormat.setMeta(JobConf,String,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Pair.hashCode()": "AVRO-2275 Some name cleanup, plus changes to make it easier to utilize Resolver.Action trees.\n", "org.apache.avro.reflect.ReflectDatumReader.ReflectDatumReader(Class)": "AVRO-1240. Java: Fix SpecificDatumReader(Class) constructor to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442612 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetByteOptionalField()": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificToFromByteArray.testSpecificToFromByteBufferWithoutLogicalTypes()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setD(org)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.io.TestBlockingIO.Tests(int,int,String)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.ensureSymsIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.M.parseFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificFixed.bytes(byte)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.makeNullable(Schema)": "AVRO-1604. Java: Fix ReflectData.AllowNull to work with @Nullable annotations. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641896 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferAccessor.BufferAccessor(BinaryDecoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTest.getDecoder()": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.protobuf.ProtobufDatumReader.ProtobufDatumReader(Schema,Schema,ProtobufData)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeInfo2.getName()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadLongCount()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.SequenceFileReader.next(Pair)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Long,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.AsyncClient.ping(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredRecord(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RpcReceiveTool.run2(PrintStream)": "AVRO-267.  Add two new avroj commands: rpcsend and rpcreceive.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894946 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getUsedConversionClasses(Schema)": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.protobuf.noopt.Foo.Builder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Nested.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.Schemas.copyLogicalTypes(Schema,Schema)": "[add] incomplete implementation to use generic schema traverser.", "org.apache.avro.TestSchemaBuilder.testBoolean()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectDatumReader.setField(Object,String,int,Object)": "AVRO-678. Implement ReflectData#compare().\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1026511 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Field.toString()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.DatagramTransceiver.DatagramTransceiver(SocketAddress)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceTypeFactory.fromSchema(Schema)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.protobuf.Test.addAllIntArray(java)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getSchemaName(Object)": "AVRO-946. Java: Optimize union resolution when writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197768 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setByteOptionalFieldIsSet(boolean)": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.propsHashCode()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.ipc.trace.TestTraceConfigurations.testTraceEquality()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.setId(int)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testError()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.mapNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ByteArrayByteSource.read()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflectMeta.testStartServer()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.reflect.ReflectRequestor.ReflectRequestor(Class,Transceiver,ReflectData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReferenceManager.getLogicalTypeName()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testRecursive()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroJob.setInputKeySchema(Job,Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Action(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.io.BlockingBinaryEncoder.writeString(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.write(ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.io.BinaryDecoder.isEof()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithSSL.testMixtureOfRequests()": "AVRO-1119. Java: Permit NettyServer to be used with SSL.  Contributed by Sebastian Ortega.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1357944 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.createSchema(java,Map)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.testJsonToBinarySchemaFile()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.util.WeakIdentityHashMap.reap()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Builder.getFoo()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readLong()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.equals(Object)": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibility.testValidateSchemaPairMissingSecondField()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.testJob()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.TestReflectionUtil.testUnsafeUtil()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestNettyServer.verifyResponse(String)": "AVRO-2117: Cleanup Java - Cleanup tests\n", "org.apache.avro.TestProtocolReflect.testError()": "AVRO-487. Fix Java reflect protocols to transmit error messages.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@927167 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ReflectNestedObjectArrayTest.Vals(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringConversion.validate(String,LogicalType)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.generic.GenericDatumReader.newRecord(Object,Schema)": "AVRO-387.  Add IndexedRecord interface, so that specific & generic may share #toString(), #hashCode(), #compare(), etc.  Also fix toString() and hashCode() to not throw NPE for uninitialized records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905807 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testCompare()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.Error(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setString(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionFieldTypeBuilder.intType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.getUnknownFields()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.StatsServlet.getname()": "Reverting r966342 for AVRO-587 because it's missing files from the patch and, even when these files are added, tests still fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966416 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.cleanup(Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Avro14SpecificCompiler.esc(Object)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.dispose()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherRecordReader.TetherRecordReader(JobConf,FileSplit)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.DecoderTest.DecoderTest(String,String)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BarRecord.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.getDefaultValue(Field)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.file.DataFileReader.pastSync(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.buildCompany()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.skipFixed(int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.UnionBuilder(Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceResponder.getSpansInRange(long,long)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Player.clearFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.write(Status,ByteBuffer)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.generic.TestGenericData.testrecordConstructorWrongSchema()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getDescriptorForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Field.Field(Schema,JsonNode,Order)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestToTrevniTool.run(String[])": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.RandomData.randomBytes(Random,int)": "[AVRO-2624] Bunch of casts to just Buffer so that avro built with Java11 will work at runtime with Java 8.\n", "org.apache.avro.protobuf.Foo.newBuilderForType(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.doSkipBytes(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NullDefault.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.record.ValidatingRecordTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.file.Options.withIndexInterval(int)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setSyms(int,org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSequenceFile.withCompressionCodec(CompressionCodec)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.IntSchema.IntSchema()": "AVRO-56.  Use Jackson to generate JSON from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@786660 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificFixed.compareTo(SpecificFixed)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.RecordBuilder.aliases(String[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.setRelatedIds(List)": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.PojoWithArray.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.tool.TestDataFileTools.testReadHeadSpace5Count()": "AVRO-1858 add tojson head mode (#100)\n\n* AVRO-1858: added --head option to the tojson operation\n\n* AVRO-1858: added unit tests for tojson --head option\n\n* AVRO-1858: head input and record counters are now longs\n\n* AVRO-1858: added tojson --head tests for zero and negative values. Negative head count is now an error.\n", "org.apache.avro.mapreduce.TestCombineAvroKeyValueFileInputFormat.testReadRecords()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.Test.mergeFrom(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setF64(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.TestReflect.testR5()": "AVRO-249. In reflection, implement Java short as an Avro int whose java-class property is set to java.lang.Short.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@887459 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.iterator()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.withCodec(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.LockableArrayList.lock()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectRecordTest.decode(Blackhole,TestStateDecode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestSchemaCompatibility.asDeqeue(String[])": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.zip_args.getFieldValue(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LegacyBinaryEncoder.writeBytes(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.unionDouble(String,double,Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CallbackToResponseStreamObserverAdpater.onError(Throwable)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.messageReceived(ChannelHandlerContext,MessageEvent)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroSerialization.open(OutputStream)": "AVRO-2049: Remove Superfluous Configuration From AvroSerializer\n", "org.apache.avro.protobuf.Foo.clearEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.HadoopInput.length()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.MapCompletion(MapBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.NestedRecordTest.NestedRecordTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.respond(Transceiver)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NestedCompletion.complete(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeShortField.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.SimpleCases.testOutput()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.GenericDefault(FieldBuilder,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.Builder(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.RecordWithOutOfOrderTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.Protocol.getProp(String)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.check(File,String,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.Utf8.charAt(int)": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testTimeMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.protobuf.Test.getDescriptor()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.getSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getDescriptor()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.customEncode(org)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.trevni.TestIOBuffers.testSkipString()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.mapred.AvroAsTextRecordReader.createKey()": "AVRO-808. Java: Add AvroAsTextInputFormat for use with streaming.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1096798 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.FieldAssembler(Completion,NameContext,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestByteBuffer.test()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.getInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.createCompiler(SpecificCompiler)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.thrift.test.add_result.unsetSuccess()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.UnchangedUnionTest.mkSchema(String)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.TestBulkData.startServer()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.TestSchemaCompatibility.list(E[])": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.create(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.IntSumReducer.reduce(Text,Iterable,Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RepeaterTest.RepeaterTest()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToLongFloatUnionSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.BaseFieldTypeBuilder.longBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificCompiler.log(int,String,Throwable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.FixedSizeStringLogicalType.getMaxLength()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.mapred.AvroKeySerialization.close()": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.createSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.AllowNull.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.NullableCompletion(Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputsSyncable.reduce(AvroKey,Iterable,Context)": "AVRO-1418. Java: Add sync support to AvroMultipleOutputs.  Contributed by Deepak Kumar V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556378 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooFieldBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestEncoders.testJsonEncoderNewlineDelimited()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.FooOrBar.getFieldDesc(_Fields)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroKeyOutputFormat.AvroKeyOutputFormat(RecordWriterFactory)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.ensureFooArrayIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.basic.ExtendedEnumTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.SequenceFileReader.get()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericRequestor.writeRequest(Schema,Object,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.isInitialized()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.BlockingSimpleImpl.echoBytes(ByteBuffer)": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setSfixed64(long)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Builder.clearNicknames()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapper.datum(T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Options.getBlockSizeBytes()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.setString(com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroJob.setInputGeneric(JobConf,Schema)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.Main.run(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileConcat.makeFile(String)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "example.ColorCount.map(User,AvroCollector,Reporter)": "AVRO-1211. Add MR guide to documentation. Contributed by Skye Wanderman-Milne.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1424014 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.populateDoubleArray(Random,int)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "avro.examples.baseball.FieldTest.hasTimeMillis()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.SchemaCompatibility.checkSchemaNames(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.protobuf.multiplefiles.M.setField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestEncoders.testBadBinaryEncoderInit()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.IDLProtocolMojo.getTestIncludes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCompression.newChannel(ChannelPipeline)": "Java: Add TestNettyServerWithCompression, illustrating how one can add compression to Avro Netty-based RPC.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446372 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.cancel(boolean)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceManager.getTracker()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ArrayTest()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileRecordReader.initialize(InputSplit,TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.addAlias(String,String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.reflect.MapEntry.setValue(V)": "AVRO-1882: ConcurrentHashMap with non-string keys fails in Java 1.8\n", "org.apache.avro.TestSchemaCompatibility.testValidateSchemaPairAllFields()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testOnePriorCanRead()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DataFileInteropTest.printDir()": "AVRO-716. Java: integrate AVRO-647 changes with top level build\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.RecordWithOutOfOrder.getDecoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.findValueByNumber(int)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.buildPartial()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.BasicState.getRandom()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.noopt.Foo.newBuilderForType(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Foo.mergeTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.Test.getDefaultInstance()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.newBuilderForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.parsing.ValidatingGrammarGenerator.LitS(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.initialize(InputSplit,TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.createDatumWriter(Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeBytes(byte,int,int)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.JacksonUtils.objectToMap(Object)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.FieldBuilderBase.unionLong(String,long,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArraySchema.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO_resolving.test_resolving()": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.HijackingIndexedRecord.getSchema()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.Options()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.decimal(int)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufDatumReader.readBytes(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_args.toString()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.io.EncoderFactory.validatingEncoder(Schema,Encoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setI16OptionalFieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testBytes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.util.AvroCharSequenceComparator.compare(T,T)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.TreeMapSegmenter.rangeAsString(T,T)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.intWrittenWithUnionSchemaIsReadableByFloatUnionSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.SchemaBuilder.RecordDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.createNewIntegerHistogram()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "avro.examples.baseball.FieldTest.clearTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.BinaryDecoder.attach(int,BinaryDecoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.handshake(Transceiver)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.isFieldAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.StatsPluginOverhead.sendRpcs(boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.JodaTimeConversions.getConvertedType()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.io.BinaryData.encodeLong(long,byte,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BlockingBinaryEncoder.writeBytes(ByteBuffer)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.parseDelimitedFrom(java,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchema.testImmutability2()": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.flush()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.MapBuilder.values(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TimestampMillisConversion.getLogicalTypeName()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.protobuf.noopt.Foo.setInt32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.add_args.equals(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.ReflectData.getCollectionClass(Schema)": "AVRO-241.  In Java, add a union annotation for reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@887439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilder.FieldBuilder(FieldBuilderBase,String,Schema,JsonNode)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Double,CharSequence)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getUint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectTest.writeInternal(Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketTransceiver.getRemote()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.TestStateDecode.mkSchema(String)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.parsing.SymbolTest.testSomeMethod()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "avro.examples.baseball.Player.hasPosition()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.printBrief()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.writeString(Utf8)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testIsNullableOnRecord()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.protobuf.multiplefiles.TestMultipleFiles.assignDescriptors(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.Perf.isWriteTest()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.echoBytes(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.thrift.test.add_call.add_call(int,int,org,org,org,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ValueWriter.writeBytes(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsServlet.formatMillis(float)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_call.zip_call(org,org,org,org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parseDelimitedFrom(java,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.setFixed32(int)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testSkipDouble()": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.error()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.protobuf.Foo.getSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericResponder.writeError(Schema,Object,Encoder)": "AVRO-433.  Fix exceptions in Java reflect RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918783 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.newReader()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.getEncoder()": "[AVRO-2129] Add getEncoder method to match getDecoder\nCloses #277\n", "org.apache.avro.io.TestValidatingIO.generate(Encoder,String,Vector)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeConversions.getConvertedType()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.resolve(Schema,Protocol,Map)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.TestCircularReferences.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.setDouble(double)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.AvroOutputFormatBase.getCompressionCodec(TaskAttemptContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.message.BinaryMessageEncoder.V1MessageEncoder(GenericData,Schema,boolean)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.io.JsonEncoder.JsonEncoder(Schema,OutputStream)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestNettyServerWithCallbacks.releaseEnterPermit()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testJsonEncoder(String,T)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NestedCompletion.NestedCompletion(PropBuilder,Completion)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputFormat.close(Reporter)": "AVRO-512. Java: Define and implement MapReduce connector protocols.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@954998 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousClient.hasInitialResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificData.isStringType(Class)": "[AVRO-2058] Fix issues with Utf8 keys maps being treated as non-strings\nThis closes #237\n\ncommit 8852da40e7a0ee58d9b027173a4972e7e71b432d\nAuthor: Sam Schlegel <git@lutin.us>\nDate:   Wed Jul 26 19:20:51 2017 -0700\n\n    Add failing test\n", "org.apache.avro.io.DecoderTest.getDecoder()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.TraceTiming(Long,Long,Long)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testFloat()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.UnresolvedUnionException.UnresolvedUnionException(Schema,Schema,Object)": "ensure GenericDatumWriter specifies which field triggered an UnresolvedUnionException\n", "org.apache.avro.thrift.test.add_argsStandardScheme.write(org,add_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.echoBytes()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestCompare.testEnum()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.stats.Histogram.toString()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.indent(int)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.io.TestBinaryDecoder.testEOFInt()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Error.toString()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.unionOf()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Options.withCompressionType(CompressionType)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.equals(ping_result)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.tool.SchemaNormalizationTool.run(InputStream,PrintStream,PrintStream,List)": "AVRO-2336: Use Java Standard Charsets - Part 2\n", "org.apache.avro.io.ValidatingDecoder.readIndex()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.getEncoder()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testToStringFixed()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.SortReducer.reduce(AvroKey,Iterable,Context)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.Text.Text(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.setPos(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.acquireRunPermit()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.names()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.readObject(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.mkFixed(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(Class,Object,SpecificData)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.record.TestStateEncode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.AvroMultipleOutputs.getRecordWriter(String,String,Reporter)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.genavro.TestGenAvro.write()": "AVRO-258.  Add GenAvro language tool.  Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894933 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.hasSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordTest.decode(TestStateDecode,Blackhole)": "AVRO-2701: Add JMH BlackHole to RecordTest (#781)\n\nCo-authored-by: David Mollitor <dmollitor@apache.org>", "org.apache.avro.specific.SpecificDatumReader.newInstance(Class)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.testDeclaredError()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.LocalTransceiver.getRemoteName()": "Add a Java local RPC transceiver.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@896178 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.setFields(LinkedHashMap)": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.clearF32()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.mapred.tether.TetherTaskRunner.configure(TaskType,String,String)": "AVRO-803. Java: Optionally change string types in generated code to java.lang.String instead of java.lang.CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1182146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getIncompatibilities()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestImpl.ack()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.SpecificRequestor(Protocol,Transceiver)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.CallFuture.get()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip_argsStandardScheme.write(org,zip_args)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.RandomData.next()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.MapSchema(Schema,Schema)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.EnumLabelsAction.getLabel(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.ByteBufferValueReader.readBuffer(Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.jsonEncoder(Schema,OutputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.SmallLongTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.SeekableInputStream.read(byte,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Protocol.getMD5()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetI32Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseTypeBuilder.bytesType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileReader.blockFinished()": "AVRO-652. Java: Expose sync points in DataFileReader.  Contributed by Stu Hood.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@992149 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.readLength()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaCompatibilityResult.getCompatibility()": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.io.ResolvingTable.isResolverAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.SchemaResolver.isUnresolvedSchema(Schema)": "[add] AVRO-1723 and AVRO-1667", "org.apache.avro.compiler.TestSpecificCompiler.testSettingOutputCharacterEncoding()": "AVRO-1471. Java: Permit writing generated code in different character encodings.  Contributed by Eugene Mustaphin.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577670 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ArrayBuilder.items()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.TestBinaryDecoder.testEOF_long()": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.reset()": "Make elements of an array reusable again", "org.apache.avro.BaseTypeBuilder.bytesBuilder()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getFloat()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingTable.isAction(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getDefaultInstanceForType()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getNumber()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ResolvingTable.mkErrorAction(String)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeLong(long)": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousServer.getMechanismName()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Message.getDoc()": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.mergedWith(SchemaCompatibilityResult)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.TestSchema.testMapInRecord()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.SpecificCompiler.writeToDestination(File,File)": "AVRO-616. Java: Add a comment to generated source files noting that they should not be edited.  Contributed by Patrick Wendell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986461 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.ResolvingVisitor.get()": "[add] resolution code using new reusable visitor.", "org.apache.avro.io.BlockingBinaryEncoder.setItemCount(long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.setItemCount(long)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.TestStateEncode.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.protobuf.multiplefiles.Builder.getFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.ArrayAccessor.readArray(boolean,long,ResolvingDecoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.expandStack()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.WeakIdentityHashMap.remove(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.EmployeeId.toString()": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.parseFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FloatDefault.FloatDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectionUtil.checkUnsafe()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getBlockSizeBytes()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.map()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.ensureSymsIsMutable()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.SchemaNormalization.parsingFingerprint64(Schema)": "AVRO-1006.  Add schema fingerprinting to specification and Java.  Contributed by Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1298117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testNonStringMapKeys()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.NamedSchema.writeNameRef(Names,JsonGenerator)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SkipAction.SkipAction(Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.ipc.CallFuture.CallFuture(Callback)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatibilityChecker.checkFixedSize(Schema,Schema,Deque)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_args.write(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Reader.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.build()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.hashCode()": "AVRO-21.  Default Java namespace from containing definition.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@774449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.DateConversion.fromInt(Integer,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.MapSchema.equals(Object)": "AVRO-853: Java: Cache Schema hash codes. (cutting)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157266 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeyComparator.compare(byte,int,int,byte,int,int)": "AVRO-762. Java: Bug in BinaryData.compare() with offset comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1071117 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.SpecificRequestor(Class,Transceiver)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFile.testSplits()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.FieldBuilderBase.unionArray(String,Schema,Collection,Schema[])": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasB()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.reflect.ArrayAccessor.readArray(short,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.MapImpl.configure(JobConf)": "AVRO-1120. Let AvroMultipleOutput jobs use multiple schemas with map-only jobs.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1356503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.MapCollector.collect(OUT)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.writeExternal(java)": "AVRO-1814: Generated java code fails on variables with a TLD name like 'org'\n", "org.apache.avro.protobuf.multiplefiles.Builder.getSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferMissingPayload()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.Foo(Builder)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.getRecordSchema(Object)": "AVRO-104.  Permit null fields with Java reflection.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@807847 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MigrationTest.readInternal(Decoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroTrevniInputFormat.close()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroMultipleOutputs.getRecordWriter(FileSystem,JobConf,String,Progressable)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.GenericReaderOneTimeUseReaderTest.GenericReaderOneTimeUseReaderTest()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.setUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalTypes.uuid()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.testFileDoesNotExist()": "[merge] marge with latest changes", "org.apache.avro.SampleRecord.equals(Object)": "AVRO-141.  Fix a NullPointerException in ReflectData#isRecord().  Contributed by Isabel Drost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithOutOfOrderTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.hadoop.file.Options.getValueSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordSchema.fieldsToJson(Names,JsonGenerator)": "AVRO-1016. Java: Add Field#getAliases() method to better permit copying of schemas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241665 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.BytesTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.AvroSerializer.AvroSerializer(Schema,DatumWriter)": "AVRO-1353. Java: Permit specification of data model (generic, specific, reflect, or other) in mapreduce job configuration.  Contributed by Marshall Bockrath-Vandegrift.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511535 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.TestStateEncode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.NullCodec.decompress(byte,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalMap(String,Schema,Map)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.requestCallMeta()": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.configure(TaskType,CharSequence,CharSequence)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestReflect.testRecordWithNullIO()": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestWordCount.testAvroSpecificOutput()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileStream.getHeader()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.EndpointResponder.EndpointResponder(Protocol)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.ErrorAction(Schema,Schema,GenericData,ErrorType)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.BinaryDecoder.tryReadRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.write(Schema,Object,Encoder)": "AVRO-946. Java: Optimize union resolution when writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1197768 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.UnsafeCustomEncodedField.read(Object,Decoder)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalInt(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Double)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Name.getQualified(String)": "AVRO-600. Add support for type and field name aliases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@986455 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.decodeGenericBlob(Schema,Schema,byte)": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.protobuf.Foo.hasDouble()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayOrBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.FloatTest.readInternal(Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileCustomSync.testCustomSync()": "AVRO-1685. Allow specifying sync in DataFileWriter.create. Contributed by Sehrope Sarkuni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1687559 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.count(CharSequence,CharSequence,long)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.getValueSchema(Schema)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemas.assertSchemaContains(Schema,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TraceCollection.getMaxTime(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryEncoder.writeFloat(float)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createRecord(Map)": "AVRO-9.  Restrict map keys to strings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769143 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Repeater.Repeater(Symbol,Symbol[])": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Pair.Pair(X,Y)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.TestProtocolHttps.getExpectedHandshakeCount()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.specific.SpecificRequestor.readResponse(Schema,Decoder)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlToSchemataTool.isRequestingHelp(List)": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BaseFieldTypeBuilder.BaseFieldTypeBuilder(FieldBuilder,CompletionWrapper)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.RecordBuilder.getRecordSchema()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestNestedRecords.testSingleSubRecord()": "AVRO-2034 Nested schema types with unexpected fields causes json parse failure (#224)\n\n* AVRO-2034 Created test to prove issue\r\n\r\n* AVRO-2034. Updates test to show a working record vs a failing record in the simplest possible scheme.\r\n\r\n* AVRO-2034 Fixes advance logic to skip unrecognized fields at record end\r\n", "org.apache.avro.io.JsonDecoder.hasTextCharacters()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.specific.SpecificCompiler.getShortDescription()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.mergeTimestamp(com)": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.mapred.TestSequenceFileReader.testNonAvroMapOnly()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearIntArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.netty.SimpleImpl.hello(String)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.SchemaCompatibility.Incompatibility(SchemaIncompatibilityType,Schema,Schema,String,List)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ValidateLatest.validate(Schema,Iterable)": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.getDescriptor()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.nullableBytes(String,byte)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.BasicTest(String,String)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.reduce(AvroKey,Iterable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.ThriftDatumReader.ThriftDatumReader(Schema,Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderOneTimeUseDecoderTest.GenericReaderOneTimeUseDecoderTest()": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.determineInputs(List,FilenameFilter)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.trace.TestSpanTraceFormation.testBasicTraceFormation()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingDecoder.readFieldOrderIfDiff()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.ping_result.compareTo(ping_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withBlockSizeBytes(long)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadFloat.genData(Encoder)": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificCompiler.assertCompilesWithJavaCompiler(Collection)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.createInstance()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearBool()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.StringTest.readInternal(Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip_args.hashCode()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.write(Object,Encoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.fields()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestGenericJob.createArraySchema()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapreduce.TestAvroKeyOutputFormat.testWithDeflateCodeWithHadoopConfig()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectRecordTest.createDatum(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.getPipeline()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.perf.test.generic.GenericWithDefaultTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.JsonDecoder.configure(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.SmallLongTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.mapred.HadoopCombiner.getReducer(JobConf)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.read(org)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestCreateRandomFileTool.after()": "AVRO-1990: CreateRandomFileTool should validate arguments\n\nThis closes #226\n", "org.apache.avro.SchemaBuilder.BooleanDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.GenTest.generate()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.mapred.AvroMapper.collect(OUT)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericResponder.writeError(Schema,Object,Encoder)": "AVRO-755. Java: Fix SpecificResponder to correctly handle message parameter lists that differ between client and server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1073077 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Reference.Reference(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.get(K)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.PrintingVisitor.afterVisitNonTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.mojo.InduceMojo.execute()": "AVRO-2365: Allow using custom ReflectData impl\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(ResponderServlet,int)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.AvroMultipleOutputs.getNamedOutputsList(JobConf)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.Builder.setName(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.specific.SpecificErrorBuilderBase.getValue()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.reduce(GenericRecord)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.hashCode()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericWithPromotion.getReaderSchema()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.compareTo(add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.readBytes(ByteBuffer)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.writeEnum(Schema,Object,Encoder)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.ObjectReader.read(Object,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.hasTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.SchemaBuilder.nullType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.getStringType(JsonNode)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.trevni.avro.mapreduce.WordCountReducer.reduce(Text,Iterable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(Schema,GenericData)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.SimpleImpl.echo(TestRecord)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestSchema.testIsNullableOnUnionWithoutNull()": "Squashed commit of the following:\n\ncommit a3f86c2874ad6d86b11fc2edc908065adcefdeda\nAuthor: Daniel Kulp <dkulp@apache.org>\nDate:   Tue Nov 20 14:32:48 2018 -0500\n\n    Grab some more tests from other PR\n\ncommit 7d7822b5960c157ddf6db7fa15a3d797d0b286ee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:50:45 2016 +0100\n\n    new javadoc with same formatting as other javadoc\n\ncommit 82e8f7af6736034f4e85a4e6e1bcaa803019082e\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:38:33 2016 +0100\n\n    restore initial imports\n\ncommit 0ca9815c8c884bc30c73b5c8a3c5d4c6e5188cee\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Sun Dec 11 22:36:03 2016 +0100\n\n    javadoc\n\ncommit 551e1eb4a6bdedf00260ef90576490648f9b4658\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 23:14:03 2016 +0100\n\n    format and clarify pre existing tests\n\ncommit 857da0c70a2db321d5bf521b901fe0c035f32edc\nAuthor: Joseph Pachod <joseph.pachod@berger-levrault.fr>\nDate:   Wed Dec 7 22:53:13 2016 +0100\n\n    AVRO-1961: Java: add isUnion and isNullable on Schema class\n\nCloses #169\n", "org.apache.avro.Protocol.parseTypes(JsonNode)": "AVRO-34.  Upgrade to Jackson version 1.0.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777671 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.defaultValue(Field,Conversion)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.file.DataFileStream.getMetaLong(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.make(Schema,String,Object,Encoding)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.testBasicOperation()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.parsing.Symbol.Symbol(Kind)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getAccessorFor(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.ReflectRecordTest()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.getFieldName()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnFileReader.getRoots()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestCompare.render(Object,Schema,DatumWriter)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Responder.handshake(Transceiver,Decoder,Encoder)": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearSfixed32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumAdjust.resolve(Schema,Schema,GenericData)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.protobuf.noopt.Foo.hasSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.ThriftData.getEnumSchema(Object)": "AVRO-948. Java: Fix to more correctly handle Thrift optional and nullable fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1190627 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapreduce.AvroSumReducer.reduce(Text,Iterable,Context)": "AVRO-1232. Java: Add a toString() method to AvroWrapper so that it works with TextOutputFormat.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435355 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.completeField(Schema,Object)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoubleBuilder.DoubleBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkReaderEnumContainsAllWriterEnumSymbols(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.Conversion.toBoolean(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Conversions.toFixed(BigDecimal,Schema,LogicalType)": "AVRO-2309: Conversions.java - Use JDK Array Manipulations\n", "org.apache.avro.file.DataFileStream.compressUsing(Codec)": "AVRO-541. Fix sporadic corruption when appending a compressed file to an uncompressed file.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988732 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getNumber()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.compareTo(Record)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parseFrom(byte,com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.unionBytes(String,byte,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnator.getArrayWidths()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearSyms()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalTypes.fromSchema(Schema)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.ArrayBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testToStringSameValues()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.Foo.buildPartial()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.mkEnumAdjust(List,List,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.DataFileWriter(Schema,File,DatumWriter)": "AVRO-158.  Permit appending to a data file from Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@833621 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping.getResultHandler(AsyncFrameBuffer,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.findValueByNumber(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestCircularReferences.getHandler()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.setString(com)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.run(Tool,InputStream,String[])": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mojo.InduceMojo.getReflectData()": "AVRO-2365: Allow using custom ReflectData impl\n", "org.apache.avro.protobuf.Builder.hasSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.CountingOutputStream.getWrittenCount()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.ipc.NettyTransceiver.channelOpen(ChannelHandlerContext,ChannelStateEvent)": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_args.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCircularReferences.validate(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.RecordCountTool.countRecords(InputStream)": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.io.TestParsingTable.makeUnionTestData(int[])": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.register(String,LogicalTypeFactory)": "AVRO-2627: Unify NullPointerException Management\n", "org.apache.avro.thrift.test.Test.unsetMapField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getRequestPayloads()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.GenericStringTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.JsonDecoder.advance(Symbol)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.AvroMultipleOutputs(TaskInputOutputContext)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaCompatibility.getIncompatibility()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.SchemaBuilder.requiredFloat(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestUtil.testCodecFactoryZstandardCompressionLevel()": "AVRO-2461: Add compression level support to fromjson and recodec (#576)\n\n", "org.apache.avro.data.Jsr310TimeConversions.toInt(LocalDate,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.trevni.avro.AvroTrevniInputFormat.listStatus(JobConf)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestEncoders.testWithBuffer(ByteBuffer)": "AVRO-1857: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state\n\nThis closes #198\n", "org.apache.avro.file.DataFileWriter.isReserved(String)": "AVRO-368. Reserve avro.* in object container files, and \nrename existing reserved words.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@903362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.getFooArrayList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.perf.test.reflect.ReflectDoubleArrayTest.decode(Blackhole,TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.trace.NonRecursingResponder.NonRecursingResponder(Protocol)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.valueOf(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.get(int)": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.ipc.netty.NettyServer.NettyServer(Responder,InetSocketAddress,Consumer,Consumer)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.specific.Avro14SpecificCompiler.line(StringBuilder,int,String)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.getRoot()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapper.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearFixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ResolvingDecoder.skipSymbol(int,int)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericRequestor.readError(Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.DoubleTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.DecoderTest.DecoderTest(String,String,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStopwatch.testNormal()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.WordCountTask.map(Utf8,Collector)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.TestSaslAnonymous.testStartServer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.netty.NettyTransceiver.getRemote()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.OrderPlugin.clientFinishConnect(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericRequestor.writeRequest(Schema,Object,Encoder)": "AVRO-1247. Java: Fix Requestor and Responder implementations to use correct ClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.TestStateEncode.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Test.parsePartialFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Test.getBinaryField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicState.newEncoder(int,OutputStream)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.Schema.ArraySchema(Schema)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.util.internal.Accessor.createField(String,Schema,String,JsonNode)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.specific.Builder.build()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.io.TestBinaryDecoder.testBadLengthEncoding()": "AVRO-1198. Java: Improve error message for malformed data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445325 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BaseDecoder.decode(ByteBuffer,D)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.protobuf.noopt.Test.getIntArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TestSpanTraceFormation.testSpanEquality2()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readFixed(Object,Schema,Schema,ValueReader)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TimeMillisConversion.adjustAndSetValue(String,String)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.io.ValueWriter.writeEnum(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.getDataModel()": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.getDec()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.generic.GenericDatumWriter.write(Object,ValueWriter)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificRecordBase.getConversion(int)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.stats.Histogram.getCount()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.MapCollector.MapCollector(OutputCollector)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestWordCount.setup(Context)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherPartitioner.setNextPartition(int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.AbstractAvroMojo.createClassLoader()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.TestProtocolDatagram.createServer(Responder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.TestGenericDatumWriter.writeFieldWithDefaultWithoutExplicitNullDefaultInSchema()": "AVRO-1954 - Schema.Field.defaultVal() generates: Unknown datum type org.apache.avro.JsonProperties$Null. Contributed by Nandor Kollar\n", "org.apache.trevni.avro.TestEvolvedSchema.testTrevniEvolvedRead()": "AVRO-1228. Java: Fix Trevni to use default values for missing Avro fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1442398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Names.get(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.io.ValidatingDecoder.ValidatingDecoder(Symbol,Decoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectAllowNulls.testWrappers()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.OutputFile.writeToDestination(File)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getCompressionCodec()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.isFixed(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Parser.reset()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getProductionToSkip(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.FieldAccessUnsafe.set(Object,Object)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.isSetMapField()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalBoolean(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.ensureSymsIsMutable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(Responder,Connector)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.SocketTransceiver.writeBuffers(List)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getResultHandler(AsyncFrameBuffer,int)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.io.Perf.update(long)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.protobuf.noopt.Builder.clearInt32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileStream.getMetaKeys()": "AVRO-757. Java: Permit data files to be re-opened without re-reading the header.  Contributed by Stu Hood.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1068142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherTask.partitions(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestEncoders.testJsonExcessFields()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericRequestor.readResponse(Schema,ValueReader)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeBytes(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.EncoderFactory.directBinaryEncoder(OutputStream,BinaryEncoder)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceResponder.getAllSpans()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.GenericOneTimeUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.errors(Schema)": "AVRO-256. Use fully-qualified class names in generated Java code to eliminate name conflicts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@890997 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.createMessage(String,String,JsonProperties,Schema,Schema,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.data.TestJodaTimeConversions.testDynamicSchemaWithTimeConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.tool.RecordCountTool.printHelp(PrintStream)": "AVRO-1720: Add tool to count records in avro files\n", "org.apache.avro.file.PositionFilter.read(byte,int,int)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.checkFixed(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.UnionFieldTypeBuilder.map()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.file.CodecFactory.zstandardCodec(int,boolean)": "AVRO-2355 [java] Add level and checksum options to ZStandard compression\n", "org.apache.avro.specific.TestSpecificRecordBuilder.buildWithoutSettingRequiredFields2()": "AVRO-1007. Java: Enhance builder API's validity checks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1242190 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.hasSint32()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readFloat()": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificResponder.SpecificResponder(Protocol,Object)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedBuilder.build()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyValueRecordWriter.close(TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.BinaryMessageEncoder.encode(D,OutputStream)": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.io.DecoderFactory.jsonDecoder(Schema,InputStream)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.M.getDefaultInstanceForType()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LongBuilder.LongBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DecoderFactory.jsonDecoder(Schema,String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryEncoder.encodeDouble(double,byte,int)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceNodeStats.getAverageBytes(List)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.echoBytes(ByteBuffer)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.TestResolvingTable.makePrimitiveTestData(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.getHandshakeResponse()": "AVRO-761. Java: Fix Requestor to not send client's protocol redundantly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1079060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.addProp(String,Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.test()": "Reverting AVRO-313 and AVRO-316, since they cause the test-java target to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899471 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,Void)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Player.newBuilder(avro)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Root.Root(Symbol[])": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroGrpcClient.ServiceInvocationHandler(Channel,CallOptions,Protocol,ServiceDescriptor)": "AVRO-2708: Remove Unused Code (#786)\n\n", "org.apache.avro.io.ParsingEncoder.pop()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Parser.parse(String)": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestSchemaCompatibilityFixedSizeMismatch.testFixedSizeMismatchSchemas()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileReader12.close()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.Response(Request)": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.isDone()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.newBuilder()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testRecordPutInvalidField()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.thrift.test.ping_result.setFieldValue(_Fields,Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BufferAccessor.setBuf(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.nullableLong(String,long)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericDatumWriter.startItem()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.getBar()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.TestHadoopCodecFactory.testHadoopCodecFactoryDeflate()": "AVRO-1243. Java: Add support for bzip2 file compression and translate Hadoop job compression options.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1445426 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.encodeLong(long,OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredInt(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.removeFooArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Names.space(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.Perf.GenericWithPromotion()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setBoolFieldIsSet(boolean)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LockableArrayList.remove(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testLogicalTypesWithMultipleFieldsJsr310DateTime()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.ServiceInvocationHandler.onNext(Object)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.multiplefiles.Builder.getUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FieldAssembler.optionalDouble(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.executeCompiler(SpecificCompiler,Optional,StringType,Optional,boolean,Optional,File,File)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.io.OutputStreamSink.innerWrite(byte,int,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.getFixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.getPreLinkTime()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.self()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.parse(String)": "AVRO-874. Java: Improved Schema parsing API and permit IDL imports to depend on names defined in prior imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1157245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.fieldForId(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.Writer.withKeyClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.peekArray(Object)": "AVRO-637. Java: Change GenericArray to implement List.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990852 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.getFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Container(Schema,Schema,GenericData,Action)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.reflect.ReflectRequestor.ReflectRequestor(Protocol,Transceiver)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.IdlToSchemataTool.getShortDescription()": "AVRO-1337. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.writeTo(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestReflect.testR6()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.StringTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.ipc.stats.StatsPluginOverhead.sendRpcs(boolean)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.zip.isOneway()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.testSendAfterChannelClose()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.AvroSequenceFile.getProgressable()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getIntArrayList()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.ByteBufferInputStream.read()": "[AVRO-813] Keep the InputStream contract of -1 for eof\nPatch from Bruno Dumon applied\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestCompare.testBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.schema.SchemasTest.visitNonTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.hadoop.io.AvroSerialization.addToConfiguration(Configuration)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.tool.TestJsonToFromBinaryFragmentTools.binaryToJson(String,String,String[])": "AVRO-1396. Java: Enable tojson command-line tool to pretty print output. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.writeArrayEnd()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.getBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestSchemas.getWriter()": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.generic.GenericDatumWriter.isString(Object)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.TestAvroSequenceFile.writeSequenceFile(Path,Class,Class,Schema,Schema,Object[])": "AVRO-2763:Resource leak:'<unassigned Closeable value>' is never closed\n", "org.apache.avro.protobuf.Foo.getEnum()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.getFieldAccess()": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.error(boolean)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.generic.GenericData.toString(Object,StringBuilder,IdentityHashMap)": "Fix map with no string keys toString method\n", "org.apache.avro.file.XZCodec.hashCode()": "AVRO-1373. Java: Add support for xz compresssion codec, using LZMA2.  Contributed by Nick White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1540620 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.clear()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.isEnd()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.clearFooArray()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.genData(Encoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.Pair.equals(Object)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.perf.test.record.ValidatingRecordTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.perf.test.basic.MapTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.TestReflect.testUnionWithFixed()": "AVRO-1525. Java: ReflectData cannot resolve union with fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1602095 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompilesWithJavaCompiler(Collection)": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.perf.test.basic.IntTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.parsing.ImplicitAction.ImplicitAction()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasesAccessorCustomEncoded.isCustomEncoded()": "AVRO-1498. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1607711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroSequenceFileInputFormat.close()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificCompiler.main(String)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.getDescriptorForType()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectAllowNulls.nullableSchema(Class)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.encode(TestStateEncode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.ProtobufData.getNamespace(FileDescriptor)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncClient.add(int,int,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.StringBldr.endString()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_resultStandardScheme.read(org,add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.getSuccess()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.valueOf(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.multiplefiles.M.equals(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.ColumnFileWriter.writeRow(Object[])": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.checkFixedSize(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.TestCompare.testInt()": "Multiple static analysis fixes and code modernization\n", "org.apache.trevni.ColumnFileReader.ColumnFileReader(File)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.cap(String)": "AVRO-805: Java: Add support for reading and writing instances of Protocol Buffer (protobuf) generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1169908 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.propsEqual(JsonProperties)": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.io.BinaryEncoder.writeLong(long)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroInputFormat.tearDown()": "AVRO-1234. Java: Permit AvroInputFormat to process files whose names don't end in .avro.  Contributed by Dave Beech & Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1550605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.setFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.message.TestBinaryMessageEncoding.testSchemaEvolution()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayOrBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.ExternalizableOutput.write(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestCompare.testBoolean()": "AVRO-108.  Add Java implementation of binary comparator.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@809680 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.PositionFilter(OutputStream)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.initDecoder(BinaryDecoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReaderWriterCompatiblityChecker.checkSchemaNames(Schema,Schema)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.FieldAssembler.nullableString(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestSpecificCompilerTool.readFile(File)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestGenericData.testRecordCreateEmptySchema()": "AVRO-844. Java: Provide better errors for null or missing record fields.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1142048 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.floatType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testWrite(String,List,String,String[])": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.BlockingSimpleImpl()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.acquireRunPermit()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.TestBinaryEncoderFidelity.testBinaryEncoder()": "AVRO-1457. Java: Fix Encoder so that offset in non-array-backed ByteBuffers is not altered when written. Contributed by Rob Turner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598146 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.GenericReaderTest()": "AVRO-388. Using ResolvingDecoder in GenericDatumReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@905865 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SeekableFileInput.SeekableFileInput(FileDescriptor)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.NamespacedBuilder(Completion,NameContext,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createFixed(String,String,int)": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.createEnum(String,String,List)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.CreateRandomFileTool.getShortDescription()": "AVRO-1319. Java: Add command line tools to generate random data files and to convert Avro to Trevni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1480766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.decompress(byte)": "AVRO-380.  Avro Container File format change: add block size to block descriptor.  Contributed by Scott Carey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@904604 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.Foo(Builder)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.objectsEqual(Object,Object)": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestFsData.testStopServer()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.util.internal.Accessor.fieldAccessor()": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.ipc.TestNettyServerConcurrentExecution.SimpleImpl(CountDownLatch)": "AVRO-1019. Java: Add unit test for Netty server concurrent execution.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241759 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.AvroTrevniKeyValueRecordReader.getCurrentValue()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.AvroTextRecordWriter.close(Reporter)": "AVRO-830.  Java: Add AvroTextOutputFormat to permit Hadoop streaming jobs to easily write Avro format output with bytes as schema.  Contributed by Tom White.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1129053 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestKeyValueInput.reduce(Text,Iterable,Context)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.TestGenericData.testToStringDoesNotEscapeForwardSlash()": "AVRO-1546. Java: Change GenericData.Record#toString() to not escape forward slashes.  Contributed by Brandon Forehand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1611772 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.BlockingSimpleImpl.ack()": "AVRO-982. Java: Fix NettyTransceiver to not hang when server stops.  Contributed by Bruno Dumon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1215248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.R10.toString()": "AVRO-247.  In Java reflection, add Stringable annotation to indicate classes that can be represented by an Avro string schema.  Also fix failing interop test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@888540 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.enumeration(String)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.Array.Array(int,Schema)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getClass(Schema)": "AVRO-978. Java: Fix reflect to better handle Byte type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1213860 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setI64Field(long)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnValues.nextValue()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.NameContext.resolveName(String,String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestCustomConversion.testStringViolatesLimit()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.Referenceable.validate(Schema)": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.request(String,Object,Callback)": "[AVRO-732] Remove AvroRemoteException from generated interfaces\nPatch from Sebastien Launay applied\n", "org.apache.avro.ipc.NettyServer.exceptionCaught(ChannelHandlerContext,ExceptionEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsReadableByFloatUnionSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompiles(Protocol,boolean)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.SegmenterException.SegmenterException(String)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.getT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.generic.TestGenericData.testToStringIsJson()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Foo.clearSint64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.parseFrom(java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificData.testPrimitiveWrapperParamError()": "AVRO-1051. Java: Fix specific RPC so that method is found when parameters are a union of a primitive and null.  Contributed by Hamed Asghari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroWrapperConverter.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.generateSetMethod(Schema,Field)": "AVRO-1614. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1646360 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getOrCreateDefaultValue(Type,Field)": "AVRO-2723: Extend ReflectData to get default values for fields from classes and permit extension to compute defaults. (#842)\n\n", "org.apache.avro.TestDataFileReflect.write(DataFileWriter,Object,CheckList)": "AVRO-95.  Fix writing of reflect-based unions.  Also extend DataFileWriter to permit adding branches to a union schema while writing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805556 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.ExtendedEnumTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.noopt.Foo.mergeFoo(org)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BinaryDecoder.BinaryDecoder(InputStream,int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withKeySchema(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyServerAvroHandler.handleUpstream(ChannelHandlerContext,ChannelEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToDoubleSchema()": "AVRO-2072: ResolvingGrammarGenerator doesn't implement schema resolution correctly for unions\n\nSigned-off-by: Anders Sundelin <anders.sundelin@ericsson.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.TestLogicalType.call()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceCollection.compare(Trace,Trace)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.hashCode(HashData,Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificCompiler.params(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Test.isReadTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStatsPluginAndServlet.TestResponder(Protocol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.check(Schema,T,T,boolean,DatumWriter,GenericData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.trevni.InputBuffer.readValue(ValueType)": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.test.reflect.ReflectLargeFloatArrayBlockedTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.thrift.test.Factory.getClient(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Field.Field(String,Schema,String,JsonNode,Order)": "AVRO-2035. Java: enable default validation for schemas created by constructors.\n", "org.apache.avro.hadoop.io.AvroSequenceFile.withKeyClass(Class)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.buildDefaultBootstrapOptions(Long)": "AVRO-1292. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1499040 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestWordCountGeneric.map(Utf8)": "AVRO-493. Add support for Hadoop MapReduce with Avro data files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@930060 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeLongField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.Builder(org)": "AVRO-1199. Java: Fix SortedKeyValueFile to copy the key used to compare against next.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1409542 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_args.setNum1(int)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ExtendedEnumTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.toByteBuffer()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.test.basic.TestStateEncode.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.reflect.ByteBufferTest.getmd5(ByteBuffer)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.RPCContext.responseHandshakeMeta()": "AVRO-605. Java: Change Utf8 to implement CharSequence.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.parsing.Symbol.ErrorAction(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionBuilder.build()": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReuseByteReader.read(ByteBuffer,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testManglingForProtocols()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestSchema.testNestedNullNamespaceReferencing()": "AVRO-1473. Java: Fix references to names in the empty namespace.  Contributed by Gabriel Reid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1577275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.Params.setSchema(Schema)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FixedSchema.getFixedSize()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.ipc.OrderPlugin.clientSendRequest(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.TestAvroMultipleOutputs.map(LongWritable,Text,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DeflateCodec.decompress(byte,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.RecordBuilderBase.RecordBuilderBase(RecordBuilderBase,GenericData)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.clearSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.FastReaderBuilder.getReaderForBaseType(Schema,Schema)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.perf.test.reflect.TestStateDecode.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(SpecificData)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestCustomSchemaStore.findByFingerprint(long)": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.TestLogicalType.testInvalidLogicalTypeIgnored()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificCompiler.cap(String)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mojo.InduceMojo.getOutputFileName(Class)": "AVRO-2365 Enhancements to maven-plugin induce goal\n", "org.apache.avro.protobuf.Test.clone()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.clearIntArray()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroMultipleInputs.toBase64(String)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapreduce.AvroKeyRecordReader.AvroKeyRecordReader(Schema)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.TestCircularReferences.write(GenericData,Schema,D[])": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getElementType()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.TestStateEncode.mkSchema(String)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.AvroJob.setOutputCodec(JobConf,String)": "AVRO-788. Java: Add Snappy compression.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1089550 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getRequiredText(JsonNode,String,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testList()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Util.sampledList(List,int)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Props.add(String,String)": "AVRO-1157. Java: Extend schema and protocol property support from string-only to full JSON.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1404687 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.toString(Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.setSchema(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.Test.hasBytes()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServer.createMessage()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.test.reflect.ReflectRecordTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.InputBuffer.readLong()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.date()": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.DirectBinaryDecoder.DirectBinaryDecoder(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryData.readLong(byte,int)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.lockedArrayList()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.getSpecificData()": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.FieldAssembler.addField(Field)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionSchema.toJson(Names,JsonGenerator)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceIterable.next()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.SchemaBuilder.recordType(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getNumber()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.grpc.TestAvroProtocolGrpc.concatenate(String,boolean,long,int)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.hadoop.io.AvroSequenceFileOutputFormat.getOutputCompressionType(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.WriterUnion.WriterUnion(Schema,Schema,Action)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setB(boolean)": "AVRO-2117: Cleanup Java - Remove trailing spaces\n", "org.apache.avro.mapred.tether.TetherDataSerializer.serialize(TetherData)": "AVRO-570. Python: Add connector for tethered mapreduce. Contributed by Jeremy Lewi and Steven Willis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629897 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherOutputService.isFinished()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooArrayOrBuilderList()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.Record.put(int,Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testInt()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.genSourceData()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.specific.TestSpecificToFromByteArray.testSpecificByteArrayIncompatibleWithoutLogicalTypes()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.ipc.trace.TraceClientServlet.getTemplate(VelocityEngine,String)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ReferenceableTracker.getConvertedType()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Builder.clearSfixed64()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.newArray(Object,int)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Conversion.toArray(T,Schema,LogicalType)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.configure(byte,int,int)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRemoteException.AvroRemoteException(Object)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.AnotherSampleRecord.hashCode()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.testReflectDatumRead(String,byte,T[])": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.getParsingContext()": "AVRO-2364 Use Jackson TokenBuffer in JsonDecoder\n", "org.apache.avro.generic.GenericDatumReader.readRecord(Object,Schema,Schema,ValueReader)": "Add Java support for default values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@773638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.AnonymousServer.getAuthorizationID()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.RecordWithPromotionTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.reflect.AnotherSampleRecord.AnotherSampleRecord(Integer)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.MapTest.readInternal(Decoder)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolReflect.testEchoBytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.zip.start(I,zip_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.LocalTimestampMicrosConversion.fromLong(Long,Schema,LogicalType)": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.reflect.TestReflect.testLong()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaCompatibility.getReader()": "AVRO-1409. Java: Add an API for testing schema compatibility.  Contributed by Christophe Taton.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1551341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearFoo()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceNode.TraceNode(Span,List)": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithoutLogicalTypes.hasT()": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.protobuf.multiplefiles.Builder.getIntArrayCount()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestProtocolNetty.createTransceiver()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.idl.TestIdl.write()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.hasMatchError(Action)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.SchemaBuilder.values(Schema)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.TestSaslAnonymous.test64kRequest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Foo.setUint64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.TestSpecificLogicalTypes.testRecordWritePrimitivesReadLogicalTypes()": "AVRO-1847 IDL compiler should use BigDecimal to represent decimal logical type.\n\nAllows opt-in for the specific compiler to use BigDecimal when generating Java\nclasses for a Schema with decimal types.\n\nSigned-off-by: Sean Busbey <busbey@cloudera.com>\n", "org.apache.avro.file.DataFileWriter.sync()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.checkProp(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Foo.mergeFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.SpecificCompiler.setTemplateDir(String)": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DataFileWriter.NonCopyingByteArrayOutputStream(int)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.innerLongDecode(long)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjectionNewMethodsTwo(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.Response.getResponse()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.isError()": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.getLocalIndex(String,Schema,Schema)": "AVRO-6.  Provide easier implementation of alternate generic data representations.  Contributed by Hong Tang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764968 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Resolver.Action(Schema,Schema,Type)": "AVRO-2275 Support for user-supplied GenercData; cache default-values for fields.\n", "org.apache.avro.io.parsing.TestResolvingGrammarGenerator2.testFixed()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.add_args.read(org,add_args)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedObjectArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.ipc.Requestor.getContext()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testUnionAndFixedFields()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReflect.testReflectWithinGeneric()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolParsing.getSimpleProtocol()": "AVRO-152.  Add support for documentation strings to schemas, protocols and messages.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897311 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.TestSchemas.testVisit7()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.SortReducer.close()": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.FooOrBar.isSetFoo()": "AVRO-1512. Java: Support Thrift unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1598159 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.javaSplit(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SchemaBuilder.UnionBuilder(List)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.DeflateCodec.compress(ByteArrayOutputStream,OutputStream)": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumWriter.addClassCastMsg(ClassCastException,String)": "AVRO-2514:Making Avro serialization error message more actionable with... (#685)\n\n* AVRO-2514:Making Avro serialization error message more actionable with field name\r\n\r\n* Update GenericDatumWriter.java\r\n\r\nUpdate to runtime exception\r\n\r\n* Update ReflectDatumWriter.java\r\n\r\n* AVRO-2514:Update GennericDatumWriter method", "org.apache.avro.reflect.ReflectDatumReader.addField(Object,String,int,Object)": "AVRO-11.  Re-implement specific and reflect datum readers and writers to leverage AVRO-6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@764989 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testPrimitiveArrayBlocking()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueReader.doReadItemCount()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.avro.mapreduce.AvroTrevniRecordWriterBase.flush()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.ipc.netty.NettyTransportCodec.getSerial()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.CompleteRecord.CompleteRecord(int,CharSequence,long)": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.init(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtoConversions.getRecommendedSchema()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.RandomData.next()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestBulkData.testWrite()": "AVRO-24.  Add a simple bulk-data benchmark.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@820456 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBlockingIO2.testScan()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectDatumReader.getRelatedIds()": "AVRO-1046. Java: Fix ReflectDatumReader to be able to read generic and specific arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339864 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnWriter.writeValue(Object,Schema,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ReferenceManager.fromRecord(IndexedRecord,Schema,LogicalType)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.generic.GenericDatumReader.findStringClass(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.codegentest.FixedSizeStringConversion.getLogicalTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.thrift.test.Test.setBinaryField(ByteBuffer)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.TestLengthLimitedInputStream.setupRawStream()": "AVRO-135. Add compression to data files. (philz)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901959 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestConcatTool.getCodec(File)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ByteBufferRecord.getTp()": "AVRO-1743: override writeFixed in BlockingBinaryEncoder\nClosed #78\n", "org.apache.avro.message.BufferOutputStream.toBufferWithCopy()": "AVRO-1704: Java: Add support for single-message encoding.\n", "org.apache.avro.TestCircularReferences.getTracker()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestSaslDigestMd5.testStartServer()": "AVRO-641. Java: Add SASL security for socket-based RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@998347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.UnionFieldTypeBuilder.booleanBuilder()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.specific.ProtocolTask.doCompile(File,File)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.setInt64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.reflect.TestReflect.testAnnotationMultiAvroMeta()": "AVRO-2375: Allow repeating AvroMeta use (#506)\n\n", "org.apache.avro.ipc.netty.SSLChannelPipelineFactory.getAlgorithm()": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.file.SyncableFileOutputStream.SyncableFileOutputStream(File)": "AVRO-1388. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1539765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.EnumSchema.getEnumSymbols()": "AVRO-363. estSchema had two tests disabled; new test for named schemas named\nafter primitives. (philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@901919 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectDoubleArrayTest.TestStateEncode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.hadoop.io.AvroKeyComparator.setConf(Configuration)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.ReduceImpl.configure(JobConf)": "AVRO-1052. Java: Add AvroMultipleOutputFormat, to permit splitting mapreduce output to multiple locations.  Contributed by Ashish Nagavaram.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1341230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.M(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Props.write(JsonGenerator)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.ArrayTest.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.TestResolvingIO.data3()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.tearDow()": "AVRO-1642: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.\n", "org.apache.avro.protobuf.noopt.Foo.addRepeatedField(com,java)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "avro.examples.baseball.Builder.getTimestampMicros()": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.mapreduce.AvroRecordReaderBase.getProgress()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionBasedAccessor.ReflectionBasedAccessor(Field)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectionUtil.resetFieldAccess()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileMeta.testUseMeta()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.tether.TetherRecordReader.next(TetherData,NullWritable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.MapSchema.getKeyType()": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.start(I,ping_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.basic.SmallLongTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.SchemaBuilder.endUnion()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.clearIntArray()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.AvroMultipleOutputs.checkNamedOutput(JobConf,String,boolean)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.Test.getSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseTypeBuilder.unionOf()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.SpecificCompilerTool.accept(File,String)": "AVRO-877. Java: Add support for compiling multiple, dependent schemas.  Contributed by Bill Graham.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1161755 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.Counter.map(AvroKey,AvroValue,Context)": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.readPrimitiveArray(Object,Class,long,ResolvingDecoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestImpl.echoBytes(byte)": "AVRO-433.  Fix exceptions in Java reflect RPC.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@918783 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testR1()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCircularReferences.getConvertedType()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.optionalString(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaCompatibilityEnumDefaults.testEnumDefaultAppliedWhenFieldDefaultDefined()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.JsonDecoder.getVaueAsTree(JsonParser)": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.readIndex()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroMissingFieldException.addParentField(Field)": "AVRO-2114: Make missing value exceptions in nested structures easier to read.\n\nThis closes #263\n", "org.apache.avro.protobuf.multiplefiles.Builder.getUint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.compiler.specific.TestSpecificCompiler.assertCompilesWithJavaCompiler(File,Collection,boolean)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.protobuf.noopt.Builder.mergeUnknownFields(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BaseFieldTypeBuilder.map()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.FooBarSpecificRecord.setRelatedids(java)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.specific.Avro14SpecificCompiler.unbox(Schema)": "Java: Use Velocity templates to generate specific code.  Contributed by philz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1029784 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearDouble()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.specific.SpecificResponder.getDatumReader(Schema)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.TestEncoder.writeArrayEnd()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldTest.getConversion(int)": "[AVRO-2630] Part 2 - allow the JSR310 conversions to truncate at the appropriate value\n", "org.apache.avro.hadoop.io.AvroSerializer.getWriterSchema()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.AvroRemoteException.getValue()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TrevniToJsonTool.primitiveToJson(ColumnMetaData,Object)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldTypeBuilder.optional()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.noopt.Test.newBuilderForType(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.trevni.InputBuffer.readBytes()": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.codegentest.TestLogicalTypesWithDefaults.testDefaultValueOfNonNullField()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.protobuf.noopt.Test.getSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.tether.TetherData.TetherData(ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Avro14SpecificCompiler.compileInterface(Protocol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilderException.SchemaBuilderException(Throwable)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.hadoop.io.Writer.Writer(Options)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.Util.addEvent(Span,SpanEvent)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.getPropAsClass(Schema,String)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TraceClientServlet.TraceClientServlet()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.getValueDescriptor()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestBinaryDecoder.testEOFBytes()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.mangle(String,boolean)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.CustomSchemaStore.findByFingerprint(long)": "AVRO-1932: Java: Allow setting the SchemaStore on generated classes.\n", "org.apache.avro.specific.SpecificCompiler.compile(Schema,String,int)": "AVRO-89.  Use unboxed types for generated fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@803730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.grpc.AvroResponseInputStream.drainTo(OutputStream)": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.protobuf.ProtoConversions.getConvertedType()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.thrift.test.TestTupleSchemeFactory.getScheme()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "example.MapReduceAvroWordCount.run(String)": "AVRO-1426. Java: Add mapreduce word count example.  Contributed by Jesse Anderson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556069 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testEnumWithDefault()": "AVRO-1340. Java: Add enum defaults, including builder & IDL support.\n\n* AVRO-1340: Added Enum Defaults and unit tests.\r\n\r\n* AVRO-1340: Added support for enum defaults to SchemaBuilder\r\n\r\n* AVRO-1340: Added ResolvingVisitor enum default, introduces an attempt at the idl.jj for enum default but tests not passing for simple.avdl\r\n\r\n* AVRO-1340: Added override annotation to getEnumDefault() implementation\r\n\r\n* AVRO-1340: Added Doug Cutting\\'s fix to the idl.jj for Avro enum parsing. Added test case to simple.avdl and simple.avpr\r\n\r\n* AVRO-1340: Updated docs, updated the reserved keywords for enums so that the @default annotation no longer works on enum avdl definitions. Updated the way that SchemaBuilder allows an enum to be built sith a default by separating out the default setter.\r\n\r\n* AVRO-1340: Updated the docs and verified that the generated doc is readable and well-formatted.\r\n\r\n* AVRO-1340: Updated the enum type check to a reasonable, sane check.\r\n\r\n* AVRO-1340: Added the missing  semicolon to enum doc\r\n", "org.apache.avro.file.DataFileWriter.DataFileWriter(File,DatumWriter)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.getReaderUnionSym(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.defaultValue(Field)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.specific.TestSpecificBuilderTree.getBuilderForNullRecord()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestTemplatedCompilerFidelity.testProtocols()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearTimestamp()": "AVRO-2344: Handle timestamp logical types corresponding to proto Timestamp\n", "org.apache.avro.io.LongTest.writeInternal(Encoder)": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.completeSchema(Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.schema.SchemasTest.afterVisitNonTerminal(Schema)": "[add] resolution code using new reusable visitor.", "org.apache.avro.io.ValueWriter.writeBuffer(ByteBuffer)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.UnsafeLongField.UnsafeLongField(Field)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LogicalType.getName()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testForwardReference()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.getEnumDefault()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.generic.GenericWithDefaultTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.SchemaBuilder.FixedDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.internalGetValueMap()": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.start(I,add_args,org)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.GenericDefault.noDefault()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.clientReceiveResponse(RPCContext)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.reflect.ReflectRecordTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.EnumDefault.enumDefault(String)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestDataFileCustomSync.testRandomSync()": "AVRO-1685. Allow specifying sync in DataFileWriter.create. Contributed by Sehrope Sarkuni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1687559 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.SpecificRequestor(Class,Transceiver,SpecificData)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.LogicalTypes.getTypeName()": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.ipc.netty.NettyTransceiver.readBuffers()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.message.RawMessageDecoder.decode(InputStream,D)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestAvroKeyRecordWriter.testSycnableWrite()": "AVRO-1418. Java: Add sync support to AvroMultipleOutputs.  Contributed by Deepak Kumar V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1556378 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericNestedFakeTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.DataFileWriter.setFlushOnEveryBlock(boolean)": "AVRO-1387. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1535888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithCallbacks.add()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.util.ByteBufferInputStream.readBuffer(int)": "[AVRO-813] Keep the InputStream contract of -1 for eof\nPatch from Bruno Dumon applied\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setF32(java)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.specific.Avro14SpecificCompiler.mangle(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.startItem()": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Integer,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestEncoders.testJsonEncoderWhenIncludeNamespaceOptionIsFalse()": "spotless:apply\n", "org.apache.avro.ipc.Requestor.Requestor(Protocol,Transceiver)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.generic.TestStateDecode.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.Perf.GenericOneTimeDecoderUse()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestStopwatch.testNotStarted2()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestSpecificDatumReader.serializeRecord(FooBarSpecificRecord)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.netty.TestNettyServer.awaitMessages()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.compiler.specific.SpecificCompiler.isUnboxedJavaTypeNullable(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReflectNestedLargeFloatArrayBlockedTest.ReflectNestedLargeFloatArrayBlockedTest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.DataFileWriter.init(OutputStream,DatumWriter)": "Revised data file format and Java API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@894889 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestValidatingIO.IntPair(int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ByteBufferTest.readOneXFromAvro(Schema,ByteArrayOutputStream)": "AVRO-1081. Java: Fix to be able to write ByteBuffers that have no backing array.  Also fix reflection to correctly read ByteBuffer fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1339825 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.run(Tool,String[])": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.jetty.HttpServer.HttpServer(ResponderServlet,ConnectionFactory,String,int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.Schema.getQualified(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryEncoder.SimpleByteWriter(OutputStream)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testDefaults()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.codegentest.FixedSizeString.compareTo(FixedSizeString)": "AVRO-2493: Add custom logical types support for avro-maven-plugin. (#535)\n\n* Add custom logical types support for avro-maven-plugin.\r\n\r\n* Remove default LogicalTypeFactory.getTypeName implementation according to review remarks.\r\n\r\n* Return default implementation for LogicalTypeFactory.getTypeName according to review.\r\n\r\nCo-authored-by: Daniel Kulp <dkulp@apache.org>", "org.apache.avro.mapred.AvroOutputFormat.getCodecFactory(JobConf)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.FooRecord.toString()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.M.newBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.Test.getSymsCount()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTest.ResolvingTest(String,String,String)": "AVRO-2269 Make Perf.java more usable.\n", "org.apache.avro.io.TestBlockingIO.jss(int,char)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.hasBool()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.GenericTest.newReader()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapreduce.TestAvroKeyInputFormat.testCreateRecordReader()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.mapred.tether.TetherOutputService.configure(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(Schema)": "AVRO-120.  Improved package and namespace handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819010 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getFooOrBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Foo.isSetNum2()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyTransceiver.NettyTransceiver(InetSocketAddress,ChannelFactory,Map)": "AVRO-2627: Unify NullPointerException Management\n", "org.apache.avro.reflect.TestReflect.testAvroAliasOnClass()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ResolvingTable.isSkipAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerWithSSL.getAlgorithm()": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.io.ValueWriter.SimpleByteWriter(OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.parseFrom(byte,com)": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.setBalance(long)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.specific.SpecificRequestor.getDatumWriter(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericRecordBuilder.set(Field,Object)": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.Slf4jLogChute.log(int,String,Throwable)": "[AVRO-2228] Bump Apache Velocity to 2.0\n\n- Remove Slf4jLogChute since 2.0 uses SLF4J itself\n- Update $velocityHasNext to $foreach.hasNext because of deprecation\n- Update $velocityCount to $foreach.count because of deprecation\n- 2.0 does not depend on apache-common collections anymore which\n  used to be an old version with security issues\n", "org.apache.avro.ipc.trace.SpanAggregator.SpanAggregationResults()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.SortedKeyValueFile.loadIndexFile(Configuration,Path,Schema)": "AVRO-1351. Extend SortedKeyValueFile to support data models besides generic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1501579 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.InputBuffer.tell()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.ReadDouble.ReadDouble()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.TestStateEncode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.protobuf.multiplefiles.Builder.build()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.BufferAccessor.getPos()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BasicTest.writeTest()": "AVRO-752. Java: Enhanced Performance Test Suite\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1066139 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolGeneric.testHello()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.protobuf.noopt.Test.parseFrom(byte)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.SchemaBuilder.defaultValue(Object)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.setByteOptionalField(byte)": "AVRO-1564. Java: Fix handling of optional byte field in Thrift.  Contributed by Michael Pershyn.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1641892 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestResolvingIO.test_compatible(Encoding,int,String,String,String,String)": "AVRO-81.  Switch back from TestNG to JUnit.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@798716 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestCompare.testSpecificRecord()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.file.DataFileWriter.create(Schema,OutputStream)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BazRecord.BazRecord(int)": "AVRO-101.  Add Java reflect API test case using nested classes.  Contributed by Eelco Hillenius.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@819039 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.StringBldr.StringBldr(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.AsyncProcessor(I)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearSint32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestCircularReferences.getSchema()": "AVRO-1692. Allow more than one logical type for a Java class. Contributed by Ryan Blue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.TestNettyServerConcurrentExecution.test()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFileReflect.addAndReturn(T)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testNull()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.TestReflect.AnotherSampleRecord(Integer)": "AVRO-141.  Fix a NullPointerException in ReflectData#isRecord().  Contributed by Isabel Drost.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@825217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.read(org,add_result)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.setFixed32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mojo.TestProtocolMojo.testSetCompilerVelocityAdditionalTools()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.io.Perf.IntTest(String,String)": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.mkEnumAdjust(List,List)": "AVRO-1220. Java: Fix a deadlock when reading by replacing parser symbol constructors with factory methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1444297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.floatDefault(float)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.M.parseFrom(com)": "AVRO-1309. Java: Fix nested protobuf enums.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471043 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReflectNestedLargeFloatArrayTest.ReflectNestedLargeFloatArrayTest()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.isFixed(Object)": "AVRO-246. Java: Fix union dispatch to consider full schema name for records, enums and fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.getMessageName()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingDecoder.readNull()": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.clearField(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.TestCompare.check(String,Object,Object)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.MetaData.set(String,long)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.optionalBoolean(String,boolean)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeIndex(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.ResolvingGrammarGenerator.firstMatchingBranch(Schema,Schema,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestDataFile.testGeneratedSpecific()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.ReflectResponder(Class,Object)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763813 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.getName()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyClientAvroHandler.channelInactive(ChannelHandlerContext)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.Schema.Field(Schema,JsonNode)": "AVRO-109.  Add Java support for controlling sort order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@811128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.iterator()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.MapBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.testDuble()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.TestRpcPluginOrdering.createTestMessage()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.test.TestOutputInterceptor.onTestSuccess(ITestResult)": "AVRO-26.  Switch tests from JUnit to TestNG.  Contributed by Konstantin Boudnik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776049 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.ZstandardLoader.output(OutputStream,int,boolean)": "AVRO-2726: Remove deprecation warnings\n", "org.apache.avro.ipc.Responder.respond(Protocol,List)": "Merge http://people.apache.org/~cutting/avro\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@763776 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.Requestor.readHandshake(ValueReader)": "AVRO-2.  Optimized Java RPC handshake protocol.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@781125 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestIOBuffers.testBoolean()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.noopt.M.getUnknownFields()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Schema.getEnumOrdinal(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherInputFormat.getRecordReader(InputSplit,JobConf,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.setF32(float)": "AVRO-1684: Add time types to the specific compiler.\n\nThis adds a dependency on Joda time for both the compiler and the\ncompiled classes. When generating Java classes, any conversion that is\nregistered with the compiler's SpecificData instance will be used.\n\nCloses #86.\n", "org.apache.avro.ipc.SocketServer.run()": "AVRO-285.  Specify one-way messages and implement in Java.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@944045 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificData.getSchema(java)": "AVRO-607: Java: Make SpecificData schema cache thread-safe.\n\nChanged SpecificData.getSchema to use a thread-safe Cache class from\nGoogle Guava.\n", "org.apache.avro.perf.test.record.ValidatingRecordTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.generic.TestGenericDatumWriter.writeMapStart()": "AVRO-1200. DatumWriter can write malformed data if collection is modified during write.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1407419 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestAvroMultipleInputs.setName(CharSequence)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.ipc.stats.Histogram.next()": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.BytesBuilder.BytesBuilder(Completion,NameContext)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Array.hasNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Test.maybeForceBuilderInitialization()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.TestReflectJob.reduce(Text,Iterable,AvroCollector,Reporter)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.SampleRecord.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TestFileSpanStorage.testBasicMaxSpans()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(Schema)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.unionBoolean(String,boolean,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValidatingEncoder.configure(Encoder)": "AVRO-769. Update javadoc and fix return type of ValidatingEncoder#configure().  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1075938 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroOutputFormat.setSyncInterval(JobConf,int)": "AVRO-719. Java: Permit MapReduce programs to alter output file sync interval.  Contributed by Joe Crobak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056517 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setB(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.RPCContext.requestSessionMeta()": "AVRO-76.  Add Java RPC plugin framework.  Contributed by George Porter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@799766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.writeFixed(byte,int,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.add_result.findByThriftId(int)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "avro.examples.baseball.FieldTest.put(int,java)": "[AVRO-2278] getter semantics confusing. (#864)\n\n* [fix] getter semantics confusing.\r\n\r\nimpossible to distinguish between a correct field with the value null.\r\nand a nonsense field.\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [add] sync up exception behavior for consistency, and better messages.\r\n\r\n* [add] helper method.", "org.apache.avro.protobuf.multiplefiles.Foo.hasInt64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.stats.Histogram.Histogram(Segmenter)": "AVRO-273, AVRO-275, & AVRO-279. Add Java RPC statistics collection and display.  Contributed by Philip Zeyliger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@897299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.generic.GenericResponder.readRequest(Schema,Schema,Decoder)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.Avro14SpecificCompiler.header(StringBuilder,String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.isSet(_Fields)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.hadoop.io.SequenceFileBase.RecordCompressWriterBase(FileSystem,Configuration,Path,Class,Class,int,short,long,CompressionCodec,Progressable,Metadata)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.codec.CustomCodec.equals(Object)": "AVRO-970. Java: Make Codec API public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1435347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.Jsr310TimeConversions.toLong(Instant,Schema,LogicalType)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.TestProtocolSpecific.testError()": "AVRO-839. Java: Add accessor methods and builders to generated java classes.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1162253 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.record.ResolvingRecordTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.specific.TestSpecificBuilderTree.getBuilderForNullBuilder()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.protobuf.multiplefiles.Builder.setSint32(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.FieldTypeBuilder.nullable()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestSchema.testUnion()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.hasNext()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.Builder.hasFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.write(org,Test)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.file.TestSeekableByteArrayInput.getTestSchema()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testLisp()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.file.Writer.getIndexInterval()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroWrapper.AvroWrapper()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TwoWayMessage.TwoWayMessage(String,String,Map,Schema,Schema,Schema)": "AVRO-965. Java: Enhance IDL to support properties for protocols and messages.  Contributed by George Fletcher.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1212616 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testAnnotationAvroNameCollide()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.CallFuture.getResult()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServerAvroHandler.channelRead0(ChannelHandlerContext,NettyDataPack)": "[AVRO-2806] Upgrade from Netty 3 -> Netty 4\nCloses #887\n", "org.apache.avro.SchemaCompatibility.checkReaderWriterRecordFields(Schema,Schema)": "AVRO-1933: Add more specific error details to SchemaCompatibility class\n\nCloses #200\n\nSigned-off-by: Sriharsha Chintalapani <harsha@hortonworks.com>\nSigned-off-by: Anna Szonyi <szonyi@cloudera.com>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Gabor Szadovszky <gabor@apache.org>\n", "org.apache.avro.TestDataFile.test12()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificRecordBuilder.testInterop()": "AVRO-996. Java: SpecificRecord builder pattern object copy fails with unions in some cases.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1241366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.recordWrittenWithExtendedSchemaCanBeReadWithOriginalSchemaButLossOfData()": "[AVRO-2278] getter semantics confusing. (#864)\n\n* [fix] getter semantics confusing.\r\n\r\nimpossible to distinguish between a correct field with the value null.\r\nand a nonsense field.\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [fix]delete soem generated class\r\n\r\n* [add] sync up exception behavior for consistency, and better messages.\r\n\r\n* [add] helper method.", "org.apache.avro.protobuf.multiplefiles.Builder.clone()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.Incompatibility.Incompatibility(SchemaIncompatibilityType,Schema,Schema,String,List)": "AVRO-2003: Report specific location of schema incompatibilities\n\nCloses #201\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.compiler.specific.SpecificCompiler.addLogicalTypeConversions(SpecificData)": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.specific.SpecificDatumReader.readRecord(Object,Schema,ResolvingDecoder)": "AVRO-2090 second try (#350)\n\n* Finished initial implementation (not tested).\r\n\r\n* Added Reader/Decoder code\r\n\r\n* Made some of the changes suggested by Doug.\r\n\r\n* Hide helper methods related to custom coding.  Changed them from public to protected.  Also changed name of encode and decode to customEncode and customDecode to be more clear as to their function.\r\n\r\n* Allow dynamic changes to flag that controls whether or not the custom en/decoders are used.\r\n\r\n* Fixed typos in TestSpecificCompiler.java\r\n\r\n* New test case: breaks new code-gen when schema needs resolution.\r\n\r\n* Fixed bug with decoding when the schema has been migrated.\r\n\r\n* Added test-with-custom-coders execution of testing and fixed some problems that this uncovered.\r\n\r\n* Fixed potential performance problem of redundantly allocating objects.\r\n\r\n* Added documentation (also update AVRO-2090 description to point to new docs).\r\n\r\n* Small doc fix (I forgot to commit these changes before pushing)\r\n", "org.apache.avro.reflect.TestByteBuffer.before()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.thrift.test.Client.send_ping()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithJsr310LogicalTypes.setF32(java)": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.ipc.specific.TestSpecificRequestor.testToString()": "AVRO-1591. Java: Fix specific RPC so that proxies implement hashCode(), equals() and toString(). Contributed by Mark Spadoni.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.tether.TetherInputFormat.listStatus(JobConf)": "AVRO-1234. Java: Permit AvroInputFormat to process files whose names don't end in .avro.  Contributed by Dave Beech & Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1550605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectDatumReader.createString(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.enumRecordCanBeReadWithExtendedEnumSchema()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.io.ValueWriter.writeInt(int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.basic.BytesTest.decode(TestStateDecode)": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.file.DataFileReader12.pastSync(long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TestTraceSingletons.testNoConfiguration()": "AVRO-636. Expose Singleton Method for TracePlugin.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@990299 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.JsonDecoder.configure(String)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.Builder.setDec(java)": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.Error.findByName(String)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.reflect.ReflectFloatArrayTest.TestStateDecode()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.io.JsonDecoder.getLongValue()": "AVRO-895. JsonDecoder does not tolerate JSON records with different field order\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178066 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Sequence.remove()": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaValidation.testReadAllPrior()": "AVRO-1315. Java: Schema Validation utilities. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1601345 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.TestColumnFile.codecs()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.SpecificRecordBase.equals(SpecificRecord,Object)": "AVRO-110, AVRO-41.  Implement Comparable in generic and specific.  Also convert GenericData and ReflectData to singletons.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@810638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.Trace.printBrief()": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.ColumnDescriptor.ensureBlocksRead()": "AVRO-2117: Cleanup Java - Remove redundant type arguments\n", "org.apache.avro.codegentest.TestNullableLogicalTypes.testDate()": "Improved conversions handling + pluggable conversions support [AVRO-1891, AVRO-2065] (#329)\n\n* Added end-to-end test that reproduces union with logical types problem\r\n\r\n* Adding required conversions to SpecificData in generated class\r\n(same as in SpecificCompiler)\r\n\r\n* Added test with BigDecimal\r\n\r\n* Added test with BigDecimal\r\n\r\n* Introduced customizable conversions in compiler and Maven plugin.\r\n\r\n* Fixed bug\r\n\r\n* Fixed Maven plugin classpath\r\n\r\n* Get the correct SpecificData whenever possible, to get the right conversions\r\n\r\n* No need to expose the map of conversions so expose only the values.\r\n\r\n* Better tests\r\n\r\n* Default values and conversions\r\n\r\n* Cleanup of some changes in Maven plugin\r\n\r\n* Fixed equals() for classes with nested logical types. Improved tests\r\n\r\n* Added missing copyright statement\r\n\r\n* Fixed compile error after rebase\r\n\r\n* Fixed problem with logical types in nested records.\r\n\r\n* Fixed failing test.\r\n\r\n* Fixed serialization problem when creating SpecificDatumReader from a class\r\n", "org.apache.avro.protobuf.Test.M(com)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.HadoopMapper.map(AvroWrapper,NullWritable,OutputCollector,Reporter)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.SchemaBuilder.nullable()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BinaryDecoder.skipBytes()": "AVRO-2351: Long/Int in Binary Decoder\n", "org.apache.avro.reflect.ReflectDatumWriter.writeEnum(Schema,Object,ValueWriter)": "AVRO-18.  Add support for enum types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@776496 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.LitS2.equals(Object)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.SleepyResponder.respond(Message,Object)": "AVRO-595. Add Basic Trace Collection and Propagation.\n(Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@982434 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(GenericContainer,Long)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.reflect.RecordWithStringUUID.equals(Object)": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testNoPackageSchema()": "AVRO-86. Java: Fix NullPointerException when reflect API infers schema for a class without a package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989252 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Utf8,ByteBuffer)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testRecord()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericData.isLong(Object)": "AVRO-1201. Java: Fix GenericData#toString() to generate valid JSON for enum values. Contributed by Sharmarke Aden.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1412334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.SpecificCompiler.enqueue(Schema)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.Requestor.readHandshake(Decoder)": "AVRO-115.  Remove RPC sessions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@818293 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.ConcatTool.expandsInputFiles(List)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.ipc.RPCContext.setMessage(Message)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.AvroColumnReader.iterator()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.thrift.test.Test.read(org,Test)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.io.TestBinaryDecoder.testLongTooShort()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.Vals(Random)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.hasBytes()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.thrift.test.ErrorStandardScheme.read(org,Error)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.Conversions.toBytes(BigDecimal,Schema,LogicalType)": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.protobuf.multiplefiles.Foo.parsePartialFrom(com,com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.protobuf.noopt.Test.setFixed64(long)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.ValidatingDecoder.configure(Decoder)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReadLong.readInternal(Decoder)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.ReadBoolean()": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FieldBuilderBase.requiredFloat(String)": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Foo.zip(org)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingValueWriter.BlockingValueWriter(OutputStream)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.unsetI16Field()": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.TestProtobuf.testNestedClassNamespace()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.LongSchema.toJson(Names,JsonGenerator)": "AVRO-90.  Fix Java's JSON codec to correctly encode unions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@805549 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestNonStringMapKeys.log(String)": "AVRO-680. Java: Support non-string map keys. Contributed by Sachin Goyal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1666774 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingDecoder.ParsingDecoder(Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.getFields(Class,boolean)": "[AVRO-2579]: Fix tests by sorting fields for deterministic order\n", "org.apache.avro.ipc.AvroRemoteException.AvroRemoteException(Throwable)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.DateAsLongEncoding.write(Object,Encoder)": "AVRO-1341. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1511531 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Builder.clearString()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.test.BasicRecord.BasicRecord(Random)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.perf.test.reflect.ReflectLargeFloatArrayTest.doSetupTrial()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.UnionBuilder.UnionBuilder(Completion,NameContext)": "AVRO-2629: Use Java Collections and Arrays Utilities\n", "org.apache.avro.protobuf.noopt.Test.setBytes(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.mapred.TestSequenceFileReader.testWriteSequenceFile()": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.TestSchemaBuilder.testMissingRecordName()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectData.isString(Object)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.TestBinaryDecoder.testInputStreamProxy()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.SnappyCodec.decompress(ByteBuffer)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.perf.test.reflect.ReflectIntArrayTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.io.ValidatingDecoder.init(InputStream)": "AVRO-769. Java: Align Decoder/Encoder APIs.  Contributed by scottcarey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074751 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.FastReaderBuilder.createUnionReader(FieldReader)": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.protobuf.noopt.Foo.addIntArray(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.io.DirectBinaryDecoder.doReadBytes(byte,int,int)": "AVRO-392. Overhaul of Java binary decoder.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@911995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Foo.toBuilder()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.BarRecord.BarRecord(String)": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.Perf.getOutputStream()": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.reflect.ReflectNestedFloatArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.thrift.ThriftData.isBytes(Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapred.tether.TetherOutputService.complete()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.R11.equals(Object)": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileRepairTool.testReportCorruptRecord()": "AVRO-834. Java: Data File corruption recovery tool. Contributed by scottcarey and tomwhite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1640179 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.Fixed.equals(Object)": "AVRO-10.  Add Java support for fixed-sized types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@777638 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.internalGetFieldAccessorTable()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.generic.TestGenericData.testByteBufferDeepCopy()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.GenericData.compareTo(GenericArray)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.hasFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.TestRpcPluginOrdering.serverConnecting(RPCContext)": "AVRO-722. Java: Fix ordering of calls to RPC plugins. Contributed by Stephen Gargan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1056425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPlugin.serverReceiveRequest(RPCContext)": "AVRO-587. Add Charts and Templating to Stats View \n(Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.BasicArrayState.getArraySize()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.FieldBuilderBase.unionMap(String,Schema,Map,Schema[])": "AVRO-1274. Java: Add a schema builder API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1476973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.NettyServer.handleUpstream(ChannelHandlerContext,ChannelEvent)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.TestSchemaNormalization.data()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.reflect.UnsafeCharField.set(Object,Object)": "AVRO-1282. Java: Use sun.misc.Unsafe to improve Reflect API Performance.\n    (Leo Romanoff via scottcarey)\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1477712 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Schema.EnumSchema(String,String,List)": "AVRO-255.  Fix java implementation so that, when parsing schemas, unspecified namespaces are defaulted to nearest enclosing namespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@891000 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.getSfixed32()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.R8.equals(Object)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.StatsPluginOverhead.IdentityResponder(Protocol)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ParsingTable.getTerminalName(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.TwoWayMessage(String,String,JsonProperties,Schema,Schema,Schema)": "[AVRO-1605] Remove deprecated API's that expose JsonNode\n", "org.apache.avro.mapred.SortReducer.configure(JobConf)": "AVRO-763. Java MapReduce API: add support for configure() and close() methods to mappers and reducers.  Contributed by Marshall Pierce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1095493 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.getSingleton()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.ByteWritableConverter.convert(ByteWritable)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.ThriftData.newRecord(Object,Schema)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.readFileSpans(File,List)": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.parseDelimitedFrom(java)": "AVRO-1334. Java: Update versions of many dependencies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1626912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.hasErrors(Symbol,Symbol)": "AVRO-2122: Cannot validate schemas with recursive definitions\n\nTrack which symbols have been visited to avoid StackOverflowErrors\nwhen validating schemas with recursive definitions\n\nThis closes #281\n\nSigned-off-by: Nandor Kollar <nkollar@apache.org>\n", "org.apache.avro.DecimalConversion.fromBytes(ByteBuffer,Schema,LogicalType)": "AVRO-1869: Java: Fix Decimal conversion from ByteBuffer.\n", "org.apache.avro.perf.test.generic.GenericWithPromotionTest.TestStateDecode()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.data.LossyTimeMicrosConversion.toLong(LocalTime,Schema,LogicalType)": "AVRO-1672: Add time logical types and conversions.\n\nThis uses Joda classes to represent the new logical types:\n* date => LocalDate\n* time-millis => LocalTime\n* time-micros => LocalTime\n* timestamp-millis => DateTime\n* timestamp-micros => DateTime\n\nJoda is an optional dependency and will only be loaded if the\nconversions in org.apache.avro.data.TimeConversions are referenced. By\ndefault, no logical type conversions are enabled so there is no\nadditional runtime dependency for existing applications.\n\nMicrosecond types use Joda objects with millisecond precision. Because\nthis representation loses the microseconds, there are two conversions\nfor both microsecond types: a read-only conversion that will throw an\nexception if used to write, and a \"lossy\" conversion that will write a\nmillisecond value as microseconds by convertsion. This is called \"lossy\"\nbecause reading a microsecond value and writing it back out will lose\nthe microseconds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1690131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ResolvingTable.isWriterUnionAction(int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.DoNothing.DoNothing(Schema,Schema)": "AVRO-2275 Refactor schema-resolution code from grammar-generation so we can reuse it.\n", "org.apache.avro.ipc.NettyServer.NettyServer(Responder,InetSocketAddress)": "AVRO-898.  Java: Extend NettyServer to support SSL.  Contributed by Vadim Tsarik.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178536 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.TracePlugin.serverSendResponse(RPCContext)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.reduce(Text,Iterable,Context)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.trace.TracePlugin.TraceResponder(SpanStorage)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestProtocolDatagram.testStartServer()": "AVRO-544.  Java: Add start() and join() methods to Server interface.  Contributed by hammer & cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@965658 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReflect.testSchema()": "AVRO-80.  Java reflect API no longer uses Avro-specific classes for string and array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@882753 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.AvroKeyComparator.compare(AvroWrapper,AvroWrapper)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.GenericReaderTest.genData(Encoder)": "AVRO-557. Java: Cache ResolvingDecoder instances in GenericDatumReader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@984240 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.Histogram.getBoundaryLabels()": "AVRO-584. Update Histogram for Stats Plugin (Contributed by Patrick Wendell)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@957730 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.addProp(JsonProperties,String,JsonNode)": "Squashed commit of the following:\n\ncommit 6d4d6d6a963fd2363d9f5549f76140bdddfceb7d\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Sun Oct 16 17:22:53 2016 +0200\n\n    AVRO-1605 - Removed some unnecessary Accessor methods and callers\n\ncommit adcefac6cc1c7021b2a27da16b40c1253eff64cc\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 18:35:26 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (Removed jackson references from javadoc)\n\ncommit dc2ca7ee9f881901aaf23d9221cc2d6413b43dc4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Thu Sep 29 14:31:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API\n\ncommit 4e4c5ec63b3b0cf203e3af21c1cbc7a51d63c9f4\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 17:08:15 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#4)\n\ncommit 5fb5a5c14fadc03f44879f029114c4705749dfad\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 16:54:44 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#3)\n\ncommit 378fcc5aa6be560c301e23b73f919bc0eb98dd05\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Wed Sep 28 11:11:40 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE#2)\n\ncommit 12533657f9bc73c73b1009ed2d9dd39ca2401a20\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\nDate:   Mon Sep 26 16:25:19 2016 +0200\n\n    AVRO-1605 - Remove Jackson classes from public API (INCOMPLETE)\n", "org.apache.avro.protobuf.multiplefiles.Foo.Builder(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.UnionFieldTypeBuilder.floatType()": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.clearFixed64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.ipc.trace.TraceCollection.getAverageBytes(SortedSet)": "AVRO-614. Improve Trace frontend UI. (Patrick Wendell via philz)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@989991 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.ReflectResponder.ReflectResponder(Class,Object,ReflectData)": "AVRO-185. Java's specific API no longer depends on reflection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@835165 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificDatumReader.findStringClass(Schema)": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.testInputFormat()": "AVRO-1254. Java: Add support for new mapreduce APIs to Trevni.  Contributed by Ted Malaska.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1447823 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.ping_result.writeObject(java)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.mapred.Pair.Pair(Object,CharSequence)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.ExternalizableInput.skip(long)": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.Symbol.Alternative(Symbol,String)": "AVRO-50.  Implement JSON data codec in Java.  Contributed by Thiruvalluvan M.G. and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@796868 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.parsing.UnionAdjustAction.flatten(Map,Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.util.WeakIdentityHashMap.hashCode()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.multiplefiles.Foo.setBool(boolean)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DataFileWriter.isReservedMeta(String)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.TestShredder.testDefaultValue()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "avro.examples.baseball.Player.getFirstName()": "AVRO-1252. Java: Add a '-string' option to compiler command line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1446349 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Processor.Processor(I)": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.TaggedInputSplit.toString()": "AVRO-1439. Java: Add AvroMultipleInputs for mapred.  Contributed by Harsh J.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1564562 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.M.newBuilderForType(com)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.hadoop.io.AvroSequenceFileOutputFormat.close(TaskAttemptContext)": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.TestSaslDigestMd5.testAnonymousClient()": "AVRO-1828: Add EditorConfig file and cleanup of whitespace violations\n", "org.apache.avro.ipc.AnonymousServer.unwrap(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchema.testLongDefaultValue()": "AVRO-2648: Incorrect validation of numeric default values\n\nValidation of numeric default values in Java is incorrect and results\nin API inconsistencies. Consider the following examples:\n\nDouble values as int field default values:\npublic void testDoubleAsIntDefaultValue() {\n  Schema.Field field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.1);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.1)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n\n  field = new Schema.Field(\"myField\",\n          Schema.create(Schema.Type.INT), \"doc\", 1.0);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal DoubleNode (1.0)\n  field.defaultVal(); // null\n  GenericData.get().getDefaultValue(field); // Integer (1)\n}\n\nInvalid long value as int field default value:\npublic void testInvalidLongAsIntDefault() {\n  Schema.Field field = new Schema.Field(\"myField\",\n         Schema.create(Schema.Type.INT), \"doc\", Integer.MAX_VALUE + 1L);\n  field.hasDefaultValue(); // true\n  field.defaultValue(); // internal LongNode (2147483648)\n  field.defaultVal(); // Long (2147483648)\n  GenericData.get().getDefaultValue(field); // Integer (-2147483648)\n}\n\nThis PR makes changes to invalidate incorrect default values for INT and\nLONG schemas, including all floating point values, e.g. 1.0.\nAdditionally it contains changes to try and return the appropriate\nObject type given the schema type.\n\nThis change is necessary for correctness and consitency but also\nbecause users cannot disable default value validation and handle\nthese cases on their own since the underlying Field.defaultValue()\nis no longer public. Users only have access to default values\nmutated by Field.defaultVal() and GenericData.getDefaultValue().\n\nNotes on JacksonUtils.toObject():\n - This method is used to convert the underlying JsonNode default value\n  to an Object when Field.defaultVal() is called. This method is\n  invoked regardless of whether default value validation is true or\n  false.\n - For LongNode values we continue to return Long values for INT\n   schemas in the case we cannot safely convert to an Integer.\n   This behavior, while maintained, is inconsistent with that\n   of FloatNode / DoubleNode where null is returned for INT\n   and LONG schemas. Additional changes may be needed for\n   further consistency.\n\nCloses #739\n(cherry picked from commit 8b5c11ade7f73eb74a0f017bd52b9b485d68d42f)\n", "org.apache.avro.mapreduce.AvroMultipleOutputs.getContext(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.BinaryDecoder.readRaw(byte,int,int)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.TestRecordWithLogicalTypes.clearDec()": "AVRO-2335: Remove Joda Time library (#631)\n\n", "org.apache.avro.generic.Fixed.bytes()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.ipc.CallFuture.await()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.ProtobufData.getSchema(FieldDescriptor)": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.AsyncProcessor.getProcessMap(Map)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.generic.DecimalRecordMapping.DecimalRecordMapping(Integer,Integer)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getIntArrayList()": "AVRO-910. Java: Add generated protobuf test code to subversion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1179443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.hadoop.io.IntWritableConverter.IntWritableConverter()": "AVRO-593. Java: Add support for Hadoop's newer mapreduce API.  Contributed by Garrett Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1325903 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.perf.test.generic.GenericTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.LockableArrayList.addAll(Collection)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.tool.TestDataFileTools.testGetMeta()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.mapreduce.TestKeyValueInput.createInputFile()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.mapred.WordCountUtil.writeLinesBytesFile(String)": "AVRO-1887 Integrate Yetus and fix tests (#353)\n\n* AVRO-1887 Setup precommit checks via Apache Yetus\r\n\r\nSigned-off-by: sacharya <suraj.spa@gmail.com>\r\n\r\n* AVRO-1887 Integrate Yetus\r\n\r\nAdd a precommit hook using Apache Yetus that will invoke the test\r\nsuite of the different languages\r\n\r\n- Disable Ruby integration tests tests\r\n- Fix Flaky Java Datetime test\r\n  When the milsecons would have trailing zero, it would get trimmed\r\n- Align the order of imports\r\n", "org.apache.avro.mapred.WordCountUtil.validateCountsFile(File)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.TestParsingTable.test(String,int,int,int)": "AVRO-29.  Add to Java a validating encoder and decoder, and a resolving decoder.  Contributed by Thiruvalluvan M. G. & Raymie Stata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@788462 13f79535-47bb-0310-9956-ffa450edef68\n", "avro.examples.baseball.FieldVisibilityTest.setName(java)": "AVRO-2419:Avro-tools should support fieldvisibility settings like avro-maven-plugin\nAVRO-2419:pom.xml exclude FieldVisibilityTest.java\nUpdate SpecificCompilerTool.java\nImport Locale package\nCloses #678\n", "org.apache.avro.protobuf.multiplefiles.Foo.getUint64()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.file.DeflateCodec.toString()": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflectLogicalTypes.testWriteNullableUUIDReadRequiredString()": "AVRO-1497: Add LogicalType implementation.\n\nThis closes PR #29 and includes the following commits:\n\nca1d2b1 AVRO-1497: Add LogicalTypes and read-side implementation.\n442a917 AVRO-1497: Add logical type support to schema reflection.\nec8d6d4 AVRO-1497: Add logical type writes to generic and reflect.\ne6e9761 AVRO-1497: Clean up Conversion and LogicalType classes.\n8fe954a AVRO-1497: Add Conversion and LogicalType javadoc.\n3abf042 AVRO-1497: Fix ByteBuffer bug in DecimalConversion.\n2293a18 AVRO-1497: Fix review items.\n207afd3 AVRO-1497: Add logical type registration and record test.\nd2377b2 AVRO-1497: Maven CLI and checkstyle fixes.\n1e628b2 AVRO-1497: Fix test failures.\n15ed857 AVRO-1497: Fix performance issues with logical types.\nfb84364 AVRO-1497: Check logical type once per array.\n7de6edc AVRO-1497: Remove unnecessary changes to Schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1681906 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.test.basic.StringTest.encode(TestStateEncode)": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.avro.specific.Builder.getF64()": "AVRO-2079: Add ability to generate Java8 native date/time classes (new) (#309)\n\nAVRO-2079: Add ability to use Java 8 date/time types instead of Joda time.\r\n\r\nAdd compiler option to allow generating Java 8 date/time classes instead of Joda time. This commit adds a new optional compiler option -dateTimeLogicalTypeImpl to specify which date/time implementation to use. It could be joda or jsr310, if not specified by, then the default is joda.", "org.apache.avro.SchemaBuilder.optionalFixed(String,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.SaslSocketServer.getServer()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.data.TestJodaTimeConversions.testLossyTimestampMicrosConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.reflect.ReflectRequestor.getClient(Class,ReflectRequestor)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.specific.SpecificRequestor.getClient(Class,SpecificRequestor)": "AVRO-163.  Re-organized source tree into separate directories for each language.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@898142 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.FooBarSpecificRecord.hasTypeEnum()": "AVRO-1502. Java: Generated classes now implement Serializable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1629326 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.file.NullCodec.decompress(ByteBuffer)": "AVRO-414.  Add Java support for concatenating and appending data files.  Contributed by Scott Carey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@912030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.specific.SpecificRequestor.readError(Schema,Decoder)": "AVRO-832. Java: Fix RPC client to correctly perform schema resolution on message responses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1130503 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.netty.BlockingSimpleImpl.echo(TestRecord)": "[AVRO-2106] Split netty/jetty out of avro-ipc\n", "org.apache.avro.mapred.Pair.Pair(ByteBuffer,Utf8)": "AVRO-580, AVRO-581.  Java: Update MapReduce APIs to use key/value pairs for intermediate data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@966422 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestSchemaBuilder.primitive(Schema,Schema)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.BlockingBinaryEncoder.BlockedValue(Schema,int)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.JsonProperties.iterator()": "[AVRO-2051] Remove synchronization for JsonProperties.getJsonProp\nFixes #245\n", "org.apache.avro.io.Perf.GenericStrings()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.message.TestBinaryMessageEncoding.testByteBufferBadMarkerByte()": "AVRO-2117: Cleanup Java - Explicit types replaced with <>\n", "org.apache.avro.TestDecimalConversion.testToFromBytesMaxPrecision()": "AVRO-2837: DecimalConversion handling of scale and precision (#884)\n\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nImprove the handling to check precision and not error if scale\r\nof value is less\r\n\r\n* AVRO-2837: DecimalConversion handling of scale and precision\r\n\r\nScale needs to be set correctly for serialization in order to\r\ndeserialize as expected. Added additional tests and extended\r\nerror messages", "org.apache.avro.mapred.TestAvroMultipleOutputs.testProjection(String)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestProtocolNetty.getExpectedHandshakeCount()": "AVRO-539. Java: Add asynchronous RPC support, through either callbacks or futures.  Contributed by James Baldassari.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1136342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.generic.GenericDatumReader.readArray(Object,Schema,Schema,Decoder)": "AVRO-57.  Make ValueReader/Writer abstract, named Decoder/Encoder.  Add concrete implementations named BinaryDecoder/Encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@787828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ReuseByteWriter.write(ByteBuffer)": "AVRO-753. Java: Improve BinaryEncoder Performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1074364 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.Foo.getFooArrayOrBuilderList()": "AVRO-1308. Java: Fix repeated protobuf messages & enums.  Contributed by Steve Zesch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1471128 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.ValueWriter.encodeLong(long,byte,int)": "AVRO-25.  Add blocking value writer.  Contributed by Thiruvalluvan M. G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@782092 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.TestReadingWritingDataInEvolvedSchemas.readerWithoutDefaultValueThrowsException()": "AVRO-1931: Reader is now compatible if able to read all branches of union\n\nCloses #199\n\nSigned-off-by: Sriharsha Chintalapani <sriharsha@apache.org>\nSigned-off-by: Nandor Kollar <nkollar@cloudera.com>\nSigned-off-by: Sean Busbey <busbey@apache.org>\n", "org.apache.avro.io.parsing.Alternative.flatten(Map,Map)": "AVRO-328. Performance improvements Validating encoder/decoder for nested records\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@899888 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.trace.FileSpanStorage.getAllSpans()": "AVRO-606. Add File-Based Span Storage to TracePlugin (Contributed by Patrick Wendell)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@985363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.Protocol.getMessages()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.compiler.specific.TestTemplatedCompilerFidelity.testProtocols()": "    AVRO-716. Java: Improve correlation between packages and modules.\n    Each module introduced by AVRO-647 now exclusively provides \n    different java packages.  This required moving several classes\n    around into new packages and will therefore require users to\n    change their package imports when upgrading to Avro 1.5.0.\n    Summary of changes:\n    * AvroRemoteException has moved to org.apache.avro\n    * ByteBufferInputStream and ByteBufferInputStream have moved \n      to org.apache.avro.util\n    * InduceSchemaTool has moved to org.apache.avro.tools\n    * SpecificCompiler, SchemaTask, and ProtocolTask have moved \n      to org.apache.avro.compiler.specific\n    * The Idl compiler has moved to org.apache.avro.compiler.idl\n    * ReflectRequestor and ReflectResponder have moved to\n      org.apache.avro.ipc.reflect\n    * GenericRequestor and GenericResponder have moved to\n      org.apache.avro.ipc.generic\n    * SpecificRequestor and SpecificResponder have moved to\n      org.apache.avro.ipc.specific\n    (scottcarey)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1064397 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.compiler.specific.TestSpecificCompiler.testPojoWithOptionalCreatedWhenOptionalForEverythingTurnedOn()": "[AVRO-1577] Update couple more methods to use try-with-resources\n", "org.apache.avro.test.generic.TestStateEncode.doSetupTrial()": "AVRO-2346: Introduce JMH Performance Testing Framework\n", "org.apache.trevni.ColumnFileWriter.computeStarts(long)": "AVRO-806.  Add specification of the Trevni columnar file format and a Java implementation of it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383626 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.SchemaBuilder.StringDefault(FieldBuilder)": "AVRO-1325 Enhanced Schema Builder API\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1507862 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.NettyTransceiver.releaseSemphore()": "AVRO-405. Java: Add Netty-based RPC transceiver and server implementation.  Contributed by Harry Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@959787 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Test.clearEnum()": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.idl.TestIdl.run()": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.protobuf.noopt.Builder.getFooArrayBuilder(int)": "AVRO-2332: Support java_multiple_files protobuf option\n\nSupport java_multiple_files option,\r\nhttps://developers.google.com/protocol-buffers/docs/proto3#options\r\n\r\nProtoc doesn't generate outer class if the option enables, but current getNamespace() doesn't consider that.", "org.apache.avro.grpc.TestAvroProtocolGrpc.testMultipleArgsAdd()": "AVRO-2172: Avro binding for gRPC to enable avro based schema and RPC IDL to be transported over gRPC.\n", "org.apache.avro.io.parsing.Symbol.SkipAction(Symbol)": "AVRO-647 Java: Break avro.jar up into parts\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1049734 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.io.SpecificTest.newWriter()": "AVRO-1268. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1461856 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.data.TestJodaTimeConversions.testDynamicSchemaWithDateConversion()": "Rename JSR310 conversion class to TimeConversions, deprecate Joda conversion\n", "org.apache.avro.hadoop.io.TestAvroSerialization.testGetSerializerForValue()": "Fix deprecated API uses and multiple warnings reported by static analysis tools\n", "org.apache.avro.generic.GenericData.isRecordMapping(Object)": "AVRO-1402. Support for DECIMAL type (as a record mapping).\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1584605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Test.getSetFieldSize()": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.thrift.test.Nested.equals(Object)": "AVRO-804. Java: Add support for reading and writing instances of Thrift generated classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1178973 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.reflect.TestReflect.testForwardReference()": "AVRO-1147. Java: Permit stringable map keys in reflect.  Contributed by Alexandre Normand.\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@1383160 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.avro.ipc.stats.TestHistogram.getBoundaryLabels()": "Multiple static analysis fixes and code modernization\n", "org.apache.avro.perf.test.reflect.ReflectLongArrayTest.doSetupInvocation()": "AVRO-2517: Move Perf module classes into its own package (#615)\n\n", "org.apache.avro.mapred.AvroTextRecordWriter.toByteBuffer(Object,byte,Object)": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.specific.TestSpecificDatumWriter.testResolveUnion()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.io.RecordReader.reset()": "AVRO-2247 - improved java reading performance with new reader (#391)\n\n* AVRO-2247 - Add FastDatumReaderBuilder and dependencies (rebased)\r\n\r\n* Addressed comments to pull request\r\n", "org.apache.avro.reflect.RecordWithTimestamps.hashCode()": "AVRO-2328: Support distinguishing between LocalDateTime and Instant semantics in timestamps (#525)\n\nNew logical type for local timestamp semantic.", "org.apache.avro.ipc.trace.TraceNode.getResponsePayloadSize()": "AVRO-613. Create basic frontend to view trace results.\nContributed by Patrick Wendell\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/avro/trunk@988004 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.trevni.avro.mapreduce.TestKeyWordCount.checkInputFormat()": "AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code (#487)\n\n* AVRO-2353: Configure spotless-maven-plugin to auto format/validate Java code\r\n\r\n* AVRO-2353: Adapt code formatter to Avro default style (2 spaces)\r\n\r\n* AVRO-2353: Remove trailing spaces check from checkstyle\r\n\r\nThis is a bug of eclipse-jdt-formatter so we should disable the trailing\r\nvalidation temporally. For more info see https://bugs.eclipse.org/bugs/show_bug.cgi?id=488229\r\n\r\n* AVRO-2353: Auto-format existing code\r\n", "org.apache.avro.TestSchema.testRecord()": "AVRO-1.  Record fields are now defined with JSON arrays, rather than JSON objects, since fields are ordered.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/avro/trunk@769139 13f79535-47bb-0310-9956-ffa450edef68\n"}