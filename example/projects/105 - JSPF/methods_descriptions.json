{"org.apache.james.jspf.SPF1TestMZMockDNSService.getARecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getARecords(String,int)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.Directive(String,Mechanism)": "Various updates following the pmd hints.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408392 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP6MacroData.getMacroIpAddress()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.setTimeOut(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.expandExplanation(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.replaceCell(String,MacroData,boolean)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.TermDef(Class)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.increaseCurrentDepth()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.run()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.split(String,String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getDNSService()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.ExpModifier.run(SPF1Data)": "- Rename ExpMechanismn to ExpModifier\n- Create new package modifier\n- Create new interface Modifier\n- Create new abstract class GenericModifier\n- Move the ExpModifier to the modifier package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408295 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testLocalPartWithSpecialChars()": "Correctly handle dollar sign in local-part of emailaddress. See JSPF-71. Thx to Frank Stolle for reporting\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.Directive.checkSPF(SPFSession)": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getAAAARecords(String,int)": "Start fixin failing yaml tests.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getARecords(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.Directive.Directive(String,Mechanism)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddrTest.testInvalidIp6Address()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(DNSService,SPF1Parser,Logger)": "Updated rfc4408.yml tests from new.openspf.org (we still pass them)\nIntroduced an SPFChecker interface to be used for recursive call as a dependency.\nMade it possible for SPF to receive an external SPFParser (so we can reuse it)\nOptimized tests to reuse a single SPFParser between tests (it is stateless)\nFixed SPF to avoid settingup the FallbackPolicy if not enabled.\nRemoved few catch(Exception e) in favor of specific exception catches\nChanged ipAddr method to avoid throwing NumberFormatException and wrap it in a PermErrorException.\nChanged include/redirect to not create a new SPF object but to use the spfProbe (SPFChecker) service embedded in spf1data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452402 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.enableLogging(Logger)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getReceivingDomain()": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AllMechanism.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.Directive.Directive(String,Mechanism)": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample2()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.reverseIP(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.Request(DNSRequest,Object,IResponseQueue)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.setTimeOut(int)": "-Now its possible to configure the timeout for dnsrequests before an TempError is returned. Default timout is 20 seconds\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408375 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getRecordLimit()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.checkSPF(SPF1Data)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.DNSServiceXBillImpl(Logger)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.enforceSingleInstance()": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getExplanation()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.DNSTestingServer(String,String)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.replaceCell(String)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IResponseImpl.getId()": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousYamlTest(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getFallbackPolicy()": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.TrustedForwarderPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Move TRUSTEDFORWARDER default value from SPF to the specific policy class\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@464210 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.init(String,int)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getMXRecords(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTestSuite.SPF1RecordTest(String,String,String,String,String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getLocalDomainName()": "This new method will be completed later.. just ignore it..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408415 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.InitialChecksPolicy.checkSPF(SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.internalLoadTests(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.matchAnyAAAARecord()": "Remove specific support for a/0 and a//0: simply removed the code and test still pass!\nSplitted MAX_DEPTH into MAX_DEPTH (spf recursion) and MAX_DEPTH_DNS (dns records returned)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448196 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercS()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.stripDot(String)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.SPF1Parser()": "Parser cleaning\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408346 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.TrustedForwarderPolicy.TrustedForwarderPolicy(Logger)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.util.MatchResultSubset.groupCount()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousYamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getExceptionCatcher()": "Added ExceptionCatcher stack in SPFSession.\nThe exceptioncatcher allow correct management of exceptions raised from SPFCheckers in recursive spf checks (redirect/include).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531166 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.isValidHexChar(char)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.init(String,String,int)": "Refactored Mechanisms.\n1) renamed the GenericMechanism to Mechanism\n2) s/Mechanismn/Mechanism\n3) Introduced GenericMechanism as an optional abstract class with common code\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408286 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.replaceIP4Helper(Matcher)": "-SPF class now use the new classes\n-fix a bug which let SPF1Parser throw a NumberFormatException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408292 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationChecker.DefaultExplanationChecker()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckerRetriever.checkSPF(SPFSession)": "Refactored SPFRetriever/SPFStrictCheckerRetriever to implement SPFChecker and support DNSLookupContinuation.\nThis was probably the last component not yet using DNSLookupContinuation, so it should be easy to call everything asynchronously now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531202 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.generateReply(byte,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.UnknownMechanismException.UnknownMechanismException()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408214 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.warn(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getMaskLength()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.isValidIP4Word(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSResponse.DNSResponse(TimeoutException)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.SPFYamlTestDescriptor(Map,int)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setMatch(boolean)": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.getHeaderName()": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getARecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecords(DNSRequest)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getPTRRecords(String)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setCurrentDepth(int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AllMechanism.toString()": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.loadTests(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.ignoreExplanation()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.suite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.getHeaderName()": "printout an text if was wrong used form cmdline\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408221 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getARecords(String,int)": "Add more logging in the exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408228 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TempErrorException.TempErrorException()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getMaskedIPAddress()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.matchMacro(String,MacroData)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.getDNSService()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AbstractMechanism.init(String)": "Fix for previous code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408310 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.getItem()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getClientDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.suite()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runPTRCommand(List,String,String)": "Generalized ArrayList to List in DNSService, added HardCoded DNSServiceMock to return tested dns zones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408234 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getPTRRecords(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.matchMacro(String,MacroData)": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.debug(String,Throwable)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Record.getDirectives()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getMXRecords(String,int)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckerRetriever.SPFStrictCheckerRetriever(DNSService)": "Change classname for better reflect the usage\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.isReady()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSResponse.toString()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.DefaultTermsFactory(Logger)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.run(SPF1Data)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getHex(long)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFSuite()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.matchSize()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSResponse.getResponse()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.internalLoadTests(String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getMXRecords(String,int)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.enableSPFChecking(SPFChecker)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.UDPListener.run()": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.replaceCell(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getClientDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.loadTests()": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.AResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.DefaultExplanationChecker()": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.getFilename()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermDefinition.calcGroups(String)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPFPolicyPostFilterChecker(PolicyPostFilter)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createPatternMap(Class,String)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecords(String,int,int)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getReceivingDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.getMatchSize()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.getSuffix()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getMechanism()": "rename Collection\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408288 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.nextId()": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ParseRecordPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.getSPFRecord(String,SPF1Record)": "Added ExceptionCatcher stack in SPFSession.\nThe exceptioncatcher allow correct management of exceptions raised from SPFCheckers in recursive spf checks (redirect/include).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531166 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getCommands()": "Add RedirectModifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408296 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.ConsoleLogger()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecordLimit()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getPTRRecords(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.suite()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.setExceptionHandlerChecker(SPFChecker,SPFChecker)": "Made a refactoring so that there is no more an ExceptionCatcher stack in SPFSession.\nNow every SPFChecker can implement ExceptionCatcher so that a single checker stack is needed/used and it seem a little clearer and the logic to remove \"skipped\" checkers can be moved to the executors (much better).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.getHeaderName()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.MatchResultSubset(MatchResult,int,int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.end(int)": "Removed Java5 specific code (IllegalStateException with nested and MatchResult from Regex)\nRenamed MatchResultSubset to ConfigurationMatch: it is no more a MatchResult.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getDNSService()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTestSuite.runTest()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getTimeStamp()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getIPList(String,int)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.group(int)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runRedirectCommand()": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.removeFallBackEntrys(String)": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.PermErrorException.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample6_ipv6()": "Correctly handle dollar sign in local-part of emailaddress. See JSPF-71. Thx to Frank Stolle for reporting\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP4Mechanism.isValidAddress(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.ignoreExplanation()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ChainPolicy.ChainPolicy(List,List)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.PolicyChecker(LinkedList)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.getRecords(String,int)": "Forget to commit some changes for SPF-Type support\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454752 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.AMechanism.checkAddressList(IPAddr,List)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setupData(String,String)": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Utils.getNameResults()": "CheckFQDN now works like expected\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408212 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermDefinition.DefaultTermDefinition(Class)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermDefinition.getTermDef()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Request.Request(DNSRequest,Object,IResponseQueue)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermDefinition.getPattern()": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.GenericModifier.expandHost(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setDepth(int)": "-Throw PermErrorException if we reached the maxDepth\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408337 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.setZonedata(HashMap)": "Updated openspf yaml tests to current trunk and fixed a couple of bugs in JSpf testsuite:\n1) mocked dns server was case sensitive in search => changed to use lowercase hosts\n2) mocked dns server did not support CNAMEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@475183 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupAndResultChecker.onException(Exception,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.setZonedata(HashMap)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.wiring.WiringServiceException.WiringServiceException(String)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSRequest.getHostname()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.getHeaderText()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.BasicSuite()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.toString()": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.expandExplanation(String,MacroData)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.wire(Object)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.execute(SPFSession,FutureSPFResult,boolean)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getCurrentDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getExplanation()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFCheckerExceptionCatcherImplementation.SPFCheckerExceptionCatcherImplementation(SPFChecker)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.DNSServiceAsynchSimulator(DNSService)": "Add some javadocs\nReplace anonymous inner classes whith nested inner classes \nSome minor refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532386 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getIpAddress()": "-Support for ipv6 macros!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408450 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Utils.checkFQDN(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.runSingleTest(String)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AllMechanism.run()": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.reverse(ArrayList)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.debug(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getInAddress(String)": "Removed dependencies from InetAddress. Changed ip string checks to \"syntax only\" checks (no dns lookups).\nAdded an IPAddr test for IPV4 and IP6 address strings check\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408231 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExistsMechanismn.run(SPF1Data)": "Create ExistsMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408271 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.getRawFallBackEntry(String)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample3()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.suite()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getCurrentResult()": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.getHeaderName()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getMXRecords(String,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getAddress(String,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.matchSize()": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getReadableIP()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.MXMechanismn.init(String,String,int)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.getDnsServiceMockStyle()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TermDef.calcGroups(String)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.isValidIPV4Address(String)": "Move Inet6Util to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.setSPFMustEqualsTXT(boolean)": "Moved SPF to the impl package (single class package does not make sense. Most people will anyway use DefaultSPF from the impl package).\nMoved \"Enabling interfaces\" from _wiring_ to the same package of the service interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.generateHeader(String,SPF1Data)": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getHostName()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getARecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.loadTests()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getMXRecords(String,boolean)": "Remove unneeded code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupAndResultChecker.checkSPF(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanism.config(MatchResult)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getSpfProbe()": "Updated rfc4408.yml tests from new.openspf.org (we still pass them)\nIntroduced an SPFChecker interface to be used for recursive call as a dependency.\nMade it possible for SPF to receive an external SPFParser (so we can reuse it)\nOptimized tests to reuse a single SPFParser between tests (it is stateless)\nFixed SPF to avoid settingup the FallbackPolicy if not enabled.\nRemoved few catch(Exception e) in favor of specific exception catches\nChanged ipAddr method to avoid throwing NumberFormatException and wrap it in a PermErrorException.\nChanged include/redirect to not create a new SPF object but to use the spfProbe (SPFChecker) service embedded in spf1data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452402 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getMaskLength()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getARecord(String)": "Add more logging in the exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408228 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IncludeMechanism.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.isValidIP(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.OverridePolicy(Logger,SPFRecordParser)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AllMechanism.run(SPF1Data)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getMXRecords(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddrTest.testValidIp4Address()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.setSPFMustEqualsTXT(boolean)": "Add an other SPFRetriever which can be used to strict use RFC. See JSPF-37\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454733 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.getHeader()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getHostName()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.PTRMechanism.run(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getAList(ArrayList)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.matchSize()": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.unsigned(byte)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getAAAARecords(String,int)": "Format\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408336 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercO()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getPTRRecords(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.isValidAddress(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.toString()": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IncludeMechanism.config(MatchResult)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.group(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.checkSPF(String,String,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.insertResponse(IResponse)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.generateHeader(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSLookupContinuation.getListener()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.SPFSuite()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.setTests(HashMap)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.TempErrorException.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setMatch(boolean)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NoneException.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.replaceCell(String,boolean)": "Second fix for macro expansion: now it should be strict and compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@496403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultSPF.DefaultSPF()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getTimeStamp()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.maskedAddress(int,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.setTests(HashMap)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.getMechanismsCollection()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.checkSPFLogged(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.AbstractNestedPolicy.getSPFRecord(String)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getCurrentDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.checkExpand(String,SPFSession,boolean)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.generateHeader(String)": "-Remove duplicate constants\n-Remove result of unknown. Not valid anymore!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.run(SPF1Data)": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP4Mechanism.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.IResponseImpl.getValue()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.toString()": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.getRecord()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.ConfigurationMatch(Matcher,int,int)": "Removed Java5 specific code (IllegalStateException with nested and MatchResult from Regex)\nRenamed MatchResultSubset to ConfigurationMatch: it is no more a MatchResult.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.IResponseImpl.IResponseImpl(Object,List)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermDefinition.getMatchSize()": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IResponseImpl.getException()": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.getLength()": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getSpfRecord(String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.DefaultExplanationPolicy(Logger,String)": "Removed SPFInternalResult (we don't use it anymore)\nMoved DefaultExplanationPolicy to policies.local\nIntroduced a common abstract SPFResultException to be used as the root of our exceptions: the concrete implementations provide also the string representation of the result to use.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample1()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSRequest.toString()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.isValidSPFVersion(String)": "Start the SPF1Parser Class. This class should be instanced by SPF with a SPFRecord given. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408235 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TermDef.TermDef(Class)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.UDPListener.run()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getMXRecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.FallbackPolicy(Logger)": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.PolicyChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.toString()": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.enableSPFChecking(SPFChecker)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.internalLoadTests(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.checkSPF(SPFSession)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.DefaultTermsFactory(Logger,WiringService)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getLocalDomainNames()": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.DefaultTermsFactory(Logger)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.getHeader()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getCurrentSenderPart()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.end()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DefaultExplanationPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setReceivingDomain(String)": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultSPF.DefaultSPF(Logger)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.AbstractNestedPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.iterator()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.getRawFallBackEntry(String)": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runACommand(IPAddr,String)": "commit test\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408230 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getResult()": "replace some methods. And change a few to private cause these should never called from other classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408268 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.IPAddrTest.testValidIp4OverIpv6Address()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getARecords(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.isErrorEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getAddressList(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.getIp4cidr()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.read(char)": "Removed rfc4408-tests YAML file because of to be verified (questionable) licensing issues (CC-BY-SA).\nUpdated the testsuite to provide a link to the downloadable testsuite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@497033 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.UDPResponder.UDPResponder(DatagramSocket,InetAddress,int,byte,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.stringToInternal(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.restoreSession(SPFSession)": "Minor fixes and updated README.txt to reflect the catchers removal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.onDNSResponse(DNSResponse,SPFSession)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.setLogger(Logger)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.SPF1Data.getInAddress()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getRecordsAsynch(String,int,Object,IResponseQueue)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.lookupAndCreateTerm(String,String,Class)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServerLauncher.usage()": "Using commons-cli formatter for usage. Improved parameter documentation and added short options.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@577050 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getLocalDomainNames()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IResponseImpl.IResponseImpl(Object,List)": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyPostFilterChecker.checkSPF(SPFSession)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.expand(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.run(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.RedirectModifier.run(SPF1Data)": "-Add include Modifier\n-Change the run method of the Modifier interface and GenericModifier abstract class to return a String\n-Some format fixes\n-Remove not needed methods from SPF1Data\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408298 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.UnknownException.UnknownException()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample4()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.config(MatchResult)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFInternalResult.SPFInternalResult(String,String)": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.createTermCollection(Class)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.checkSPF(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.getSPFRecordPostFilter(String,SPF1Record)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSLookupContinuation.DNSLookupContinuation(DNSRequest,SPFCheckerDNSResponseListener)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddrTest.testInvalidIp4AddressGreatThan255()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setCurrentResultExpanded(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setReceivingDomain(String)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.getARecords(String)": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.checkSPF(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.loadTests()": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getSenderDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getAddressList(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandExplanation(String,MacroData)": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.isIPAddr(Object)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.IPAddrTest.testInvalidIp4AddressGreatThan255()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408356 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.removeListener(IFutureSPFResultListener)": "Add support for IFutureSPFResultListener. See JSPF-94\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@1202747 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.getHeaderName()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP6MacroData.getReadableIP()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictSPFRecordsDNSResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.runTest()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getMailFrom()": "Also add escaping for backslash in regex replace strings (JSPF-71)\nFrom javadocs, both dollar and backslash need escaping.\n(also replaced tabs with spaces for our formatting convention).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.info(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getAddress(String)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanismn.run(SPF1Data)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.PermErrorException.PermErrorException(String)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.getValue()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getTimeStamp()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.setUp()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setExplanation(String)": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setCurrentDomain(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getMailFrom()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.DNSTestingServer(String,String)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getAddresses(String,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.DNSServiceXBillImpl(Logger)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getCurrentResult()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setClientDomain(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.FallBack(Logger)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.clearFallBackEntrys()": "Add support for Override. See JSPF-36 and JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453520 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.Directive.getQualifier()": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getReceivingDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createRegex(Collection)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.getHeaderName()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImplTest.setUp()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTestSuite.SPFTest(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.calcGroups(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.suite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.setRequest(Request)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getTxtCatType(String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.start()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getAddress(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.pushExceptionCatcher(SPFCheckerExceptionCatcher)": "Made a refactoring so that there is no more an ExceptionCatcher stack in SPFSession.\nNow every SPFChecker can implement ExceptionCatcher so that a single checker stack is needed/used and it seem a little clearer and the logic to remove \"skipped\" checkers can be moved to the executors (much better).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getAAAARecords(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.TCPListener.TCPServer(Socket,ResponseGenerator)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP6Mechanism.getMaxCidr()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.checkSPFLogged(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.toString()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.SPFResultException.SPFResultException(String)": "Removed SPFInternalResult (we don't use it anymore)\nMoved DefaultExplanationPolicy to policies.local\nIntroduced a common abstract SPFResultException to be used as the root of our exceptions: the concrete implementations provide also the string representation of the result to use.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.popExceptionCatcher()": "Added ExceptionCatcher stack in SPFSession.\nThe exceptioncatcher allow correct management of exceptions raised from SPFCheckers in recursive spf checks (redirect/include).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531166 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSLookupContinuation.getRequest()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.NoneException.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setCurrentDepth(int)": "-Throw PermErrorException if we reached the maxDepth\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408337 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getIpAddress()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getARecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.isValidIPV4Address(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getIPList(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.subset(ArrayList,int)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IncludeException.IncludeException()": "Format\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408282 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getAAAARecords(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.MatcherBasedConfiguration.groupCount()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.YamlTest(String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPF(DNSService,SPFRecordParser,Logger,MacroExpand,SPFExecutor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.NeutralException.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.getChildLogger(String)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getAAAARecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.reverse(ArrayList)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.error(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getReceivingDomain()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.SPF1Record(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.PermErrorException.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.getMatchSize()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getAddressList(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP6MacroData.getInAddress()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.SPFExplanationTest(SPF,SPFTestDef)": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.next()": "Some code cleanup. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@493030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.nextId()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.setResponsePool(LookupAsynch,IResponseQueue,Integer)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.isFatalErrorEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getARecords(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.convertToBytes(String,byte,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.unsigned(byte)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.isValidHexChar(char)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.parseRecord(String)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.group(int)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.ErrorException.ErrorException()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.setSPFResult(SPFSession)": "Make sure all registered IFutureSPFResultListener get executed even on an unchecked Exception. See JSPF-95\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@1205834 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getSpfRecord(String,String)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getTxtCatType(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.isErrorEnabled()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.buildErrorMessage(Header,int,Record)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AllMechanism.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.SPF1ParserTest(String)": "Updated test_parser to pass all the tests. Many tests were not spec compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408339 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getAddress(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.Directive.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.TCPListener.TCPServer(Socket,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.enforceSingleInstance()": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.ResponseQueueImpl.insertResponse(IResponse)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.SPF()": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchModifier.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.TCPServer.run()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.findRecords(Name,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.enableDNSService(DNSService)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getCurrentSenderPart()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.tests.TestSPF.main(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.setTimeOut(int)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.formerrMessage(byte)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DefaultExplanationPolicy.checkSPF(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getAAAARecords(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyChecker.SPFPolicyChecker(Policy)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.UnknownModifier.config(Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.PTRMechanism.checkSPF(SPFSession)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFTest.SPFSuite()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.ResponseQueueAdaptor(IResponseQueue)": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.DefaultSPF1Parser(Logger)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSLookupContinuation.getRequest()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Utils.nameToResult(String)": "-TempErrorException get now thrown if the lookup result is not HOST_NOT_FOUND or SUCCESSFULLY\n-Change the method getARecords to use lookup method of dnsjava so we can check for the query result\n-change a few classes to throw the TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408328 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.TCPServer.TCPServer(Socket,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getAddress(byte)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.UDPResponder.run()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.buildErrorMessage(Header,int,Record)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.checkSuffixCommand(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.checkSPF(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getTimeStamp()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getDNSServiceReal()": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.core.Inet6Util.isValidIPV4Address(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.isEmpty()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanismn.init(String,String,int)": "AMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408259 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.createTermCollection(Class)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getSenderDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.fatalError(String,Throwable)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.isDebugEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.getRecordsAsynch(DNSRequest,int,IResponseQueue)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.getDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.get8BitAddress(int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.init(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.subset(ArrayList)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP6MacroData.getInAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.runTest()": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getIPAddress(int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getPolicyFilters()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.reverse(ArrayList)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP6Mechanism.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.GenericModifier.expandHost(SPF1Data)": "- Rename ExpMechanismn to ExpModifier\n- Create new package modifier\n- Create new interface Modifier\n- Create new abstract class GenericModifier\n- Move the ExpModifier to the modifier package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408295 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.reverse(ArrayList)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.findARecord(Name)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExpMechanism.init(String)": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFSuite.SPFSuite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP6Mechanism.getMaxCidr()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFYamlTestSuite(HashMap,int)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExceptionCatcher.ExceptionCatcher(SPFChecker,SPFChecker)": "Made a refactoring so that there is no more an ExceptionCatcher stack in SPFSession.\nNow every SPFChecker can implement ExceptionCatcher so that a single checker stack is needed/used and it seem a little clearer and the logic to remove \"skipped\" checkers can be moved to the executors (much better).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFYamlTest(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getAAAARecords(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServerLauncher.loadZoneData(HashMap,HashMap)": "Added ability to load all of the zones defined in a yml file. The test files often do define overlapping zones, so this allow testing a full file without reloading the fake server.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@782407 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.GenericMechanism(String,String)": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupChecker.onException(Exception,SPFSession)": "Minor fixes and updated README.txt to reflect the catchers removal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.suite()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NoSPFRecordFoundPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.loadTests(String)": "Removed rfc4408-tests YAML file because of to be verified (questionable) licensing issues (CC-BY-SA).\nUpdated the testsuite to provide a link to the downloadable testsuite.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@497033 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.end(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchModifier.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermDefinition.getPattern()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckerRetriever.calculateSpfRecord(List,List)": "Refactored SPFRetriever/SPFStrictCheckerRetriever to implement SPFChecker and support DNSLookupContinuation.\nThis was probably the last component not yet using DNSLookupContinuation, so it should be easy to call everything asynchronously now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531202 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getTxtCatType(String)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.stringToInternal(String)": "Added ip6 parsing stuff from Harmony project and changed IPAddr to use that code.\nNow we pass IP6 parsing tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultSPFChecker.onException(Exception,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.lookupAndCreateTerm(MatchResult,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.PermErrorException.PermErrorException()": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.getLength()": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testDoublePercent()": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.expandDomain(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getTxtCatType(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Utils.checkFQDN(String)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddrTest.testValidIp6Address()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.YamlTest(SPFYamlTestSuite,String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.addRRset(Name,Message,RRset,int,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.start(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.checkAddressList(IPAddr,List,int)": "Fix ClassCastException. Now all tests pass again\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.TermDef(Class)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.getId()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.checkReady()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getClientDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.TempErrorException.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.clearFallBackEntrys()": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanism.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.insertResponse(IResponse)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.MacroExpand(MacroData,Logger)": "Fix/add javadocs\nReplace catch Exception with the right Exception types\nReformat some stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getProperIpAddress(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.hostExpand(DNSService,MacroExpand,String,SPFSession,boolean)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.SPF1Record(String,SPF1Data)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getInAddress(String)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.AResponseListener.onDNSResponse(DNSResponse,SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.suite()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandMacroString(String,boolean)": "Second fix for macro expansion: now it should be strict and compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@496403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getCurrentSenderPart()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.isEmpty()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.isValidAMechanismn(String)": "use regex to check what command should be used!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getMySPFRecord(String)": "Add support for Override. See JSPF-36 and JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453520 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.Directive.getMechanism()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.getMXRecords(DNSService,String)": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.expandDomain(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.checkSPF(String,String,String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.end()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getTxtCatType(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.getHeader()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getSpfRecord(String,String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.GenericModifier.init(String)": "- Rename ExpMechanismn to ExpModifier\n- Create new package modifier\n- Create new interface Modifier\n- Create new abstract class GenericModifier\n- Move the ExpModifier to the modifier package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408295 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getReadableIP(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.PolicyChecker(LinkedList)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getIpAddress()": "-Support for ipv6 macros!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408450 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getCurrentDomain()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.debug(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getCurrentDepth()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getCurrentResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getARecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getTxtCatType(String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanismn.checkMechanismn()": "Create a new interface which all mechanismn should implement\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408246 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getAddress(String,int)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DefaultExplanationPolicy.DefaultExplanationPolicy(Logger,String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.NoneException.NoneException(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.setChildPolicy(Policy)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFYamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setExplanation(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.setSPFResult(SPFSession)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFRecordChecker.checkSPF(SPFSession)": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.split(String,String)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.createTerm(Class,Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getAddress(byte)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermDefinition.getMatchSize()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getIpAddress()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createTermCollection(Class)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getPTRRecords(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.FinallyChecker.init(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.getIntValue(char)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.insert(Response)": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.SPFSession(String,String,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getHeader()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.getHeaderText()": "printout an text if was wrong used form cmdline\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408221 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.getResult()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.AllMechanism.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyChecker.toString()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.IResponseImpl.IResponseImpl(Object,Exception)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.group()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.isDebugEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getMaxDepth()": "-Throw PermErrorException if we reached the maxDepth\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408337 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.getResult()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1DataTest.testGetMacroIpAddress()": "Updated rfc4408.yml tests from new.openspf.org (we still pass them)\nIntroduced an SPFChecker interface to be used for recursive call as a dependency.\nMade it possible for SPF to receive an external SPFParser (so we can reuse it)\nOptimized tests to reuse a single SPFParser between tests (it is stateless)\nFixed SPF to avoid settingup the FallbackPolicy if not enabled.\nRemoved few catch(Exception e) in favor of specific exception catches\nChanged ipAddr method to avoid throwing NumberFormatException and wrap it in a PermErrorException.\nChanged include/redirect to not create a new SPF object but to use the spfProbe (SPFChecker) service embedded in spf1data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452402 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.UnknownModifier.checkSPF(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSRequest.toString()": "Added support for recursive CNAME resolution in dnsjnio based resolver.\nAdded a LookupAsynch class into the dnsjnio project and changed the DNSJnioAsynchService to make use of that class.\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=1713970&group_id=194284&atid=948814\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@535836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.MatchResultSubset(MatchResult,int,int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getTXTRecords(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.isIPV4MappedIP(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.suite()": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getAAAARecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.config(ConfigurationMatch)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.generateHeader(String)": "printout an text if was wrong used form cmdline\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408221 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.MacroExpand(MacroData)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getDnsServiceMockStyle()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.enforceSingleInstance()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getTermDef()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1Utils.resultToName(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.SPFYamlTestDescriptor(HashMap,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.TrustedForwarderPolicy.TrustedForwarderPolicy(Collection,Logger)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.UnknownModifier.checkSPF(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFQuery.generateOptions()": "\"Correct usage\" of OptionBuilder to eliminate warnings (JSPF-80)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801662 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.MXMechanism.run(SPF1Data)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setMatchAnyAAAARecord(boolean)": "Remove specific support for a/0 and a//0: simply removed the code and test still pass!\nSplitted MAX_DEPTH into MAX_DEPTH (spf recursion) and MAX_DEPTH_DNS (dns records returned)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448196 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.config(MatchResult)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.createByteArrayFromIPAddressString(String)": "Added ip6 parsing stuff from Harmony project and changed IPAddr to use that code.\nNow we pass IP6 parsing tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneYamlTest(SPFYamlTestSuite)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpandedChecker.checkSPF(SPFSession)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.main(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getIPAddress(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.PTRMechanism.enableDNSService(DNSService)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getInAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultSPFChecker.DefaultSPFChecker(Logger)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.MacroExpand(Logger,DNSService)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DefaultExplanationPolicy.toString()": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.groupCount()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPUtil.checkAddressList(IPAddr,List)": "Move IPUtil to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408275 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.isValidIP6Address(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.ResponseQueueImpl.removeResponse()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.info(String,Throwable)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getInAddress()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getMXRecords(String)": "Remove unneeded code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.get16Bit(int,int)": "Removed unused code, added a few TODOs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408393 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.getMechanismsCollection()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.setUp()": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.policies.SPFRetriever.SPFRetriever(DNSService)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.macroExpandDomain(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ResponseImpl.ResponseImpl(Object,List)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.addFallBackEntry(String,String)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getAddresses(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.setUseBestGuess(boolean)": "Add support for best guess. See JSPF-24\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449704 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getSenderDomain()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getTxtCatType(String)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.clearFallBackEntrys()": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getAAAARecords(String,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getReadableIP()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.UnknownMechanismException.UnknownMechanismException(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408214 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecords(String,int)": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.getCommand()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getMacroIpAddress()": "-Support for ipv6 macros!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408450 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getTimeStamp()": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFQuery.getReturnCode(String)": "Fix format\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450834 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFQuery.main(String)": "Add switches for enable/disable logging on cmdline use. See JSPF-16\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@409203 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandDomain(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getSpfRecord(String,String)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.enableLogging(Logger)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getMaskedIPAddress()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.getDirectives()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP4Mechanism.config(MatchResult)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.run(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.AMechanism.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.runTest()": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getMechanismnPrefix(String)": "Add new method which we will use later to get the right result from the mechanismn results\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408250 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.encodeURL(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.isValidHexChar(char)": "Move Inet6Util to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getDNSServiceFakeServer()": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.checkReady()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.setTimeOut(int)": "Add first logging to SPF\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408382 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.setTimeout(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.getFallBackEntry(String)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.start(int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.PTRMechanism.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.TermDef(Class)": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.get8BitAddress(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServerTest.tearDown()": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.setUseBestGuess(boolean)": "Moved SPF to the impl package (single class package does not make sense. Most people will anyway use DefaultSPF from the impl package).\nMoved \"Enabling interfaces\" from _wiring_ to the same package of the service interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.enableDNSService(DNSService)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTestSuite.addTest(String,String,String,String,String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.matchVariable(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.NoneException.NoneException(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setStripInvalidMX(boolean)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.init()": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setCurrentResult(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Request.getId()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSessionTest.testGetMacroIpAddress()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.debug(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.createByteArrayFromIPAddressString(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.UnknownException.UnknownException(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.run()": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getMaskLength()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getTXTRecords(String)": "Add javadocs and author section\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408281 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getMXRecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFTest.runTest()": "-Move default explanation creation to SPF class\n-Merge explanation tests to SPF1Test\n-Get sure the explanation get reset on every runCheck() call\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408445 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.setData(Map)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.getMaxCidr()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setCurrentResult(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.SPFSuite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.internalLoadTests(String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.createRegex(Collection)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.initializePositions()": "Parser cleaning\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408346 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.errorMessage(Message,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermDefinition.DefaultTermDefinition(Class)": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecordsAsynch(String,int,Object,IResponseQueue)": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.enableDNSService(DNSService)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.SPFTest(SPF,SPFTestDef)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.generateHeader(String,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getPTRRecords(String)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.TCPListener.TCPListener(InetAddress,int,ResponseGenerator)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getPTRRecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.TrustedForwarderPolicy.setHost(String)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.addGlue(Message,Name,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.setTimeOut(int)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createRegex(Map)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.IP4Mechanism()": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.run(SPF1Data)": "Moved record limit check from ExistsMechanism to DNSServiceImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449593 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.removeResponse()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.getSPFRecordOverride(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.MXMechanismn.run(SPF1Data)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP6Mechanism.isValidAddress(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.IResponseImpl.getException()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.getWarning()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.fatalError(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.getZonedata()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.config(MatchResult)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.config(MatchResult)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckerRetriever.retrieveSpfRecord(String)": "Change classname for better reflect the usage\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454766 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.onException(Exception,SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getNibbleFormat()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRecordHandlerDNSResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.getSpfDetails()": "-SPF class now use the new classes\n-fix a bug which let SPF1Parser throw a NumberFormatException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408292 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.MXMechanism.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setExplanation(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.enableLogging(Logger)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.PTRResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.AResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.runTest()": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.execute(SPFSession,FutureSPFResult,boolean)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1RecordTestSuite.SPF1RecordTestSuite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getReadableIP()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getCurrentSenderPart()": "Add assertEquals (JSPF-71)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780298 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.UnknownModifier.run(SPF1Data)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getParsedRecord()": "move the parsing to an own method. create an method to retrieve the result\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408251 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.RedirectModifier.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getAAAARecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.MacroExpand(SPF1Data)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.MacroExpand(Logger,DNSService)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.SPFSuite()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.Directive.getMechanism()": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.getSPFRecord(String,SPF1Record)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.IPAddrTest.testValidIp6Address()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408356 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.encodeURL(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.run(SPF1Data)": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getReadableIP()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.group()": "Removed Java5 specific code (IllegalStateException with nested and MatchResult from Regex)\nRenamed MatchResultSubset to ConfigurationMatch: it is no more a MatchResult.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPFPolicyChecker(Policy)": "Moved SPF to the impl package (single class package does not make sense. Most people will anyway use DefaultSPF from the impl package).\nMoved \"Enabling interfaces\" from _wiring_ to the same package of the service interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.clearFallBackEntrys()": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.isValidIP(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getAList(ArrayList,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExceptionCatcher.setExceptionHandlerChecker(SPFChecker,SPFChecker)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP6Mechanism.IP6Mechanism()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.InitialChecksPolicy.getSPFRecord(String)": "Removed log of the result before returning the SPFResult. In case of asynchronous processing the getResult from the log statement will make the thread to wait for the result to be completed (join the resolver thread), invalidating the asynchronous behaviour.\nMoved the InitialChecks before the retriever, and added some check to the checker (to avoid relying on specific dnsservice implementation behaviours).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533792 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ChainPolicy.ChainPolicy(List)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NeutralException.NeutralException(String)": "Start fixin failing yaml tests.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.ResponseQueueAdaptor(IResponseQueue)": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SynchronousSPFExecutor.SynchronousSPFExecutor(Logger,DNSService)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.getQualifier()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.isErrorEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.enforceSingleInstance()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getAddress(byte,int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.setIP6Defaults()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getMacroIpAddress()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getExplanation()": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getTimeStamp()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getARecords(String,int)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpandedExplanationChecker.checkSPF(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.isValidIPV4Address(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.ExplanationChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddrTest.testValidIp6Address()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getMXRecords(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFYamlDNSService(HashMap)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setCurrentDomain(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPFCheckerExceptionCatcherImplementation(SPFChecker,Logger)": "Made a refactoring so that there is no more an ExceptionCatcher stack in SPFSession.\nNow every SPFChecker can implement ExceptionCatcher so that a single checker stack is needed/used and it seem a little clearer and the logic to remove \"skipped\" checkers can be moved to the executors (much better).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.sortCommands(Collection)": "Add RedirectModifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408296 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.createTermDefinitionCollection(Class)": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.runCheck()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.RFC4408SPF1Parser.RFC4408SPF1Parser(Logger,TermsFactory)": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.addFallBackEntry(String,String)": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.SPF1Parser()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.ReservedMX.isReserved(IPAddr)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.TCPListener.TCPListener(InetAddress,int,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.findSOARecord()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IResponseImpl.getValue()": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.warn(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ResponseImpl.getValue()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSResponse.DNSResponse(List)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.isFQDN(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ResponseImpl.getException()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.main(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getSpfRecord(String,String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.error(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.enforceSingleInstance()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.NeutralException.NeutralException()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.MatchResultSubset(MatchResult,int,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.stripDot(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runIPCommand(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.end(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.SPF()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.createTerm(TermDefinition,Configuration)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.LoggingDNSService(DNSService,Logger)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AllMechanism.AllMechanism()": "Cleaning refactoring: Mechanism \"building\" logic moved to SPF1Parser.\nNow the Mechanisms need only to declare their REGEX as static \"known\" fields.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408321 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Request.getValue()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanism.AMechanism()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyPostFilterChecker.toString()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.TermDef(Class)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runPTRCommand(ArrayList,String,String)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getHeaderName()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getStripInvalidMX()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTestSuite.SPFTestSuite()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.suite()": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.getHost()": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.getHeaderText()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.end()": "Removed Java5 specific code (IllegalStateException with nested and MatchResult from Regex)\nRenamed MatchResultSubset to ConfigurationMatch: it is no more a MatchResult.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408425 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddrTest.testValidIp4OverIpv6Address()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExpMechanism.run(SPF1Data)": "-Forgot the commit the ExpMachansim too\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408294 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getModifiers()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.calcGroups(String)": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408YamlTest(SPFYamlTestSuite,String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.start(int)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.UnknownModifier.enforceSingleInstance()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercD()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SynchronousSPFExecutor.SynchronousSPFExecutor(Logger,DNSService)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.terms.AMechanism.getAAAARecords(DNSService,String)": "Temporary example on how the AMechanism will need to change to support the events.\nWARNING: This introduces compilation errors around and changes to interfaces that will need to be reverted later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.SPF1RecordTestSuite()": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getMaxDepth()": "Various updates following the pmd hints.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408392 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExistsMechanism.ExistsMechanism()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.getTests()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AMechanism.AMechanism(String,String)": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getClientDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getCurrentSenderPart()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.SPFResult(String,String,SPF1Data)": "Removed SPFInternalResult (we don't use it anymore)\nMoved DefaultExplanationPolicy to policies.local\nIntroduced a common abstract SPFResultException to be used as the root of our exceptions: the concrete implementations provide also the string representation of the result to use.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.ExceptionCatcher(SPFChecker,SPFChecker)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.SPF(DNSService)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.getSPFCommands()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setupData(String,String)": "Finally fix JSPF-60 ( all tests pass again )\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630454 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.getHeaderName()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSRequest.DNSRequest(String,int)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.get16Bit(int,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.enableMacroExpand(MacroExpand)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousYamlTest(SPFYamlTestDescriptor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.getChildLogger(String)": "Removed unused methods constants to reach 76.5% coverage (ok this is cheating ;-) )\nMoved service implementations with dependencies in the impl package (we could even move this to a different module)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453285 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.BestGuessPolicy.getSPFRecord(String,SPF1Record)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFCheckerExceptionCatcherImplementation.onException(Exception,SPFSession)": "Minor fix in probably unused code. (we returned the short error instead of the long one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630792 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getClientDomain()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.getRecordsAsynch(String,int,Object,IResponseQueue)": "Change DNSServiceXBillImpl callback to use a callback thread because it wasn't respecting the contract.\nThe callback of an asynch method should never be called by the original caller thread.\nA better solution could be to use a thread pool, but the dnsjnio implementation will take care of this.\nThe DNSJava based Staged executor is simply a proof of concept.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532141 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.onDNSResponse(DNSResponse,SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getPolicies()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.isDebugEnabled()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.onDNSResponse(DNSResponse,SPFSession)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.UDPResponder.UDPResponder(DatagramSocket,InetAddress,int,byte,ResponseGenerator)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1Utils.nameToResult(String)": "Fix/add javadocs\nReplace catch Exception with the right Exception types\nReformat some stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.SPFTest(String)": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.SPF1Parser(Logger)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.isMatch()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.SPF1Data(String,String,String,DNSService)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.internalLoadTests(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.checkUnknownMechanism()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getAAAARecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.getSpfExecutorType()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImplTest.testMultipleStrings()": "DNSJava already parsed quoted TXT records correctly, so I moved the \"unquote\" to the resolver instead of the SPFRetriever that now expect a single, unquoted, string (JSPF-72)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSRequest.getRecordType()": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.SPF1Utils.resultToName(String)": "Move SPFUtils to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532396 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getInAddress()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.getTermDef()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.Directive(String,Mechanism,Logger)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneYamlTest(SPFYamlTestSuite,String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP6Mechanism.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.matchVariable(String)": "-Add logging\n-Add javadocs\n-Rename a method to better reflect the usage\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408398 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.setTimeOut(int)": "-Now its possible to configure the timeout for dnsrequests before an TempError is returned. Default timout is 20 seconds\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408375 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercentAloneIsError()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFQuery.generateOptions()": "Use commons-cli for commandline usage. See JSPF-33\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450830 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.getPattern()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.setRecordLimit(int)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.SPF1RecordTestSuite()": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandDomain(String,MacroData)": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.isWarnEnabled()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.split(String,String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.removeEntry(String)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.AbstractYamlTest.getSpfRecord(String,String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.SPFResult(String,String,SPFSession)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.BestGuessPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runExpCommand()": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getMaskLength()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getHostName()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setUnknownCommand(String)": "Remove unneeded methods and variables. Thx Stefano :-)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408220 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setExplanation(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getTests()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.getSPFRecordFallback(String)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.enableMacroExpand(MacroExpand)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.addAnswer(Message,Name,int,int,int,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.get8BitAddress(int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getMacroIpAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.setRecordLimit(int)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.setData(HashMap)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getInAddress()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.initializeFallbackPolicy()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.isValidIP4Word(String)": "Move Inet6Util to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddrTest.testInvalidIp4AddressGreatThan255()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.onDNSResponse(DNSResponse,SPFSession)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getIPAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getTxtCatType(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getQualifier(String)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.setZonedata(Map)": "Fix generics in test (ClassCastException)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@952775 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.checkSPF(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP6MacroData.getIpAddress()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.byteToInternal(byte)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getAddresses(String,int)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFTest.SPFTest(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.config(Configuration)": "Some code cleanup. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@493030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.TermDef(Class)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getReadableIP()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.TCPServer.TCPServer(Socket,ResponseGenerator)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.getComment()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.findNSRecords()": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.useTrustedForwarder(boolean)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.parseRecord(String,SPF1Data)": "Macro expand domain \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408252 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.init(SPFChecker)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.matchAnyARecord()": "Remove specific support for a/0 and a//0: simply removed the code and test still pass!\nSplitted MAX_DEPTH into MAX_DEPTH (spf recursion) and MAX_DEPTH_DNS (dns records returned)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448196 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFQuery.usage()": "Add new class for commandline usage. See JSPF-13\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@409155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.TempErrorException.TempErrorException()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServerLauncher.main(String)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTestSuite.SPF1RecordTestSuite()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP6Mechanism.run(SPF1Data)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.loadTests(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.setDNSService(DNSService)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousYamlTest(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.getExplanation()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.ResponseQueueImpl.isEmpty()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.addListener(IFutureSPFResultListener)": "Add support for IFutureSPFResultListener. See JSPF-94\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@1202747 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.Directive.getMechanism()": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getTests()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getMXRecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getAAAARecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.run(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.getSPFRecord(String)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getDnsProbe()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408YamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getSpfRecord(String,String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.run(SPF1Data)": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.expandHost(SPF1Data)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setDnsProbe(DNSService)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.SPF1RecordTest(String,String,String,String,String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getHeaderText()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getMailFrom()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.SPF1ParserTest(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408356 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.IPAddrTest.testValidIp4Address()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(DNSService,Logger)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.IResponseImpl.getId()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddrTest.testValidIp4OverIpv6Address()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.checkSPF(SPFSession)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getAAAARecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.onDNSResponse(DNSResponse,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.FallbackPolicy(Logger,SPFRecordParser)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.addAdditional2(Message,int,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.SPFResultException.SPFResultException(String)": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPF(DNSService)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.getSpfExecutorType()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.wiring.WiringServiceTable.wire(Object)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getDnsProbe()": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getMacroIpAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.SPFResult(SPFSession)": "Only some small javadocs corrections\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@543521 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImplTest.tearDown()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getMXRecords(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ChainPolicy.getSPFRecord(String)": "Refactored the Policy support from Nested (Policy/NestedPolicy/AbstractNestedPolicy) to Policy+PolicyPostFilter and linear iterative pattern (simpler to be approached via events).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529418 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.getZonedata()": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupAndResultChecker.restoreSession(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.setRecordLimit(int)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getAddresses(String,int)": "Moved IPAddr to core.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.loadTests()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getReadableIP()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IResponseImpl.IResponseImpl(Object,Exception)": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getIpAddress()": "Updated openspf test suite to 2009.10 (all tests still pass). Updated code to reflect dnsjnio 1.0.3 new packaging (it doesn't have any more classes in the dnsjava namespace) (JSPF-87, JSPF-85 and JSPF-84) \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896924 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.enableLogging(Logger)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.UDPListener.UDPListener(InetAddress,int,ResponseGenerator)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExceptionCatcher.onException(Exception,SPFSession)": "IllegalStateException(Exception e) is not available in java 1.4\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@543105 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Utils.resultToName(String)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousYamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.getHeaderText()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getMXRecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getARecords(String,int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.AbstractNestedPolicy.setChildPolicy(Policy)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.getIntValue(char)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ParseRecordPolicy.ParseRecordPolicy(SPFRecordParser)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFQuery.usage()": "Using commons-cli formatter for usage. Improved parameter documentation and added short options.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@577050 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.removeFallBackEntrys(String)": "Add support for Override. See JSPF-36 and JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453520 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expand(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.setLogger(Logger)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getAddress(byte,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.run()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.PTRMechanism.onDNSResponse(DNSResponse,SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.PTRResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.setZonedata(HashMap)": "Updated openspf yaml tests to current trunk and fixed a couple of bugs in JSpf testsuite:\n1) mocked dns server was case sensitive in search => changed to use lowercase hosts\n2) mocked dns server did not support CNAMEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@475183 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getMaskedIPAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408YamlTest(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.ExpModifier.enforceSingleInstance()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.isInfoEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getARecords(String,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.SPF1ParserTest(SPF1RecordTestDef,SPF1Parser)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.getHeaderText()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.checkSPF(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getTXTRecords(String)": "Add more logging in the exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408228 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.addGlue(Message,Name,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.SPF1Parser(String,SPF1Data)": "Fix to the regexp. Added the matcher method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408243 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.lookupAndCreateTerm(MatchResult,int)": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getMaxDepth()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getFallBack()": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getMaskAddress()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TermDef.getMatchSize()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.SPF1RecordTest(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.ResponseQueueImpl.insertResponse(IResponse)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createTerm(String,Class)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.checkCommand(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.getHeaderName()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getHostName()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.getPolicies()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.isValidIP6Address(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.reverseIP(int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.getSPFRecordOverride(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getPTRRecords(String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getAddressList(String,int)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.internalLoadTests(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.getModifiers()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.setComment(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandExplanation(String)": "Second fix for macro expansion: now it should be strict and compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@496403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.getTermDef()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.createByteArrayFromIPAddressString(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.DNSServiceXBillImpl(Logger,Resolver)": "Allow use of a custom Resolver (JSPF-61)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@680099 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.SPF(DNSService)": "Updated SPFTest for new TempErrorException,\nUpdated SPF to use a single parser for multiple checks\nUpdated Directive to throw error with no mechanism\nImproved exception for IP4 not matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408330 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecordsAsynch(String,int,Object,IResponseQueue)": "Move IResponse implementation to the right package and tree\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.pushChecker(SPFChecker)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.FutureSPFResult(Logger)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.getResponseQueue()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.TrustedForwarderPolicy.getSPFRecord(String,SPF1Record)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.SPFSuite.getARecords(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandMacroString(String)": "Fix macro expansion: now it should be more strict and compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@496365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getPTRRecords(String)": "Add more logging in the exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408228 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getReceivingDomain()": "Some code cleanup. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@493030 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getInAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NoSPFRecordFoundPolicy.getSPFRecord(String,SPF1Record)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getReverseIP()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercK()": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.ExistsMechanism.run(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.toString()": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultSPFChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.PermErrorException.PermErrorException(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getAAAARecords(String,int)": "-Add getAAAARecords method\n-Modify AMechanism to use getARecords for ipv4 connections and getAAAARecords for ipv6 connections\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408334 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.runTest()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NeutralException.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.matchVariable(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.PTRMechanism.run(SPF1Data)": "-TempErrorException get now thrown if the lookup result is not HOST_NOT_FOUND or SUCCESSFULLY\n-Change the method getARecords to use lookup method of dnsjava so we can check for the query result\n-change a few classes to throw the TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408328 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.checkReady()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.info(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getMXRecords(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.invokeAsynchService(SPFSession,FutureSPFResult,DNSLookupContinuation,boolean)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IncludeMechanism.init(String)": "Cleaning refactoring: Mechanism \"building\" logic moved to SPF1Parser.\nNow the Mechanisms need only to declare their REGEX as static \"known\" fields.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408321 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.setData(HashMap)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.getHeader()": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.TrustedForwarderPolicy.setHost(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.run(SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.checkSPF(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.MatcherBasedConfiguration.MatcherBasedConfiguration(Matcher,int,int)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.addAdditional(Message,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setupData(String,String)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Utils.resultToName(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setCurrentResult(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFTest.loadTests()": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermDefinition.calcGroups(String)": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getComment()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.matchMacro(String)": "Fix/add javadocs\nReplace catch Exception with the right Exception types\nReformat some stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.IncludeModifier.run(SPF1Data)": "-Add include Modifier\n-Change the run method of the Modifier interface and GenericModifier abstract class to return a String\n-Some format fixes\n-Remove not needed methods from SPF1Data\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408298 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getPTRRecords(String)": "Fix a bug in which the Exception in PTRMechanism was not catched correctly. See JSPF-23\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@433297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.TimeoutException.TimeoutException(String)": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.setIP6Defaults()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.isIPAddr(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.findNSRecords()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.isValidHexChar(char)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getHostName()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.removeAttribute(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getMaskAddress()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.SPFMailZoneTest(SPF,SPFTestDef)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getClientDomain()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getMailFrom()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.start()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getConvertedIP(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getSpfRecord(String,String)": "-more include tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408437 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.maskedAddress(int,int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.PolicyChecker.checkSPF(SPFSession)": "Refactored SPFRetriever/SPFStrictCheckerRetriever to implement SPFChecker and support DNSLookupContinuation.\nThis was probably the last component not yet using DNSLookupContinuation, so it should be easy to call everything asynchronously now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531202 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.isValidIP6Address(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.runTest()": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getAddress(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getAAAARecords(String,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408356 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.AbstractNestedPolicy.getSPFRecordOverride(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.getHost()": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getLocalDomainNames()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.IResponseImpl.getId()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.Inet6Util.isValidHexChar(char)": "Removed dependencies from InetAddress. Changed ip string checks to \"syntax only\" checks (no dns lookups).\nAdded an IPAddr test for IPV4 and IP6 address strings check\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408231 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.extractSPFRecord(List)": "DNSJava already parsed quoted TXT records correctly, so I moved the \"unquote\" to the resolver instead of the SPFRetriever that now expect a single, unquoted, string (JSPF-72)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.hasNext()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFInternalResult.getResultChar()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(DNSService,SPFRecordParser,Logger,MacroExpand)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getInAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousYamlTest(SPFYamlTestDescriptor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Utils.checkFQDN(String)": "Changed FQDN regex check \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408314 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getPattern()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.groupCount()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckDNSResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.maskedAddress(int,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.AbstractNestedPolicy.getSPFRecordFallback(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.replaceLiterals(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.main(String)": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.getHeader()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.enableDNSService(DNSService)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.setComment(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.ExpModifier.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.setComment(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.getDNSService()": "Add an other SPFRetriever which can be used to strict use RFC. See JSPF-37\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454733 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.fatalError(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.enableDNSService(DNSService)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.setDefaultExplanation(String)": "Allow the user to set a default explanation. See JSPF-28\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449441 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.setRecordLimit(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyChecker.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AbstractMechanism.AbstractMechanism(String,String)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.getMatchSize()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.run()": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.isWarnEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.stripDot(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.MacroExpand(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.checkAddressList(IPAddr,ArrayList)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.getException()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.findRecords(Name,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.isMechanism()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setDnsProbe(DNSService)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getMXRecords(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.toString(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.RFC4408SPF1Parser.createRegex(Collection)": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupChecker.checkSPF(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getCurrentDepth()": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.config(ConfigurationMatch)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.setMask(int)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.setTests(HashMap)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.GenericModifier.config(MatchResult)": "Refactored, again, the parser creation scheme. Now the parser know very little of the mechanism/modifier internals and dynamically build the regexp starting from modifier/mechanism collections. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408322 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Record.getModifiers()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.start()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getAAAARecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.TimeoutException.TimeoutException(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.PermErrorException.PermErrorException()": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.start()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercD()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getReverseIP()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.isIPAddr(Object)": "Moved IPAddr to core.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408373 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.ConsoleLogger(int)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.suite()": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSRequest.getHostname()": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.SPF1TestMockDNSService()": "-Add 4 new tests to get sure that the redirect modifier and include modifier works like expected! It seems so :-)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408433 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.UnknownModifier.enforceSingleInstance()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.group()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.config(ConfigurationMatch)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.info(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.TimeoutException.TimeoutException(String)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP6Mechanism.getMaxCidr()": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.SPFSuite()": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.fatalError(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.getFilename()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.isAMechanism(String)": "Add some regex and start with validation methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408237 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setupData(String,String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImplTest.testGetLocalDomainNames()": "Fix/add javadocs\nReplace catch Exception with the right Exception types\nReformat some stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.replaceLiterals(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.insert(Response)": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample3()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.getComment()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.byteToInternal(byte)": "Removed unused code, added a few TODOs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408393 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.enableMacroExpand(MacroExpand)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.info(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getExplanation()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.isReady()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample5()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.checkExpand(String,SPFSession,boolean)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getAList(ArrayList,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercL()": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setIgnoreExplanation(boolean)": "- implement the exp modifier correct for include and redirect!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408443 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.SPFResult(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.SPF1Parser()": "Added pom.xml for maven (untested)\nMoved resources to resouces subfolder\nMoved terms declaration to jspf.default.terms (The parser is no logger aware of the terms package)\nCreated a manifest (untested)\nAdded further fix/comments to test.txt: now we pass all the tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408376 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.loadTests()": "Updated SPFTest for new TempErrorException,\nUpdated SPF to use a single parser for multiple checks\nUpdated Directive to throw error with no mechanism\nImproved exception for IP4 not matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408330 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getAttribute(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getSenderDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.RFC4408SPF1Parser.lookupAndCreateTerm(Matcher,int)": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP6MacroData.getMacroIpAddress()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.onDNSResponse(DNSResponse,SPFSession)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.SPFYamlDNSService(HashMap)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NoSPFRecordFoundPolicy.getSPFRecordFallback(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.isValidIP(String)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.lookup(DNSService,DNSRequest,SPFSession,SPFCheckerDNSResponseListener)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setIgnoreExplanation(boolean)": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetrieverDNSResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.config(ConfigurationMatch)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.reverseIP(int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getMailFrom()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getTxtCatType(String)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.group()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getHostName()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.end()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getAddressList(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.calcGroups(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.PermErrorException.PermErrorException(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.suite()": "quick commit for testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408239 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getTXTRecords(String)": "Refactored DNSServiceXBillImpl to remove duplicate code (introduced a generic getRecords including common code)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449486 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.isInfoEnabled()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getRedirectDomain()": "Add RedirectModifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408296 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.getException()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.addFallBackEntry(String,String)": "Removed SPFInternalResult (we don't use it anymore)\nMoved DefaultExplanationPolicy to policies.local\nIntroduced a common abstract SPFResultException to be used as the root of our exceptions: the concrete implementations provide also the string representation of the result to use.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.getMXRecords(DNSService,String,int)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.generateReply(Message,int,Socket)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.isMatch()": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.checkSPF(SPFSession,SPF1Record)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.getTermDef()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.checkSPF(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.formerrMessage(byte)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.SPFMailZoneTest(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.getHeaderText()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.byteToInternal(byte)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getSPFRecordFallback(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.ResponseQueueAdaptor.getValue()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.createTermDefinitionCollection(Class)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.SPF1Parser(String)": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408316 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.PolicyChecker.PolicyChecker(LinkedList)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.YamlTest.YamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getCurrentResultExpanded()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.AMechanism.config(MatchResult)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.config(Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.SPFSuite()": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.isValidIP4Word(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.isFatalErrorEnabled()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getARecords(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.run(SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.wiring.WiringServiceException.WiringServiceException(String,Exception)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecords(String,int)": "Updated openspf yaml tests to current trunk and fixed a couple of bugs in JSpf testsuite:\n1) mocked dns server was case sensitive in search => changed to use lowercase hosts\n2) mocked dns server did not support CNAMEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@475183 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getLocalDomainNames()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.getPTRRecords(String)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.getIp()": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP6Mechanism.isValidAddress(String)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.maskedAddress(int,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getInAddress(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.parse(String)": "Handle caseinsenitive spfrecords correctly\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453881 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MechanismResultChecker.checkSPF(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.expand(String,MacroData,boolean)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.SPF1RecordTestSuite()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.getHeader()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallbackPolicy.getFallBackEntry(String)": "Rename class to better reflect the usage. See JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450831 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.addFallBackEntry(String,String)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.checkAddressList(IPAddr,List)": "Start fixin failing yaml tests.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.isValidAddress(String)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.start(int)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.BasicSuite.BasicSuite()": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyPostFilterChecker.SPFPolicyPostFilterChecker(PolicyPostFilter)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServerLauncher.generateOptions()": "\"Correct usage\" of OptionBuilder to eliminate warnings (JSPF-80)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801664 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.DNSJnioAsynchService()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.TempErrorException.TempErrorException(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getAddress(byte,int)": "Removed unused code, added a few TODOs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408393 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1Utils.checkFQDN(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getClientDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getPTRRecords(String)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.get16Bit(int,int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.MatchResultSubset(MatchResult,int,int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getComment()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercK()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.setSPFSession(SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.subset(ArrayList)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setCurrentDomain(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getAList(ArrayList,int)": "Add javadocs and author section\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408281 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.setMatch(boolean)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.expandHost(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.setTimeOut(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.PTRMechanismn.init(String,String,int)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.initializePositions()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.fatalError(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF()": "Fix for previous commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408383 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runMXCommand(IPAddr,String)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getCurrentDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServerLauncher.generateOptions()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.Directive.toString()": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(Logger)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getMailFrom()": "Renamed SPF1Data to SPFSession. Added basic attributes support to SPFSession\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531080 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getAAAARecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.setSPFSession(SPFSession)": "Only some small javadocs corrections\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@543521 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.onDNSResponse(DNSResponse,SPFSession)": "Added ExceptionCatcher stack in SPFSession.\nThe exceptioncatcher allow correct management of exceptions raised from SPFCheckers in recursive spf checks (redirect/include).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531166 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFStrictCheckerRetriever.onDNSResponse(DNSResponse,SPFSession)": "Add some javadocs\nReplace anonymous inner classes whith nested inner classes \nSome minor refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532386 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.StagedMultipleSPFExecutor(Logger,DNSAsynchLookupService)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DefaultSPFChecker.checkSPF(SPFSession)": "Fix a bug which can cause an invalid header id\nAdd javadocs\nSome minor refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@536180 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.subset(ArrayList,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.SPF1RecordTest(SPF1RecordTestDef)": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getCurrentResult()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.config(MatchResult)": "Updated SPFTest for new TempErrorException,\nUpdated SPF to use a single parser for multiple checks\nUpdated Directive to throw error with no mechanism\nImproved exception for IP4 not matching\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408330 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.fatalError(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.checkSPFLogged(SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.getId()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.toString()": "Updated rfc4408.yml tests from new.openspf.org (we still pass them)\nIntroduced an SPFChecker interface to be used for recursive call as a dependency.\nMade it possible for SPF to receive an external SPFParser (so we can reuse it)\nOptimized tests to reuse a single SPFParser between tests (it is stateless)\nFixed SPF to avoid settingup the FallbackPolicy if not enabled.\nRemoved few catch(Exception e) in favor of specific exception catches\nChanged ipAddr method to avoid throwing NumberFormatException and wrap it in a PermErrorException.\nChanged include/redirect to not create a new SPF object but to use the spfProbe (SPFChecker) service embedded in spf1data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452402 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testPercL()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.lookupAndCreateTerm(String,Map)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTestSuite.SPFTest(String,String,String,String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.isReady()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getSPFRecordPostFilter(String,SPF1Record)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneSuite.MailZoneSuite()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.onDNSResponse(DNSResponse,SPFSession)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.encodeURL(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.onException(Exception,SPFSession)": "Minor fixes and updated README.txt to reflect the catchers removal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getSpfRecord(String,String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.replaceCell(String)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setClientDomain(String)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.execute(SPFSession,FutureSPFResult)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.SPFTest(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecordTypeDescription(int)": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.lookupAndCreateTerm(Matcher,int)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getRecords(DNSRequest)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.core.IPAddr.getReverseIP()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.isFatalErrorEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getReadableIP()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MechanismResultChecker.checkSPF(SPFSession)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.impl.Log4JLogger.warn(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFRecordChecker.checkSPF(SPFSession)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.run()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getSpfExecutorType()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.runTest()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.SPFYamlTestDescriptor(HashMap,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample2()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.getExplanation()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.FutureSPFResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getIPAddress(int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.SPF1ParserTest(SPF1RecordTestDef)": "quick commit for testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408239 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.error(String,Throwable)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.config(Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ResponseImpl.getId()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.getIpAddress()": "Updated openspf test suite to 2009.10 (all tests still pass). Updated code to reflect dnsjnio 1.0.3 new packaging (it doesn't have any more classes in the dnsjava namespace) (JSPF-87, JSPF-85 and JSPF-84) \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896924 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getIPAddress()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getClientDomain()": "Generalized ArrayList to List in DNSService, added HardCoded DNSServiceMock to return tested dns zones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408234 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getSpfRecord(String,String)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.matchSize()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.getPattern()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousYamlTest(SPFYamlTestSuite,String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSResponse.DNSResponse(List)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.addAnswer(Message,Name,int,int,int,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.setTests(HashMap)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.getTests()": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFSuite.SPFSuite()": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.debug(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.ExpModifier.enforceSingleInstance()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.FinallyChecker.checkSPF(SPFSession)": "Made a refactoring so that there is no more an ExceptionCatcher stack in SPFSession.\nNow every SPFChecker can implement ExceptionCatcher so that a single checker stack is needed/used and it seem a little clearer and the logic to remove \"skipped\" checkers can be moved to the executors (much better).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630828 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getTxtCatType(String)": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.DefaultExplanationPolicy(Logger,String,MacroExpand,DNSService)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TermDef.getTermDef()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest(SPFYamlTestDescriptor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.toString()": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getRawEntry(String)": "Start to generify (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801717 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TermDef.matchSize()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IncludeMechanism.config(MatchResult)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getTimeStamp()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.getAAAARecords(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.expandExplanation(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.invokeAsynchService(SPFSession,FutureSPFResult,DNSLookupContinuation,boolean)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.addAdditional2(Message,int,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.stripDot(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.getMechanism()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.getTxtCatType(DNSService,String)": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getSenderDomain()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.generateHeader(String,SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.checkSPF(String,String,String)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.loadTests()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TempErrorException.TempErrorException(String)": "-Add AllMechanismn\n-Add TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408291 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.setIP6Defaults()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SynchronousSPFExecutor.execute(SPFSession,FutureSPFResult)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFInternalResult.getExplanation()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getReceivingDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.error(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.SPFYamlTestSuite(HashMap,int)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.IResponseImpl.getException()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.OverridePolicy.OverridePolicy(SPFRecordParser)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getAddressList(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFMailZoneTest.suite()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.onException(Exception,SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getAddress(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.calcGroups(String)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.InitialChecksPolicy.getSPFRecordOverride(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getSpfRecord(String,String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.debug(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupAndResultChecker.init(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ResponseImpl.ResponseImpl(Object,Exception)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.SPF1Data(String,String,String,DNSService)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getMatchSize()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.end(int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPFTest.runTest()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecordsAsynch(DNSRequest,Object,IResponseQueue)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.warn(String,Throwable)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.getFilename()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.setComment(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.checkSPF(SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.run(SPF1Data)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getCurrentDomain()": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.addEntry(String,String)": "Remove unnecessary synchronized statements (JSPF-82)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801761 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.toString()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.subset(ArrayList)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getIPAddress(int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.stringToInternal(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.SPF1Utils.checkFQDN(String)": "Move SPFUtils to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532396 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.main(String)": "Fix for previous commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408383 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousSuite.RFC4408AsynchronousSuite()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddrTest.testValidIp4Address()": "format source \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408315 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getDNSServiceMockedDNSService()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408Suite()": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.UDPListener.UDPResponder(DatagramSocket,InetAddress,int,byte,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyChecker.checkSPF(SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.loadTests(String)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.GenericMechanism.expandHost(SPF1Data)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.IResponseImpl.IResponseImpl(Object,List)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.getRecordsAsynch(DNSRequest,Object,IResponseQueue)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.warn(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.getDirectives()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.isIP4()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.convertToBytes(String,byte,int)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.SPF1Data(String,String,String,DNSService,SPFChecker)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.error(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.reverseIP(int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFExplanationTest.SPFExplanationTest(String)": "-Add Explanation tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408444 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.Directive.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.SPFYamlTestSuite(HashMap,int)": "Updated openspf yaml tests to current trunk and fixed a couple of bugs in JSpf testsuite:\n1) mocked dns server was case sensitive in search => changed to use lowercase hosts\n2) mocked dns server did not support CNAMEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@475183 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.getExplanation()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFCheckerExceptionCatcherImplementation.SPFCheckerExceptionCatcherImplementation(SPFChecker,Logger)": "Fix for a newly introduced NPE. I made this inner class \"static\" and forgot to assign the logger.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetrieverPolicy.SPFRetrieverPolicy(DNSService)": "Add an other SPFRetriever which can be used to strict use RFC. See JSPF-37\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454733 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.replaceLiterals(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercentAloneIsError()": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.checkSPF(SPF1Data)": "Small change to ExpModifier to support \"exp=\" as non permerror as required by the currently discussed Errata for RFC4408.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.TCPListener.run()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setCurrentDepth(int)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetrieverPolicy.retrieveSpfRecord(String)": "Add an other SPFRetriever which can be used to strict use RFC. See JSPF-37\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454733 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.ExpModifier.init(String)": "Refactored, again, the parser creation scheme. Now the parser know very little of the mechanism/modifier internals and dynamically build the regexp starting from modifier/mechanism collections. \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408322 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.getTermDef()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.Log4JLogger(org)": "Removed unused methods constants to reach 76.5% coverage (ok this is cheating ;-) )\nMoved service implementations with dependencies in the impl package (we could even move this to a different module)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453285 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getIpAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.end()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getTxtCatType(String)": "Add javadocs and author section\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408281 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getARecords(String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TermDef.getPattern()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.isCommand(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getCurrentDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getMailFrom()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.getDNSService()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getMXNames(String)": "Add more logging in the exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408228 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getAAAARecords(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setDnsProbe(DNSService)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.convertRecordsToList(Record)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getTxtCatType(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSRequest.getRecordType()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getMXRecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.addAdditional(Message,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.setMatchAnyARecord(boolean)": "Remove specific support for a/0 and a//0: simply removed the code and test still pass!\nSplitted MAX_DEPTH into MAX_DEPTH (spf recursion) and MAX_DEPTH_DNS (dns records returned)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448196 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.config(Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getRecordLimit()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getSpfRecord(String,String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.getRecords(DNSRequest)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getReadableIP()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.DefaultTermsFactory(Logger,WiringService)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.policies.local.BestGuessPolicy.getSPFRecordFallback(String)": "Removed method from the AbstractNestedPolicy: the postfilter already has the capabilities of the fallback filter, so no need to use both.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getMechanismn()": "replace some methods. And change a few to private cause these should never called from other classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408268 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.generateReply(Message,int,Socket)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.getExplanation()": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.TrustedForwarderPolicy.getUpdatedDirectives()": "Remove not needed synchronized \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452845 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFQuery.getReturnCode(String)": "Removed unused methods constants to reach 76.5% coverage (ok this is cheating ;-) )\nMoved service implementations with dependencies in the impl package (we could even move this to a different module)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453285 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getAddressList(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getMXNames(String)": "Fix a bug which throw an temperror if no record of the queried type was found\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408575 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationChecker.enforceSingleInstance()": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.MacroExpand(Logger)": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.RFC4408SPF1Parser.initializePositions()": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.isValidIP4Word(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.RFC4408SPF1Parser.parse(String)": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.SPF1Command(String,SPF1Data)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.getComment()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest(SPFYamlTestSuite,String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddrTest.testInvalidIp6Address()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.GenericMechanism.config(MatchResult)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.initializePositions()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample5()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.warn(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServer.addRRset(Name,Message,RRset,int,int)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.SPF(DNSService,Logger)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.onDNSResponse(DNSResponse,SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.getModifiers()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408365 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getSpfRecord(String,String)": "Add javadocs and author section\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408281 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.UDPListener.UDPListener(InetAddress,int,ResponseGenerator)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.SPF1ParserTest(SPF1RecordTestDef,SPFRecordParser)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.onDNSResponse(DNSResponse,SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.checkSPF(SPF1Data)": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.expandMacroString(String,MacroData,boolean)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.setRecord(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.setRecordLimit(int)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.UDPResponder.run()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getARecords(String)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runIncludeCommand()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermsFactory.getModifiersCollection()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.checkSPF(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.makeQuery(DNSRequest,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.Inet6Util.createByteArrayFromIPAddressString(String)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneYamlTest(SPFYamlTestDescriptor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.stripInvalidMX(ArrayList)": "Remove unneeded code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.getChildLogger(String)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.getId()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MatchResultSubset.groupCount()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.getSPFRecord(String)": "Refactored SPFRetriever/SPFStrictCheckerRetriever to implement SPFChecker and support DNSLookupContinuation.\nThis was probably the last component not yet using DNSLookupContinuation, so it should be easy to call everything asynchronously now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531202 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.Directive.getQualifier()": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.createRegex(Collection)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.parseCommands(String)": "Remove unneded Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408216 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP4Mechanism.IP4Mechanism(String,String)": "Cleaning refactoring: Mechanism \"building\" logic moved to SPF1Parser.\nNow the Mechanisms need only to declare their REGEX as static \"known\" fields.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408321 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getZonedata()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.SPF1ParserTest(SPF1RecordTestDef,SPF1Parser)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getMXRecords(String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.AllMechanism.init(String)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.IResponseImpl.IResponseImpl(Object,Exception)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.replaceHelper(Matcher)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.getExplanation()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample1()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.PTRMechanism.run(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getRawFallBackEntry(String)": "Add support for Override. See JSPF-36 and JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453520 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceAsynchSimulator.DNSServiceAsynchSimulator(DNSService,boolean)": "Changed StagedMultipleSPFExecutor to use a static int for lookups identifier.\nAlso refactored it to limit the pending lookup queue to 50 and block new lookup submissions otherwise (execution).\nAdded a flag to DNSServiceAsynchSimulator to make it simulate the Asynchronous behaviour by using multiple threads.\nRefactored DNSServiceXBillImpl to export a static method to convert a dnsjava's Record[] into our DNSService List<String> result.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533796 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testDoublePercent()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getDefaultExplanation()": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.setSPFResult(SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneYamlTest(String)": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousSuite()": "We don't need this file not found lazy \"check\" anymore. We can bundle the testsuite file now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@630793 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.checkSPF(SPFSession)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.remove()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFSuite.SPFSuite()": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getSenderDomain()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.terms.TrustedForwarderMechanism.setHost(String)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.tests.TestSPF.runTest(String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.SPF1Data(String,String,String,DNSService)": "Various updates following the pmd hints.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408392 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.UnknownModifier.enforceSingleInstance()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.TCPListener.run()": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getPolicy()": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getDnsProbe()": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.start(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.DefaultSPF1Parser(Logger,TermsFactory)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IncludeMechanism.IncludeMechanism()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.getARecords(DNSService,String)": "Alternative fix for previusly fixed ClassCastException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@454181 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.ParseRecordPolicy.getSPFRecord(String,SPF1Record)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTestSuite.runTest()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest(SPFYamlTestSuite)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.getMatchSize()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getSpfRecord(String,String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.expandHost(SPF1Data)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.setExceptionHandlerChecker(SPFChecker,SPFChecker)": "Added ExceptionCatcher stack in SPFSession.\nThe exceptioncatcher allow correct management of exceptions raised from SPFCheckers in recursive spf checks (redirect/include).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531166 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.Inet6Util.getIntValue(char)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getRecordLimit()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.SPFTest(String,String,String,String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getAddress(byte)": "Removed unused code, added a few TODOs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408393 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NoneException.NoneException(String)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getAAAARecords(String)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.Inet6Util.isValidIP4Word(String)": "Removed dependencies from InetAddress. Changed ip string checks to \"syntax only\" checks (no dns lookups).\nAdded an IPAddr test for IPV4 and IP6 address strings check\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408231 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecords(String,int,int)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.convertToBytes(String,byte,int)": "Added ip6 parsing stuff from Harmony project and changed IPAddr to use that code.\nNow we pass IP6 parsing tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSResponse.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.setMask(int)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getSenderDomain()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.LoggingDNSService(DNSService)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getInAddress()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.SPFTest(SPF,SPFTestDef)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getAddress(byte,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.start()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.setMask(int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.setZonedata(HashMap)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getRecords(String,int,String,String)": "Removed NoneException from DNSService: we now return null when no record is found (JSPF-29)\nTemporarily changed the first rfc4408 test to add 10 chars to the tested label (To be verified)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449592 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getARecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestSuite.getTests()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.TCPServer.run()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Directive.setPrevious(Boolean)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchPolicy.checkSPF(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.LoggingDNSService()": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.toString()": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.ResponseQueueImpl.removeResponse()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.ConfigurationMatch.groupCount()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.createTerm(String,Class,Pattern)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneYamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.FutureSPFResult()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1TestMockDNSService.getAddressList(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.run(SPFSession)": "Another step toward event based flow.\nmacroExpand.expand now will return null if the clientDomain is needed to be resolved and it has not been resolved yet, so the client can do the dns lookup and try again.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531130 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP6Mechanism.isValidAddress(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getLocalDomainNames()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getMXRecords(String,int)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMZMockDNSService.getPTRRecords(String)": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP6MacroData.getReadableIP()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.getDirectives()": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousYamlTest(SPFYamlTestSuite)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getHostName()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.getFilename()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.removeFallBackEntrys(String)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercS()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.createTerm(Class,Configuration)": "Promoted public nested exception classes to top level classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574277 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.MatchResultSubset.group(int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getIPList(String,int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getAList(ArrayList,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.getSenderDomain()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.setWarning(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.TempErrorException.TempErrorException(String)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IncludeMechanism.run(SPF1Data)": "Implemented the IncludeMechanism.\nWe now pass 2 more tests. Maybe it is yet incomple/inaccurate.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408342 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTestSuite.SPF1RecordTest(String)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getSpfRecord(DNSService,String,String)": "Fix for 2 failing tests:\n1) SPF open group changed his mind about the MX limit\n2) The trim we did on the returned SPF was trimming a null in the spf record and we were not failing: now we don't trim it and correctly fail to parse it!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449688 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getHex(long)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408Suite.RFC4408Suite()": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getLocalDomainNames()": "Splitted mailzone tests (based on mocked but reproducing a real zone) from our specific tests (fully mocked).\nCleaned up the mocked dns services to not fallback to the real implementation. Created a LoggingDNSService that fallback to the XBill implementation but logs any call!\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408439 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.setTests(Map)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getMXNames(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.config(Configuration)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getSpfRecord(String,String)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AllMechanism.onDNSResponse(DNSResponse,SPFSession)": "Temporary example on how the AMechanism will need to change to support the events.\nWARNING: This introduces compilation errors around and changes to interfaces that will need to be reverted later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.NoneException.NoneException(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408YamlTest(SPFYamlTestSuite)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.AbstractYamlTest(SPFYamlTestDescriptor,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.splitMasks(String,boolean)": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getIPAddress()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.getLocalDomainNames()": "Removed unused methods constants to reach 76.5% coverage (ok this is cheating ;-) )\nMoved service implementations with dependencies in the impl package (we could even move this to a different module)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453285 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(DNSService,SPFRecordParser,Logger,MacroExpand,SPFExecutor)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.getPrefix()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.setMask(int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.suite()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.MXMechanism.MXMechanism()": "Cleaning refactoring: Mechanism \"building\" logic moved to SPF1Parser.\nNow the Mechanisms need only to declare their REGEX as static \"known\" fields.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408321 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.toString()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DefaultTermDefinition.getTermDef()": "move TermDefinition/TermsFactory implementations to impl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.GenericMechanism.config(MatchResult)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.DNSServiceXBillImpl.getTxtCatType(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.StagedMultipleSPFExecutor(Logger,DNSAsynchLookupService)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getARecords(String)": "Changed DNSService.getRecord to get an internal int as a type and to always return a list of strings for the lookup (JSPF-29)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449605 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.DNSTestingServerLauncher.usage()": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.PolicyChecker.PolicyChecker(LinkedList)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.TempErrorException.TempErrorException(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getMXRecords(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPFCheckerExceptionCatcherImplementation(SPFChecker)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.PTRMechanismn.run(SPF1Data)": "Rename prefix to qualifier to reflect next rfc\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408270 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.SPFYamlDNSService(HashMap)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getCurrentDomain()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getMaskAddress()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.DNSJnioAsynchService(ExtendedNonblockingResolver)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.hostExpand(DNSService,MacroExpand,String,SPFSession,boolean,SPFChecker)": "Another step.\nNow, when possible, the spfChecker simply push tasks into the spfSession, and they will be executed somewhere else (or later).\nAt the moment the SPF.checkSPF method takes care to execute pending jobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531136 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getReceivingDomain()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.increaseCurrentDepth()": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.getFallBackEntry(String)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.GenericModifier.config(MatchResult)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.setSPFSession(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.SPFTest(SPFTestDef)": "TestSuites refactoring to improve Eclispe integration (\"rerunnability\" of single tests).\nAdded \"implementation aware\" test_parser reading\nAdded spfjava specific errors to test_parser.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408217 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getHex(long)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.getIntValue(char)": "Added ip6 parsing stuff from Harmony project and changed IPAddr to use that code.\nNow we pass IP6 parsing tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408338 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.toString()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.FallbackPolicy(Logger,SPFRecordParser)": "Add support for Override. See JSPF-36 and JSPF-32\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453520 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getLocalDomainNames()": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.getRecordLimit()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FutureSPFResult.getExplanation()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.LoggingDNSService.getRecords(String,int)": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.setTimeOut(int)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSServiceXBillImpl.getMXNames(String)": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.setIP6Defaults()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecords(DNSRequest)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousSuite()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Parser.parse(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyPostFilterChecker.checkSPF(SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MockDNSService.getARecords(String,int)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFCheckerExceptionCatcherImplementation.onException(Exception,SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.onDNSResponse(DNSResponse,SPFSession)": "Fix some javadocs\nCode cleanup\nAdd license headers\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572765 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.isIPAddr(Object)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1RecordTest.runTest()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.getHeader()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.PermErrorException.PermErrorException()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.main(String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.setZonedata(HashMap)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getSPFRecord(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getZonedata()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.getValue()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.SPFResult(SPFSession)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Record.SPF1Record()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.get8BitAddress(int)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.Inet6Util.convertToBytes(String,byte,int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.extractMainSpfRecord(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getMaskedIPAddress()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.read(char)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.verifyResult(String,SPFResult)": "Some generics for test classes (and many suppresswarnings) (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@896939 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.removeResponse()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getMailFrom()": "-Add ExpMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408290 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getCurrentSenderPart()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.subset(ArrayList,int)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.toString()": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.tester.SPFYamlTestDescriptor.setComment(String)": "JSPF-75 Repackaged tester classes and files. https://issues.apache.org/jira/browse/JSPF-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@781370 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPF1Data.isMatch()": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.StagedMultipleSPFExecutor(Logger,DNSService)": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.expand(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.byteToInternal(byte)": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1RecordTestSuite.SPF1RecordTestSuite()": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationPolicy.DefaultExplanationPolicy(Logger,String,MacroExpand)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.setRecordLimit(int)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.ConsoleLogger(int,String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.errorMessage(Message,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSRequest.DNSRequest(String,int)": "Added better ipaddress comparison (PTRMechanism) by parsing the string to ipaddr and toString again (better matching for weird IPV6 addresses).\nFixed ExpModifier to remove leading and trailing quotes from TXT records retrieved.\nChanged AMechanism/DNSRequest/MacroExpand to check for FQDN synchronous checks before running the DNS lookups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533795 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.ErrorException.ErrorException(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.RedirectModifier.checkSPFLogged(SPF1Data)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.MXMechanism.run(SPF1Data)": "Fix/add javadocs\nReplace catch Exception with the right Exception types\nReformat some stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.toString()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPFPolicyChecker(Policy)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.subset(ArrayList,int)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP6MacroData.getIpAddress()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.onException(Exception,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.RFC4408AsynchronousYamlTest(SPFYamlTestSuite,String)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.setTests(HashMap)": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.Directive.Directive(String,Mechanism,Logger)": "More packages reorganization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576206 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.DefaultSPFChecker(Logger)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expand(String,MacroData,boolean)": "Add some more javadocs\nRename the DefaultSPF1Parser to RFC4408SPF1Parser and declare it final (because its a \"RFC\" implementation)\nFix a synchronize issue..\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@573848 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.NeutralIfNotMatchModifier.enforceSingleInstance()": "More Generics (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@801912 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getReceivingDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.removeFallBackEntrys(String)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Utils.resultToName(String)": "-TempErrorException get now thrown if the lookup result is not HOST_NOT_FOUND or SUCCESSFULLY\n-Change the method getARecords to use lookup method of dnsjava so we can check for the query result\n-change a few classes to throw the TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408328 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AMechanism.getIp6cidr()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.ReservedMX.isReserved(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getRecordsAsynch(DNSRequest,Object,IResponseQueue)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFResult.SPFResult(String,String,String,SPF1Data)": "Introduced SPFResult (and SPFInternalResult) objects and removed fields from the SPF class (part of JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408457 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.unsigned(byte)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.loadTests()": "Added pom.xml for maven (untested)\nMoved resources to resouces subfolder\nMoved terms declaration to jspf.default.terms (The parser is no logger aware of the terms package)\nCreated a manifest (untested)\nAdded further fix/comments to test.txt: now we pass all the tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408376 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.FallBack.getRawFallBackEntry(String)": "Add support for fallback (not sure i like the classname yet). See JSPF-31\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@450524 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.PTRResponseListener.onDNSResponse(DNSResponse,SPFSession)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getMaskAddress()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.Log4JLogger.Log4JLogger(org)": "Introduced Logger service and enable DI for logging (JSPF-20)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@425008 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1ParserTest.loadTests()": "Updated test_parser to pass all the tests. Many tests were not spec compliant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408339 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.SPF1Data(String,String,String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFQuery.main(String)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.TermDef.matchSize()": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.localpolicy.FallbackPolicy.FallbackPolicy(Logger)": "Add support for trusted-forwarder.org. See JSPF-30\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.PermErrorException.PermErrorException(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SynchronousSPFExecutor.execute(SPFSession,FutureSPFResult)": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.mechanismn.AMechanism.checkAddressList(IPAddr,List)": "Removed IPUtil class: now that MXMechanism extends AMechanism they can share that method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408323 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getIPAddress()": "Remove NeutralException. Ignore problems in classes which should be removed anyware!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408283 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getAddressList(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.getFilename()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.getAddressList(String,int)": "Improved test-suite speed by reusing the SPF1Parser and SPF objects between tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408333 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.findARecord(Name)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneYamlTest.MailZoneSuite()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.UDPListener.UDPResponder(DatagramSocket,InetAddress,int,byte,ResponseGenerator)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.getAddress(String,int)": "-Renamed ErrorException to PermErrorExeption like its called in SPF-Specs\n-Create TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408289 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.createRegex(Collection)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.stringToInternal(String)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.AllMechanism.run(SPFSession)": "Now also Modifiers are simple SPFChecker and do not return any value.\nThe modifier will set a session attribute with its result, so that the Directive will be able to return the correct value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531131 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.getDnsServiceMockStyle()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.SPF1Data(String,String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.clearEntrys()": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.spf.IPAddr.get16Bit(int,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExistsMechanismn.init(String,String,int)": "Create ExistsMechanismn\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408271 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getMXRecords(String,int,boolean)": "Remove unneeded code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408222 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.UnknownModifier.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.macroExpandDomain(String,SPF1Data)": "Macro expand domain \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408252 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.SPFYamlTest(SPFYamlTestSuite,String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.getNibbleFormat(int)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IncludeException.IncludeException(String)": "Add includeException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408213 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.info(String,Throwable)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.replaceCell(String,MacroData,boolean)": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPUtil.checkAddressList(IPAddr,List)": "add a new class called IPUtil.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.IPAddrTest.testInvalidIp6Address()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getDepth()": "-Throw PermErrorException if we reached the maxDepth\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408337 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.getFilename()": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.getRecordsAsynch(DNSRequest,int,IResponseQueue)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.isInfoEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Data.getCurrentSenderPart()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.CleanupAndResultChecker.init(SPFChecker)": "Make use of nested classes instead of anonymous classes (simpler to debug, and reusable between calls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531168 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dns.DNSResponse.getResponse()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getTxtCatType(String)": "A lot of changes for JSPF-29 :\nFixed mailzone-tests.yml and tests.yml to use \"inverse-ip.in-addr.arpa\" instead of \"ip\" for PTR records\nUpdated rfc4408 test to the last available online: changed the first test to have 64 chars in the label instead of 54.\nAdded a toString() to all the mechanism/modifiers so that they give useful informations when printed out.\nIntroduced a DNSService.TimeoutException to be used instead of the TempErrorException in dns calls (added catch and rethrow TempError in the caller)\nRemoved the record specific calls from the DNSService interface in favor of the generic getRecord.\nMoved the SPF specific logic from DNSService to the caller terms/code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449683 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Request.getResponseQueue()": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NoneException.NoneException()": "Introduced a DNSService.setRecordLimit to change the default record lookup limit of 10.\nAdded few tests and removed unused code to increase coverage from 68 to 71%.\nConverted old tests to the new YAML format (JSPF-26).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448248 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setCurrentResult(String)": "Moved \"match\" and current result to spfData\nImplemented the RedirectModifier\nReviewed some failing test and commented in test.txt the wrong tests.\nWe only have 7 failing tests!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408344 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.isValidIP(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IP4Mechanism.config(ConfigurationMatch)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getInAddress(String)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.Inet6Util.isValidIPV4Address(String)": "Removed dependencies from InetAddress. Changed ip string checks to \"syntax only\" checks (no dns lookups).\nAdded an IPAddr test for IPV4 and IP6 address strings check\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408231 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.NoneException.NoneException()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.StagedMultipleSPFExecutor.execute(SPFSession,FutureSPFResult)": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServerTest.setUp()": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServerLauncher.main(String)": "Created a fake dnsserver launcher class.\nThis class allow running a fake dnsserver on the given interface/port reading the given yaml file and the given test suite description.\nIf the parameters are correct the server will start listening/answering until killed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572449 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getHostName()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.end(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Record.getExplanation()": "Fixes for parser\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408215 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.Log4JLogger.isWarnEnabled()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpand.expandMacroString(String,MacroData,boolean)": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.IP4Mechanism.getMaxCidr()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPF(DNSService)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.setTimeOut(int)": "Allow use of a custom Resolver (JSPF-61)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@680099 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.parse(String)": "Add some logs \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408399 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.lookupAndCreateTerm(Matcher,int)": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultSPF1Parser.initializePositions()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.getResult()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.unsigned(byte)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.expandDomain(String,MacroData)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTestSuite.addTest(String,String,String,String,String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFPolicyPostFilterChecker.SPFPolicyPostFilterChecker(PolicyPostFilter)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.getHeaderText()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSJnioAsynchService.getItem()": "First attempt to create a dnsjnio based asynchronous dns lookup service.\nCurrently it hardcoded the lookup to a local fake server \"127.0.0.1\" on a random port.\nThis will be soon replaced by the new ExtendedNonBlockingResolver that is a work-in-progress by Alex D. (dnsjnio author).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533797 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.getOverridePolicy()": "Added support for childloggers to ConsoleLogger (and write the logger name to output)\nMake use of ChildLoggers also in tests.\nAdded a main to org.apache.james.jspf.RFC4408YamlTest that use log4j (to help spf spec people testing our tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@489805 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlDNSService.getMXRecords(String,int)": "Removed masks from DNSService calls: we return single IP. The caller will have to handle masking.\nWe now pass all tests but 1 IPv6 test (See JSPF-25)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448185 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTest.internalLoadTests(String)": "Added TestStuites to run the official SPF YAML tests (see JSPF-25)\nThis new tests will broke the mvn packaging, because the tests do not pass now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@447381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.DNSProbe.getIPList(String,int)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getAddress(byte)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.NeutralException.NeutralException(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.rfcIP4MacroData.getTimeStamp()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.getOverridePolicy()": "Moved SPF to the impl package (single class package does not make sense. Most people will anyway use DefaultSPF from the impl package).\nMoved \"Enabling interfaces\" from _wiring_ to the same package of the service interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPFYamlTestDescriptor.getZonedata()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.group(int)": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.replaceHelper(Matcher,SPF1Data)": "Macro expand domain \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408252 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.getPattern()": "Initial Import (r246)\nTests not imported yet for licensing issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@405061 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getCurrentDomain()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.IResponseImpl.getValue()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.ConsoleLogger.error(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousSuite.MailZoneAsynchronousSuite()": "more generify again (JSPF-78)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@802431 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExistsMechanism.enableDNSService(DNSService)": "Moved enabling interfaces to the \"wiring\" package.\nRemoved services from SPF1Data.\nIntroduced a WiringService (in the wiring package).\nA component (Factory) creating childs to be serviced can use WiringService.wire(Object).\nPackages changes, names changes and few more refactoring have to be done.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452905 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.SPFPolicyPostFilterChecker(PolicyPostFilter)": "Refactored Policy handling to be executed via SPFChecker\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531189 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.MailZoneAsynchronousYamlTest.MailZoneAsynchronousYamlTest(SPFYamlTestSuite)": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.TempErrorException.TempErrorException()": "-Add AllMechanismn\n-Add TempErrorException\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408291 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.Inet6Util.isValidIP6Address(String)": "Removed dependencies from InetAddress. Changed ip string checks to \"syntax only\" checks (no dns lookups).\nAdded an IPAddr test for IPV4 and IP6 address strings check\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408231 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.getHeader()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.getFallbackPolicy()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Utils.checkAddressList(IPAddr,List)": "remove unneeded stuff\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408262 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1Utils.nameToResult(String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSLookupContinuation.getListener()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.MatcherBasedConfiguration.group(int)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.mechanismn.Directive.getQualifier()": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getPTRRecords(String)": "Simplifications for the previous DNSService refactoring (JSPF-29)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449606 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.DefaultExplanationChecker.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.UnknownModifier.run(SPF1Data)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.IPAddr.getHex(long)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.setResponse(IResponseImpl)": "Moved DNS requestType constants to DNSRequest.\nRefactore DNSService to use DNSRequest object as parameters.\nRemoved the asynch lookup method from the DNSService interface.\nAdded a DNSAsynchLookupService to run asynchronous lookups and created an adapter to simulate asynchronous behaviour given a synchronous DNSService (this uses a request queue and a working thread).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@532347 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.modifier.RedirectModifier.enforceSingleInstance()": "Splitted parser in parser + resulting record.\nRefactored parser to dynamically load mechanisms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408319 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1ParserTest.SPF1ParserTest(String)": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.DNSServiceXBillImpl.getRecords(String,int)": "Fix Nullpointer which get thrown if no Record was found.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@449711 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.exceptions.NeutralException.NeutralException()": "Start fixin failing yaml tests.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448155 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.MacroExpand.split(String,String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.SPFRetriever.retrieveSpfRecord(String)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF.checkSPF(SPF1Data)": "Add first logging to SPF\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408382 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.policies.local.FallbackPolicy.getSPFRecord(String,SPF1Record)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.runExistsCommand()": "DNSProbe refactoring: created a DNSService and a default DNSServiceXBillImpl.\nNow SPF and SPF1Data can take a DNSService in the constructor: if not passed it simply uses the DNSServiceXBillImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408233 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Command.isSPF1Command()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.IncludeMechanism.enableMacroExpand(MacroExpand)": "Removed dns dependency from SPF1Data: now MacroExpand has dns dependency and take care of managing this.\nIntroduced MacroExpandEnabled to declare dependency on MacroExpand services and moved it to a singleton service (performance improvement)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529341 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.popChecker()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF.checkSPF(String,String,String)": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408352 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.SPF1ParserTest.SPF1RecordTestSuite()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408362 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.SPF1Parser.getPattern()": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.isIPAddr(Object)": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.DefaultTermsFactory.getModifiersCollection()": "Introduced a Configuration parameter interface for Configurable.\nIntroduced an SPFRecordParser interface for the parser\nRefactored the parser to smaller components (introduced the TermsFactory, and its default implementation).\nSome class has been moved around to have a better package dependency structure.\nNow: overall coverage 75%, parser coverage 95%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@452836 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.parse(String)": "- Removed \"Exception\" in favor of PermError in MacroExpand\n- Removed unused fields from SPF and SPF1Data\n- Big parser refactoring (still in progress)\n- default Explanation moved to ExpModifier\n- Removed unused method from IPAddr\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408324 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.getCurrentDepth()": "-Throw PermErrorException if we reached the maxDepth\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408337 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.MacroExpand.encodeURL(String)": ".\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408225 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getTxtCatType(String)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.PTRMechanism.PTRMechanism()": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getARecords(String,int)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.generateReply(byte,int)": "Dummy implementation of an authoritative only DNSServer whose behaviour is configurable via Yaml zone definition (it also simulates timeouts and per lookup delays).\nWARNING: some of the code is inspired (and something copy/pasted) by jnamed.java file from dnsjava-2.0.3 demo sources. There's a pending issue about the correct way to \"publish\" this (I currently added a warning in the source headers and a sentence in the NOTICE.txt file).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533800 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.rfcIP4MacroData.getCurrentSenderPart()": "Test for MacroExpand (the ipv6 test fail!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408403 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.SPF1TestMockDNSService.getMXRecords(String,int)": "Added svn:eol-style = native to all text files, autoreformatted files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408432 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.MatchResultSubset.group()": "Refactoring: moved MatchResultSubset to the util package, added comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408332 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericMechanism.expandHost(SPF1Data)": "Thread safety for Terms (JSPF-3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408598 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.ExpModifier.getTxtType(DNSService,String)": "Update to new testsuite. Fix a bug with more then one explanation TXT-Record\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@496281 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSResponse.DNSResponse(TimeoutException)": "Basic Request/Response objects for asynchronous DNS lookups\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531078 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPF.setDefaultExplanation(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.escapeForMatcher(String)": "Correctly handle dollar sign in local-part of emailaddress. See JSPF-71. Thx to Frank Stolle for reporting\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@780297 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setCurrentDomain(String)": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.StagedMultipleSPFExecutor.isEmpty()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.dnsserver.DNSTestingServer.findSOARecord()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686995 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFSession.setAttribute(String,Object)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPFTest.runTest()": "Generalized ArrayList to List in DNSService, added HardCoded DNSServiceMock to return tested dns zones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408234 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testExample6_ipv6()": "Moved IPAddrTest to core package, changed the getNibble method, updated macroData test and create an SPF1Data test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408451 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.enableLogging(Logger)": "Complete refactoring of SPF class: introduced the concept of Policy and NestedPolicy.\nNow the SPF processing is based on a set (chain) of Policies. Basic behaviours have been added to the \"policies\" package and optional behaviours have been added to \"policies.local\" package.\nSPF1Record now contains an iterator method that return a chained iterator over the terms.\nSPF1Record now is able represents both a parsed record (previous record) or an unparsed spf record (String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@453241 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.NoneException.NoneException()": "init\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408211 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.terms.GenericModifier.config(MatchResult)": "Changed copyright to 2006, reorganized packages\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408366 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.IPAddr.isIPV6(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.SPFResult.getResult()": "Big class-shake to try removing a cyclic dependencies hell, Part 1 (JSPF-54)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@572835 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpand.subset(ArrayList)": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408AsynchronousYamlTest.suite()": "Refactored the AbstractYamlTest so that most behaviour is configurable:\n1) Ability to switch from mocked dnsservice to local \"fake dnsservice\".\n2) Ability to swtich from SynchronousExecutor to the StagedAsynchronous resolver and to use the single threaded dnsjava lookup, the multithreaded dnsjava lookup or the SEDA 2-threads dnsjnio lookup.\n3) Ability to run \"test groups\" (a group is a sequence of tests sharing the same \"fake\" dns zone) as a single test (to be able to run all of them and check results at the end, asynchronously if the executor was asynchronous)\n\nReconfigured the default testsuite as follow:\n1) run all tests as before via mocked dns server and synchronous executor\n2) run the full mailzone tests asynchronously via fake dnsserver and staged_dnsjnio_resolver\n3) run the full rfc4408 tests asynchronously (each block separately because they define different dns zones) via fake dnsserver and staged_dnsjava_multithread_resolver.\nIt takes 50 seconds on my laptop to complete...\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@533803 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.parser.TermDef.calcGroups(String)": "Reformat parser\nQualifier string now takes its value from the SPF1Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408381 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF.getExplanation()": "-SPF class now use the new classes\n-fix a bug which let SPF1Parser throw a NumberFormatException\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408292 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.Inet6Util.isValidIP6Address(String)": "Move Inet6Util to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408276 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.getExplanation()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.DNSServiceXBillImpl.DNSServiceXBillImpl()": "JSPF-105 Rely on slf4j-api for logging\n", "org.apache.james.jspf.impl.SPF.setUseTrustedForwarder(boolean)": "Moved SPF to the impl package (single class package does not make sense. Most people will anyway use DefaultSPF from the impl package).\nMoved \"Enabling interfaces\" from _wiring_ to the same package of the service interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@576205 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.DNSResolver.lookup(DNSService,DNSRequest)": "Temporary example on how the AMechanism will need to change to support the events.\nWARNING: This introduces compilation errors around and changes to interfaces that will need to be reverted later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531089 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.util.IPAddr.getReverseIP()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.util.IPAddr.isIP4()": "Move IPAddr to util package\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408274 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.MacroExpandTest.testExample4()": "Move MacroData to core package (same afferent/efferent dependencies). A single class in a package means too much fragmentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@574390 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.spf.modifier.RedirectModifier.enforceSingleInstance()": "rename package from spf to jspf\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408363 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyPostFilterChecker.toString()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.IP6Mechanism.run(SPF1Data)": "Unfinished/Untested parser/Lexer refactoring.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408309 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.mechanismn.ExistsMechanism.run(SPF1Data)": "Mechanisms overall review / fixes.\nPTR/EXISTS/INCLUDE directly extends GenericMechanism\nMX extends AMechanism\nIP6 extends IP4Mechanism\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408312 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1TestMockDNSService.getPTRRecords(String)": "SPF1Test refactored to run tests in order and moved the MockDSNService to a different class.\nNow only 29 SPF tests fail, while we pass all parser tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408340 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.util.PTRResponseListener.setDNSService(DNSService)": "Use nested classes for macro expansion\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531169 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Data.setRedirectDomain(String)": "Add RedirectModifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408296 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.RFC4408YamlTest.RFC4408YamlTest(SPFYamlTestDescriptor)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.spf.SPF1Parser.lookupAndCreateTerm(MatchResult,int)": "Parser refactoring (in-progress). Now we use only 1 dynamically generated, dynamically looked-up, regex for the whole parsing!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408331 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.testPercO()": "First step of refactoring to make MacroExpand a service (thread-safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@529232 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.macro.MacroExpandTest.getIpAddress()": "-Support for ipv6 macros!\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@408450 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.AbstractYamlTest.getRecordLimit()": "Moved common YAML test code to AbstractYamlTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@448260 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.SPFResult.getExplanation()": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.FutureSPFResult.getHeaderText()": "FutureSPFResult and first approach to asynchronous Lookup.\nCreated a StagedMultipleSPFExecutor that should handle asynchronous processing via 1 working thread.\nCurrently the dns call is still synchronous (not yet imported dnsjnio)\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531245 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.executor.FutureSPFResult.FutureSPFResult()": "Make sure all registered IFutureSPFResultListener get executed even on an unchecked Exception. See JSPF-95\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@1205834 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.impl.SPFPolicyChecker.SPFPolicyChecker(Policy)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.DNSLookupContinuation.DNSLookupContinuation(DNSRequest,SPFCheckerDNSResponseListener)": "DNS Lookups are no more a responsibility of SPFChecker / SPFCheckerDNSResponseListener but they simply have to return a DNSLookupContinuation object including informations about the lookup they need and where to start the processing when the response is available.\nif an SPFChecker/SPFCheckerDNSResponseListener returns null then it means it completed the processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/branches/asynch-jspf@531177 13f79535-47bb-0310-9956-ffa450edef68\n", "org.apache.james.jspf.core.exceptions.NeutralException.NeutralException(String)": "Make space for multimodule-proposal branch code (JSPF-63)\nPrefer to copy single subfolders instead of copy the branch over trunk because some tool is unhappy when the main folder is replaced.\n\ngit-svn-id: https://svn.apache.org/repos/asf/james/jspf/trunk@686992 13f79535-47bb-0310-9956-ffa450edef68\n"}